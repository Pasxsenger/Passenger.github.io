<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据结构课程设计实验四</title>
      <link href="/2020/03/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E5%9B%9B/"/>
      <url>/2020/03/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E5%9B%9B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>哈夫曼编/译码器</p><h2 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h2><p>哈夫曼编/译码器问题：利用哈夫曼编码（加密）进行信息通讯可以大大提高信道利用率，缩短信息传输时间，降低传输成本，保证报文安全。这要求在发送端通过一个编码系统对待传数据预先编码；在接收端将传来的数据进行译码（解密）。</p><h2 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h2><p>1.初始化 (Initialization)：从终端读入n个字符，建立哈夫曼树；</p><p>2.编码 (Coding)：利用已建好的哈夫曼树，对字符进行编码，然后将正文编码结果存入文件codefile.txt中；</p><p>3.译码 (Decoding)：利用已建好的哈夫曼树将文件codefile.txt中的代码进行译码，结果存入文件textfile.txt中。</p><h2 id="代码清单"><a href="#代码清单" class="headerlink" title="代码清单"></a>代码清单</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">encoder = &#123;&#125;</span><br><span class="line">decoder = &#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">treeNode</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        self.weight = data[<span class="number">0</span>]</span><br><span class="line">        self.frequency = data[<span class="number">1</span>]</span><br><span class="line">        self.left_child = <span class="literal">None</span></span><br><span class="line">        self.right_child = <span class="literal">None</span></span><br><span class="line">        self.code = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">nodeQueue</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, codes)</span>:</span></span><br><span class="line">        self.queue = createNodeQueue(codes)</span><br><span class="line">        self.length = len(self.queue)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addNode</span><span class="params">(self, node)</span>:</span></span><br><span class="line">        self.queue = addNodeQueue(self.queue, node)</span><br><span class="line">        self.length += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deleteNode</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.length -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> self.queue.pop(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createNodeQueue</span><span class="params">(codes)</span>:</span></span><br><span class="line">    que = []</span><br><span class="line">    <span class="keyword">for</span> code <span class="keyword">in</span> codes:</span><br><span class="line">        que.append(treeNode(code))</span><br><span class="line">    <span class="keyword">return</span> que</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">addNodeQueue</span><span class="params">(queue, new_node)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(queue) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> [new_node]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(queue)):</span><br><span class="line">        <span class="keyword">if</span> queue[i].frequency &gt;= new_node.frequency:</span><br><span class="line">            <span class="keyword">return</span> queue[:i] + [new_node] + queue[i:]</span><br><span class="line">    <span class="keyword">return</span> queue + [new_node]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">countFreq</span><span class="params">(input_str)</span>:</span></span><br><span class="line">    match = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> input_str:</span><br><span class="line">        <span class="keyword">if</span> ch <span class="keyword">in</span> match:</span><br><span class="line">            match[ch] += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            match[ch] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> sorted(match.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createTree</span><span class="params">(node_queue)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> node_queue.length != <span class="number">1</span>:</span><br><span class="line">        node_lchild = node_queue.deleteNode()</span><br><span class="line">        node_rchild = node_queue.deleteNode()</span><br><span class="line">        node_parent = treeNode([<span class="literal">None</span>, node_lchild.frequency + node_rchild.frequency])</span><br><span class="line">        node_parent.left_child = node_lchild</span><br><span class="line">        node_parent.right_child = node_rchild</span><br><span class="line">        node_queue.addNode(node_parent)</span><br><span class="line">    <span class="keyword">return</span> node_queue.deleteNode()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">initCoder</span><span class="params">(node, x)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> coder</span><br><span class="line">    <span class="keyword">if</span> node:</span><br><span class="line">        initCoder(node.left_child, x + <span class="string">'0'</span>)</span><br><span class="line">        node.code += x</span><br><span class="line">        <span class="keyword">if</span> node.weight:</span><br><span class="line">            decoder[node.code] = node.weight</span><br><span class="line">            encoder[node.weight] = node.code</span><br><span class="line">        initCoder(node.right_child, x + <span class="string">'1'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span><span class="params">(en_str)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> encoder</span><br><span class="line">    encode = <span class="string">""</span></span><br><span class="line">    print(<span class="string">"\nCoding..."</span>)</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> en_str:</span><br><span class="line">        encode += encoder[c]</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'D:\\stu\\大二下\\数据结构课程设计\\实验四\\codefile.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(encode)</span><br><span class="line">    print(<span class="string">"Coding succeed!\nIt is saved in: D:\\stu\\大二下\\数据结构课程设计\\实验四\\codefile.txt\n"</span>)</span><br><span class="line">    <span class="keyword">return</span> encode</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span><span class="params">(de_str)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> decoder</span><br><span class="line">    decode = <span class="string">""</span></span><br><span class="line">    tmp = <span class="string">""</span></span><br><span class="line">    print(<span class="string">"Decoding..."</span>)</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> de_str:</span><br><span class="line">        tmp += c</span><br><span class="line">        <span class="keyword">if</span> tmp <span class="keyword">in</span> decoder:</span><br><span class="line">            decode += decoder[tmp]</span><br><span class="line">            tmp = <span class="string">""</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'D:\\stu\\大二下\\数据结构课程设计\\实验四\\textfile.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(decode)</span><br><span class="line">    print(<span class="string">"Decoding succeed!\nIt is saved in: D:\\stu\\大二下\\数据结构课程设计\\实验四\\textfile.txt"</span>)</span><br><span class="line">    <span class="keyword">return</span> decode</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    myStr = input(<span class="string">"Please enter the character to encode:"</span>)</span><br><span class="line">    myQueue = nodeQueue(countFreq(myStr))</span><br><span class="line">    myTree = createTree(myQueue)</span><br><span class="line">    initCoder(myTree, <span class="string">''</span>)</span><br><span class="line">    enStr = encode(myStr)</span><br><span class="line">    decode(enStr)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Algorithms and Data Structures </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Structure Experiment </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构课程设计实验三</title>
      <link href="/2020/03/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%B8%89/"/>
      <url>/2020/03/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%B8%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>单词检索统计程序</p><h2 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h2><p>给定一个文本文件（见文后注意事项），要求统计给定单词在文本中出现的总次数，并检索输出某个单词出现在文本中的行号、在该行中出现的次数以及位置。</p><h2 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h2><p>使用者可创建自己命名的.txt文件，并写入其内容；还可以输入搜索的词并查找其出现次数、行号和所在的句子。</p><h2 id="代码清单"><a href="#代码清单" class="headerlink" title="代码清单"></a>代码清单</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> string <span class="keyword">import</span> punctuation</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_file</span><span class="params">(name, msg)</span>:</span></span><br><span class="line">    partial_path = <span class="string">"D:\\Program Files (x86)\\JetBrains\\PyCharm 2019.2.4\\MyCode\\date_structure\\"</span></span><br><span class="line">    full_path = partial_path + name + <span class="string">'.txt'</span></span><br><span class="line">    <span class="keyword">global</span> full_name</span><br><span class="line">    full_name = full_path</span><br><span class="line">    file = open(full_path, <span class="string">'w'</span>)</span><br><span class="line">    file.write(msg)</span><br><span class="line">    print(<span class="string">"File created successfully\n"</span>)</span><br><span class="line">    print(full_name)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_query</span><span class="params">(wanted)</span>:</span></span><br><span class="line">    word_total = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> one_word_list:</span><br><span class="line">        <span class="keyword">if</span> each == wanted:</span><br><span class="line">            word_total += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'"&#123;&#125;" occurs &#123;&#125; times'</span>.format(wanted, word_total))</span><br><span class="line"></span><br><span class="line">    line_number = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> text_list:</span><br><span class="line">        line_plain = re.sub(<span class="string">r'[&#123;&#125;]'</span>.format(punctuation), <span class="string">''</span>, line)</span><br><span class="line">        word_list = [word.lower() <span class="keyword">for</span> word <span class="keyword">in</span> line_plain.split()]</span><br><span class="line">        line_number += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> wanted <span class="keyword">in</span> word_list:</span><br><span class="line">            print(<span class="string">'\tline &#123;&#125;: &#123;&#125;'</span>.format(line_number, text_list[line_number - <span class="number">1</span>]), end=<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        print(<span class="string">"1.create file\n2.count and locate\n3.quit\n"</span>)</span><br><span class="line">        choice = input(<span class="string">"Please enter the choice number:\n"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> choice == <span class="string">"1"</span>:</span><br><span class="line">            name = input(<span class="string">"Please enter the name of file:\n"</span>)</span><br><span class="line">            msg = input(<span class="string">"Please enter the contents:\n"</span>)</span><br><span class="line">            create_file(name, msg)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">"2"</span>:</span><br><span class="line">            wanted = input(<span class="string">"Please enter the word:\n"</span>)</span><br><span class="line">            text = open(full_name, <span class="string">'r'</span>)</span><br><span class="line">            text_list = text.readlines()</span><br><span class="line">            text_plain = re.sub(<span class="string">r'[&#123;&#125;]'</span>.format(punctuation), <span class="string">''</span>, <span class="string">''</span>.join(text_list))</span><br><span class="line">            one_word_list = [word.lower() <span class="keyword">for</span> word <span class="keyword">in</span> text_plain.split()]</span><br><span class="line">            print(one_word_list)</span><br><span class="line">            run_query(wanted)</span><br><span class="line">            print(<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"Thanks for using!\nBye~"</span>)</span><br><span class="line">            sys.exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Algorithms and Data Structures </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Structure Experiment </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构课程设计实验二</title>
      <link href="/2020/03/08/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%BA%8C/"/>
      <url>/2020/03/08/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>银行排队系统</p><h2 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h2><p>大家肯定都曾经去银行办过业务，例如我们东门口的中国银行山大分行。银行排队采用的是链式队列，逻辑上相邻，物理上可以不相邻。本次实验要求大家做一个<strong>“快应用”</strong>，功能上只需要实现队列的FIFO即可</p><p>很多同学是第一次开发<strong>快应用</strong>，因为时间原因，我们这次对物理结构不做要求（链式，顺序）均可。安卓手机请先安装一个快应用调试器，用调试器打开rpk安装包进入快应用，非安卓手机的同学请安装模拟器。17级的徐莫迟同学作为本次作业的技术顾问，专门写了一份文档，内容详实，请参考<a href="http://xmcblog.com/2020/02/27/。" target="_blank" rel="noopener">http://xmcblog.com/2020/02/27/。</a></p><h2 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h2><p>到银行办理业务的顾客通过快应用扫码向服务器发送入队请求并入队，同时后端定时弹出队头。用户可通过点击屏幕按钮查询自己在队伍中的位置。</p><h2 id="代码清单"><a href="#代码清单" class="headerlink" title="代码清单"></a>代码清单</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">（1）index.ux</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"demo-page"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>欢迎使用<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 点击跳转详情页 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"扫码排队"</span> <span class="attr">onclick</span>=<span class="string">"scanQR"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"查询位置"</span> <span class="attr">onclick</span>=<span class="string">"query"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span> = <span class="string">"image"</span> <span class="attr">src</span> = <span class="string">"https://s2.ax1x.com/2020/03/08/3zJfSJ.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">img</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">import router from '@system.router'</span><br><span class="line">import prompt from '@system.prompt'</span><br><span class="line">import barcode from '@system.barcode'</span><br><span class="line">import device from '@system.device'</span><br><span class="line">import fetch from '@system.fetch'</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  private: &#123;</span><br><span class="line">    id:'',</span><br><span class="line">    url:'',</span><br><span class="line">  &#125;,</span><br><span class="line">  onInit() &#123;</span><br><span class="line">    const self = this</span><br><span class="line">    device.getUserId(&#123;</span><br><span class="line">      success: (data) =&gt; &#123;</span><br><span class="line">        self.id = data.userId</span><br><span class="line">        prompt.showToast(&#123;</span><br><span class="line">          message: 'ID got'</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  scanQR()&#123;</span><br><span class="line">    const self = this</span><br><span class="line">    barcode.scan(&#123;</span><br><span class="line">      success: (data) =&gt; &#123;</span><br><span class="line">        self.url = data.result</span><br><span class="line">        fetch.fetch(&#123;</span><br><span class="line">          url: self.url + '1',</span><br><span class="line">          data: &#123;"id": self.id&#125;,</span><br><span class="line">          method: 'GET',</span><br><span class="line">          responseType: 'text',</span><br><span class="line">          success: (response) =&gt; &#123;</span><br><span class="line">            prompt.showToast(&#123;</span><br><span class="line">              message: response.data</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;,</span><br><span class="line">          fail: (data, code) =&gt; &#123;</span><br><span class="line">            prompt.showToast(&#123;</span><br><span class="line">              message: '排队失败请检查网络'</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      fail: (data, code) =&gt; &#123;</span><br><span class="line">        prompt.showToast(&#123;</span><br><span class="line">          message: '获取相机权限失败'</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  query() &#123;</span><br><span class="line">    const self = this</span><br><span class="line">    fetch.fetch(&#123;</span><br><span class="line">      url: self.url + '2',</span><br><span class="line">      data: &#123;'id': self.id&#125;,</span><br><span class="line">      method: 'GET',</span><br><span class="line">      responseType: 'text',</span><br><span class="line">      success: (response) =&gt; &#123;</span><br><span class="line">        prompt.showToast(&#123;</span><br><span class="line">          message: response.data</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      fail: (data, code) =&gt; &#123;</span><br><span class="line">        prompt.showToast(&#123;</span><br><span class="line">          message: '查询失败请先扫码'</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  .demo-page &#123;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    align-items: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .title &#123;</span><br><span class="line">    font-size: 40px;</span><br><span class="line">    text-align: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .image &#123;</span><br><span class="line">  border-radius: 8px;  </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .btn &#123;</span><br><span class="line">    width: 550px;</span><br><span class="line">    height: 86px;</span><br><span class="line">    margin-top: 75px;</span><br><span class="line">    border-radius: 43px;</span><br><span class="line">    background-color: #09ba07;</span><br><span class="line">    font-size: 30px;</span><br><span class="line">    color: #ffffff;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">q = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/1', methods=['POST', 'GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index1</span><span class="params">()</span>:</span></span><br><span class="line">    id = request.args.get(<span class="string">'id'</span>)</span><br><span class="line">    <span class="keyword">if</span> q.count(id):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'当前已在队列中'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        q.append(id)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'排队成功'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/2', methods=['POST', 'GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index2</span><span class="params">()</span>:</span></span><br><span class="line">    id = request.args.get(<span class="string">'id'</span>)</span><br><span class="line">    <span class="keyword">if</span> q.count(id):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'您当前所排的位置是'</span> + str(q.index(id) + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'您当前不在队列中'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">popque</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        time.sleep(<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">if</span> q:</span><br><span class="line">            q.pop(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    t = threading.Thread(target=popque)</span><br><span class="line">    t.start()</span><br><span class="line">    app.run(debug=<span class="literal">True</span>, host=<span class="string">'192.168.31.120'</span>)</span><br><span class="line">    t.join()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Algorithms and Data Structures </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Structure Experiment </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构课程设计实验一</title>
      <link href="/2020/02/25/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%B8%80/"/>
      <url>/2020/02/25/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>考试报名管理系统</p><h2 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h2><p>​        考试报名给各高校报名工作带来了新的挑战，给教务管理部门增加了很大的工作量，报名数据手工录入既费时又会不可避免地出现错误。本项目是对考试报名管理的简单模拟，请用<strong>菜单选择方式</strong>完成下列功能：输入考生信息；输出考生信息；查询考生信息；添加考生信息；修改考生信息；删除考生信息。</p><h2 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h2><ol><li><p>打开功能：可在用户界面从.txt文件中的信息显示到表格中。</p></li><li><p>显示功能：完成全部记录的显示。</p></li><li><p>查找功能：完成按姓名查找学生信息功能并显示，可分为精确查询和模糊查询。</p></li><li><p>排序功能：按录入的准考证号依次排序显示。</p></li><li><p>编辑功能：对指定的学生的信息进行编辑，更改ArrayList中的值。</p></li><li><p>删除功能：选中学生，将其从ArrayList中删除。</p></li><li><p>保存功能：将查询到的学生信息保存在选择目录的.txt文件下。</p></li></ol><h2 id="代码清单"><a href="#代码清单" class="headerlink" title="代码清单"></a>代码清单</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//（1）GUI</span></span><br><span class="line"><span class="keyword">package</span> data_structure;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Vector;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.DefaultTableModel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.JTableHeader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GUI</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> JTable jtb;</span><br><span class="line">    <span class="keyword">private</span> DefaultComboBoxModel&lt;String&gt; combo;</span><br><span class="line">    <span class="keyword">private</span> JTextField jtf;</span><br><span class="line">    <span class="keyword">private</span> DefaultTableModel table;</span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;Management&gt; stu;</span><br><span class="line">    <span class="keyword">private</span> JFileChooser jfc;</span><br><span class="line">    <span class="keyword">private</span> Comparator&lt;Management&gt; cmp;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GUI</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(<span class="string">"考试报名管理系统"</span>);</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">350</span>, <span class="number">150</span>, <span class="number">1200</span>, <span class="number">700</span>);</span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class="line">        <span class="keyword">this</span>.setLayout(<span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">this</span>.jfc = <span class="keyword">new</span> JFileChooser();</span><br><span class="line">        <span class="keyword">this</span>.jfc.setFileFilter(<span class="keyword">new</span> Filter(<span class="string">"文本文件(*.txt)"</span>,<span class="string">"txt"</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//顶部菜单栏</span></span><br><span class="line">        JMenuBar jmb = <span class="keyword">new</span> JMenuBar();</span><br><span class="line">        JMenu jm = <span class="keyword">new</span> JMenu(<span class="string">"文件"</span>);</span><br><span class="line">        JMenuItem jm1 = <span class="keyword">new</span> JMenuItem(<span class="string">"保存"</span>);</span><br><span class="line">        jm1.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">        JMenuItem jm2 = <span class="keyword">new</span> JMenuItem(<span class="string">"打开"</span>);</span><br><span class="line">        jm2.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">        jm.add(jm1);</span><br><span class="line">        jm.add(jm2);</span><br><span class="line">        jmb.add(jm);</span><br><span class="line">        jmb.setBounds(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1200</span>,<span class="number">30</span>);</span><br><span class="line">        <span class="keyword">this</span>.add(jmb);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//按钮面板</span></span><br><span class="line">        JPanel jp = <span class="keyword">new</span> JPanel();</span><br><span class="line">        <span class="comment">//下拉列表</span></span><br><span class="line">        combo = <span class="keyword">new</span> DefaultComboBoxModel&lt;String&gt;();</span><br><span class="line">        JComboBox&lt;String&gt; jcb = <span class="keyword">new</span> JComboBox&lt;String&gt;(combo);</span><br><span class="line">        combo.addElement(<span class="string">"模糊查询"</span>);</span><br><span class="line">        combo.addElement(<span class="string">"精确查询"</span>);</span><br><span class="line">        jcb.setFont(<span class="keyword">new</span> Font(<span class="string">"宋体"</span>,Font.PLAIN,<span class="number">20</span>));</span><br><span class="line">        jp.add(jcb);</span><br><span class="line">        <span class="comment">//标签</span></span><br><span class="line">        JLabel jl = <span class="keyword">new</span> JLabel(<span class="string">"输入学生姓名"</span>);</span><br><span class="line">        jl.setFont(<span class="keyword">new</span> Font(<span class="string">"宋体"</span>,Font.PLAIN,<span class="number">20</span>));</span><br><span class="line">        jp.add(jl);</span><br><span class="line">        <span class="comment">//输入框</span></span><br><span class="line">        jtf = <span class="keyword">new</span> JTextField(<span class="string">""</span>,<span class="number">20</span>);</span><br><span class="line">        jtf.setFont(<span class="keyword">new</span> Font(<span class="string">"宋体"</span>,Font.PLAIN,<span class="number">20</span>));</span><br><span class="line">        jp.add(jtf);</span><br><span class="line">        <span class="comment">//按钮</span></span><br><span class="line">        String[] buttonNames = &#123;<span class="string">"查询"</span>, <span class="string">"编辑"</span>, <span class="string">"添加"</span>, <span class="string">"删除"</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; buttonNames.length; i++) &#123;</span><br><span class="line">            JButton jb = <span class="keyword">new</span> JButton(buttonNames[i]);</span><br><span class="line">            jb.setFont(<span class="keyword">new</span> Font(<span class="string">"宋体"</span>,Font.PLAIN,<span class="number">20</span>));</span><br><span class="line">            jb.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">            jp.add(jb);</span><br><span class="line">        &#125;</span><br><span class="line">        jp.setBounds(<span class="number">0</span>,<span class="number">30</span>,<span class="number">1200</span>,<span class="number">50</span>);</span><br><span class="line">        <span class="keyword">this</span>.add(jp);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//显示信息的表格</span></span><br><span class="line">        Vector&lt;String&gt; column = <span class="keyword">new</span> Vector&lt;String&gt;();</span><br><span class="line">        String[] columnNames = &#123;<span class="string">"准考证号"</span>, <span class="string">"姓名"</span>, <span class="string">"性别"</span>, <span class="string">"年龄"</span>, <span class="string">"成绩"</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; columnNames.length; i++)</span><br><span class="line">            column.add(columnNames[i]);</span><br><span class="line"></span><br><span class="line">        table = <span class="keyword">new</span> DefaultTableModel(column, <span class="number">0</span>);</span><br><span class="line">        jtb = <span class="keyword">new</span> JTable(table);</span><br><span class="line">        JScrollPane jsp = <span class="keyword">new</span> JScrollPane(jtb);</span><br><span class="line">        jtb.setRowHeight(<span class="number">30</span>);<span class="comment">//设置表格行宽</span></span><br><span class="line">        jtb.setFont(<span class="keyword">new</span> Font(<span class="string">"宋体"</span>,Font.PLAIN,<span class="number">25</span>));<span class="comment">//设置表格字体</span></span><br><span class="line">        JTableHeader head = jtb.getTableHeader();</span><br><span class="line">        head.setPreferredSize(<span class="keyword">new</span> Dimension(head.getWidth(),<span class="number">40</span>));<span class="comment">//设置表头大小</span></span><br><span class="line">        head.setFont(<span class="keyword">new</span> Font(<span class="string">"微软雅黑"</span>,Font.PLAIN,<span class="number">25</span>));<span class="comment">//设置表头字体</span></span><br><span class="line"></span><br><span class="line">        jtb.setBounds(<span class="number">10</span>,<span class="number">120</span>,<span class="number">1160</span>,<span class="number">500</span>);</span><br><span class="line">        jsp.setBounds(<span class="number">10</span>,<span class="number">100</span>,<span class="number">1160</span>,<span class="number">500</span>);</span><br><span class="line">        <span class="keyword">this</span>.add(jsp);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//排序</span></span><br><span class="line">        cmp = Comparator.comparingInt(m -&gt; Integer.valueOf(m.examno));</span><br><span class="line"></span><br><span class="line">        stu = <span class="keyword">new</span> ArrayList&lt;Management&gt;();</span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);<span class="comment">//设为可见</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把stu中的信息显示到表格里</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">showStu</span><span class="params">(DefaultTableModel table, ArrayList&lt;Management&gt; stu)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(Management m:stu) &#123;</span><br><span class="line">            String[] info = <span class="keyword">new</span> String[]&#123;m.examno, m.name, m.sex, String.valueOf(m.age), String.valueOf(m.grade)&#125;;</span><br><span class="line">            table.addRow(info);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(e.getActionCommand()) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"查询"</span>:</span><br><span class="line">                <span class="keyword">switch</span>(combo.getSelectedItem().toString()) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"模糊查询"</span>:</span><br><span class="line">                        table.setRowCount(<span class="number">0</span>);</span><br><span class="line">                        String inputF = jtf.getText().trim();</span><br><span class="line">                        <span class="keyword">for</span>(Management m: stu) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(m.name.contains(inputF)) &#123;</span><br><span class="line">                                String[]info = <span class="keyword">new</span> String[]&#123;m.examno, m.name, m.sex, String.valueOf(m.age), String.valueOf(m.grade)&#125;;</span><br><span class="line">                                table.addRow(info);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"精确查询"</span>:</span><br><span class="line">                        table.setRowCount(<span class="number">0</span>);</span><br><span class="line">                        String inputA = jtf.getText().trim();</span><br><span class="line">                        <span class="keyword">for</span>(Management m: stu) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(m.name.equals(inputA)) &#123;</span><br><span class="line">                                String[]info = <span class="keyword">new</span> String[]&#123;m.examno, m.name, m.sex, String.valueOf(m.age),</span><br><span class="line">                                        String.valueOf(m.grade)&#125;;</span><br><span class="line">                                table.addRow(info);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="string">"编辑"</span>:</span><br><span class="line">                <span class="keyword">new</span> EditFrame(table, stu, jtb);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="string">"添加"</span>:</span><br><span class="line">                <span class="keyword">new</span> AddFrame(table, stu);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="string">"删除"</span>:</span><br><span class="line">                <span class="keyword">int</span> row = jtb.getSelectedRow();<span class="comment">//获取要删除的行号</span></span><br><span class="line">                stu.remove(row);<span class="comment">//删除所选行</span></span><br><span class="line"><span class="comment">//                refresh(table, stu);</span></span><br><span class="line">                table.setRowCount(<span class="number">0</span>);</span><br><span class="line">                Collections.sort(stu, cmp);</span><br><span class="line">                showStu(table,stu);<span class="comment">//重新打开</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="string">"保存"</span>:</span><br><span class="line">                <span class="keyword">if</span>(jfc.showSaveDialog(<span class="keyword">this</span>) == JFileChooser.APPROVE_OPTION) &#123;</span><br><span class="line">                    Filter filter = (Filter) jfc.getFileFilter();</span><br><span class="line">                    String ends = filter.getExt();</span><br><span class="line">                    File newFile= <span class="keyword">new</span> File(jfc.getSelectedFile().getAbsolutePath() + <span class="string">'.'</span> + ends);</span><br><span class="line">                    <span class="keyword">if</span> (!newFile.exists()) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            newFile.createNewFile();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e1) &#123;</span><br><span class="line">                            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">                            e1.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    IO.writeTo(newFile, stu);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="string">"打开"</span>:</span><br><span class="line">                <span class="keyword">if</span>(jfc.showOpenDialog(<span class="keyword">this</span>) == JFileChooser.APPROVE_OPTION) &#123;</span><br><span class="line">                    File file = jfc.getSelectedFile();</span><br><span class="line">                    stu.clear();</span><br><span class="line">                    IO.readFrom(file, stu);</span><br><span class="line">                    table.setRowCount(<span class="number">0</span>);</span><br><span class="line">                    showStu(table, stu);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> GUI();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//（2）EditFrame</span></span><br><span class="line"><span class="keyword">package</span> data_structure;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.DefaultTableModel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EditFrame</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> JTextField[] jtf;</span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;Management&gt; stu;</span><br><span class="line">    <span class="keyword">private</span> DefaultTableModel table;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> notNull = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> Comparator&lt;Management&gt; cmp;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> row;</span><br><span class="line"></span><br><span class="line">    EditFrame(DefaultTableModel table, ArrayList&lt;Management&gt; stu, JTable jtb) &#123;</span><br><span class="line">        <span class="keyword">super</span>(<span class="string">"Edit Student"</span>);</span><br><span class="line">        <span class="keyword">this</span>.stu = stu;</span><br><span class="line">        <span class="keyword">this</span>.table = table;</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">700</span>, <span class="number">260</span>, <span class="number">500</span>, <span class="number">480</span>);</span><br><span class="line">        <span class="keyword">this</span>.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">6</span>, <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        cmp = Comparator.comparingInt(s -&gt; Integer.parseInt(s.examno));</span><br><span class="line"></span><br><span class="line">        JPanel[] jp = <span class="keyword">new</span> JPanel[<span class="number">6</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; jp.length; i++) &#123;</span><br><span class="line">            jp[i] = <span class="keyword">new</span> JPanel();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        jtf = <span class="keyword">new</span> JTextField[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; jtf.length; i++) &#123;</span><br><span class="line">            jtf[i] = <span class="keyword">new</span> JTextField(<span class="string">""</span>, <span class="number">10</span>);</span><br><span class="line">            jtf[i].setFont(<span class="keyword">new</span> Font(<span class="string">"宋体"</span>,Font.PLAIN,<span class="number">20</span>));</span><br><span class="line">            String[] columnNames = &#123;<span class="string">"准考证号"</span>, <span class="string">"姓名"</span>, <span class="string">"性别"</span>, <span class="string">"年龄"</span>, <span class="string">"成绩"</span>&#125;;</span><br><span class="line">            JLabel jlb = <span class="keyword">new</span> JLabel(columnNames[i]);</span><br><span class="line">            jlb.setFont(<span class="keyword">new</span> Font(<span class="string">"宋体"</span>,Font.PLAIN,<span class="number">20</span>));</span><br><span class="line">            jp[i].add(jlb);</span><br><span class="line">            jp[i].add(jtf[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        row = jtb.getSelectedRow();</span><br><span class="line">        jtf[<span class="number">0</span>].setText(stu.get(row).examno);</span><br><span class="line">        jtf[<span class="number">1</span>].setText(stu.get(row).name);</span><br><span class="line">        jtf[<span class="number">2</span>].setText(stu.get(row).sex);</span><br><span class="line">        jtf[<span class="number">3</span>].setText(String.valueOf(stu.get(row).age));</span><br><span class="line">        jtf[<span class="number">4</span>].setText(String.valueOf(stu.get(row).grade));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String[] buttonNames = &#123;<span class="string">"确认"</span>, <span class="string">"取消"</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (String buttonName : buttonNames) &#123;</span><br><span class="line">            JButton button = <span class="keyword">new</span> JButton(buttonName);</span><br><span class="line">            button.setFont(<span class="keyword">new</span> Font(<span class="string">"宋体"</span>, Font.PLAIN, <span class="number">20</span>));</span><br><span class="line">            button.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">            jp[<span class="number">5</span>].add(button);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (JPanel jPanel : jp) <span class="keyword">this</span>.add(jPanel);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (e.getActionCommand()) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"确认"</span>:</span><br><span class="line">                stu.remove(row);</span><br><span class="line">                <span class="keyword">for</span> (JTextField jTextField : jtf)</span><br><span class="line">                    <span class="keyword">if</span> (jTextField.getText().isEmpty()) &#123;</span><br><span class="line">                        JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"添加学生信息不能为空"</span>);</span><br><span class="line">                        notNull = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">this</span>.setVisible(<span class="keyword">false</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">if</span> (notNull == <span class="number">1</span>) &#123;</span><br><span class="line">                    Management newstu = <span class="keyword">new</span> Management(jtf[<span class="number">0</span>].getText(), jtf[<span class="number">1</span>].getText(), jtf[<span class="number">2</span>].getText(),</span><br><span class="line">                            Integer.parseInt(jtf[<span class="number">3</span>].getText().trim()), Double.parseDouble(jtf[<span class="number">4</span>].getText().trim()));</span><br><span class="line">                    stu.add(newstu);</span><br><span class="line">                    stu.sort(cmp);</span><br><span class="line">                    table.setRowCount(<span class="number">0</span>);</span><br><span class="line">                    GUI.showStu(table, stu);</span><br><span class="line">                    <span class="keyword">this</span>.setVisible(<span class="keyword">false</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="string">"取消"</span>:</span><br><span class="line">                <span class="keyword">this</span>.setVisible(<span class="keyword">false</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//（3）AddFrame</span></span><br><span class="line"><span class="keyword">package</span> data_structure;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.DefaultTableModel;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddFrame</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> JTextField[] jtf;</span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;Management&gt; stu;</span><br><span class="line">    <span class="keyword">private</span> DefaultTableModel table;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> notNull = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> Comparator&lt;Management&gt; cmp;</span><br><span class="line"></span><br><span class="line">    AddFrame(DefaultTableModel table, ArrayList&lt;Management&gt; stu) &#123;</span><br><span class="line">        <span class="keyword">super</span>(<span class="string">"添加学生信息"</span>);</span><br><span class="line">        <span class="keyword">this</span>.stu = stu;</span><br><span class="line">        <span class="keyword">this</span>.table = table;</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">700</span>, <span class="number">260</span>, <span class="number">500</span>, <span class="number">480</span>);</span><br><span class="line">        <span class="keyword">this</span>.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">6</span>,<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        cmp = Comparator.comparingInt(s -&gt; Integer.parseInt(s.examno));</span><br><span class="line"></span><br><span class="line">        JPanel[] jp = <span class="keyword">new</span> JPanel[<span class="number">6</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; jp.length; i++) &#123;</span><br><span class="line">            jp[i] = <span class="keyword">new</span> JPanel();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        jtf = <span class="keyword">new</span> JTextField[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; jtf.length; i++) &#123;</span><br><span class="line">            JTextField jtfAdd = <span class="keyword">new</span> JTextField(<span class="string">""</span>, <span class="number">10</span>);</span><br><span class="line">            jtfAdd.setFont(<span class="keyword">new</span> Font(<span class="string">"宋体"</span>,Font.PLAIN,<span class="number">20</span>));</span><br><span class="line">            jtf[i] = jtfAdd;</span><br><span class="line">            String[] columnNames = &#123;<span class="string">"准考证号"</span>, <span class="string">"姓名"</span>, <span class="string">"性别"</span>, <span class="string">"年龄"</span>, <span class="string">"成绩"</span>&#125;;</span><br><span class="line">            JLabel jl = <span class="keyword">new</span> JLabel(columnNames[i]);</span><br><span class="line">            jl.setFont(<span class="keyword">new</span> Font(<span class="string">"宋体"</span>,Font.PLAIN,<span class="number">20</span>));</span><br><span class="line">            jp[i].add(jl);</span><br><span class="line">            jp[i].add(jtf[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String[] buttonNames = &#123;<span class="string">"确认"</span>, <span class="string">"取消"</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (String buttonName : buttonNames) &#123;</span><br><span class="line">            JButton button = <span class="keyword">new</span> JButton(buttonName);</span><br><span class="line">            button.setFont(<span class="keyword">new</span> Font(<span class="string">"宋体"</span>, Font.PLAIN, <span class="number">20</span>));</span><br><span class="line">            button.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">            jp[<span class="number">5</span>].add(button);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (JPanel jPanel : jp) <span class="keyword">this</span>.add(jPanel);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(e.getActionCommand()) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"确认"</span>:</span><br><span class="line">                <span class="keyword">for</span> (JTextField jTextField : jtf)</span><br><span class="line">                    <span class="keyword">if</span> (jTextField.getText().isEmpty()) &#123;</span><br><span class="line">                        JOptionPane.showMessageDialog(<span class="keyword">this</span>, <span class="string">"添加学生信息不能为空"</span>);</span><br><span class="line">                        notNull = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">this</span>.setVisible(<span class="keyword">false</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">if</span>(notNull == <span class="number">1</span>) &#123;</span><br><span class="line">                    Management newstu = <span class="keyword">new</span> Management(jtf[<span class="number">0</span>].getText(), jtf[<span class="number">1</span>].getText(), jtf[<span class="number">2</span>].getText(),</span><br><span class="line">                            Integer.parseInt(jtf[<span class="number">3</span>].getText().trim()),Double.parseDouble(jtf[<span class="number">4</span>].getText().trim()));</span><br><span class="line">                    stu.add(newstu);</span><br><span class="line">                    stu.sort(cmp);</span><br><span class="line">                    table.setRowCount(<span class="number">0</span>);</span><br><span class="line">                    GUI.showStu(table, stu);</span><br><span class="line">                    <span class="keyword">this</span>.setVisible(<span class="keyword">false</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"取消"</span>:</span><br><span class="line">                dispose();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//（4）Filter</span></span><br><span class="line"><span class="keyword">package</span> data_structure;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Filter</span> <span class="keyword">extends</span> <span class="title">javax</span>.<span class="title">swing</span>.<span class="title">filechooser</span>.<span class="title">FileFilter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String desc, ext;</span><br><span class="line"></span><br><span class="line">    Filter(String description, String extension) &#123;</span><br><span class="line">        <span class="keyword">this</span>.desc = description;</span><br><span class="line">        <span class="keyword">this</span>.ext = extension.toLowerCase();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">accept</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file.getName().toLowerCase().endsWith(<span class="keyword">this</span>.ext);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDescription</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.desc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">getExt</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.ext;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//（5）IO</span></span><br><span class="line"><span class="keyword">package</span> data_structure;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IO</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readFrom</span><span class="params">(File file, ArrayList&lt;Management&gt; arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BufferedReader bfr = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(file), StandardCharsets.UTF_8));</span><br><span class="line">            String line;</span><br><span class="line">            <span class="keyword">while</span>((line=bfr.readLine())!=<span class="keyword">null</span>) &#123;</span><br><span class="line">                String[]keys =  line.split(<span class="string">";"</span>);</span><br><span class="line">                Management a = <span class="keyword">new</span> Management(keys[<span class="number">0</span>],keys[<span class="number">1</span>],keys[<span class="number">2</span>],Integer.parseInt(keys[<span class="number">3</span>]),Double.parseDouble(keys[<span class="number">4</span>]));</span><br><span class="line">                arr.add(a);</span><br><span class="line">            &#125;</span><br><span class="line">            bfr.close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">catch</span>(FileNotFoundException ex)  &#123;</span><br><span class="line">            <span class="keyword">if</span>(!file.getName().equals(<span class="string">""</span>))</span><br><span class="line">                JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"\""</span>+file.getName()+<span class="string">"\"文件不存在。"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(IOException ex) &#123;</span><br><span class="line">            JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"读取文件时数据错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeTo</span><span class="params">(File file, ArrayList&lt;Management&gt; arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BufferedWriter bufrd = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(file, <span class="keyword">false</span>), <span class="string">"UTF-8"</span>));</span><br><span class="line">            String line = <span class="keyword">new</span> String(<span class="string">""</span>);</span><br><span class="line">            <span class="keyword">for</span>(Management s:arr) &#123;</span><br><span class="line">                line = s.toString();</span><br><span class="line">                bufrd.write(line + <span class="string">"\r\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            bufrd.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(FileNotFoundException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!file.getName().equals(<span class="string">""</span>))</span><br><span class="line">                JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"\""</span> + file.getName() + <span class="string">"\"文件不存在。"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(IOException ex) &#123;</span><br><span class="line">            JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"写入文件时数据错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//（6）Management</span></span><br><span class="line"><span class="keyword">package</span> data_structure;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Management</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    String examno;        <span class="comment">//准考证号</span></span><br><span class="line">    String name;        <span class="comment">//姓名</span></span><br><span class="line">    String sex;        <span class="comment">//性别</span></span><br><span class="line">    <span class="keyword">int</span> age;        <span class="comment">//年龄</span></span><br><span class="line">    <span class="keyword">double</span> grade;        <span class="comment">//成绩</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//无参构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Management</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有参构造方法</span></span><br><span class="line">    Management(String examno, String name, String sex, <span class="keyword">int</span> age, <span class="keyword">double</span> grade) &#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.examno = examno;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.grade = grade;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.examno + <span class="string">";"</span> + <span class="keyword">this</span>.name + <span class="string">";"</span> + <span class="keyword">this</span>.sex + <span class="string">";"</span> + String.valueOf(<span class="keyword">this</span>.age) + <span class="string">";"</span></span><br><span class="line">                + String.valueOf(<span class="keyword">this</span>.grade) ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Algorithms and Data Structures </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Structure Experiment </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PTA算法与数据结构 7-9 旅游规划</title>
      <link href="/2019/12/16/PTA%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-7-9-%E6%97%85%E6%B8%B8%E8%A7%84%E5%88%92/"/>
      <url>/2019/12/16/PTA%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-7-9-%E6%97%85%E6%B8%B8%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>有了一张自驾旅游路线图，你会知道城市间的高速公路长度、以及该公路要收取的过路费。现在需要你写一个程序，帮助前来咨询的游客找一条出发地和目的地之间的最短路径。如果有若干条路径都是最短的，那么需要输出最便宜的一条路径。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入说明：输入数据的第1行给出4个正整数<em>N</em>、<em>M</em>、<em>S</em>、<em>D</em>，其中<em>N</em>（2≤<em>N</em>≤500）是城市的个数，顺便假设城市的编号为0~(<em>N</em>−1)；<em>M</em>是高速公路的条数；<em>S</em>是出发地的城市编号；<em>D</em>是目的地的城市编号。随后的<em>M</em>行中，每行给出一条高速公路的信息，分别是：城市1、城市2、高速公路长度、收费额，中间用空格分开，数字均为整数且不超过500。输入保证解的存在。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行里输出路径的长度和收费总额，数字间以空格分隔，输出结尾不能有多余空格。</p><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">4 5 0 3</span><br><span class="line">0 1 1 20</span><br><span class="line">1 3 2 30</span><br><span class="line">0 3 4 10</span><br><span class="line">0 2 2 20</span><br><span class="line">2 3 1 20</span><br></pre></td></tr></table></figure><h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 40</span><br></pre></td></tr></table></figure><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Inf = <span class="number">999999</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">map</span>[<span class="number">505</span>][<span class="number">505</span>], expense[<span class="number">505</span>][<span class="number">505</span>];</span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">505</span>], exps[<span class="number">505</span>];</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">505</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> n, m, s, d;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> min, rec;</span><br><span class="line">vis[s] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">min = Inf;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (!vis[i] &amp;&amp; dis[i] &lt; min) &#123;</span><br><span class="line">rec = i;</span><br><span class="line">min = dis[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (min == Inf)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">vis[rec] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (!vis[i] &amp;&amp; <span class="built_in">map</span>[rec][i] + dis[rec] &lt;= dis[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">map</span>[rec][i] + dis[rec] &lt; dis[i]) &#123;</span><br><span class="line">dis[i] = <span class="built_in">map</span>[rec][i] + dis[rec];</span><br><span class="line">exps[i] = expense[rec][i] + exps[rec];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (expense[rec][i] + exps[rec] &lt; exps[i])</span><br><span class="line">exps[i] = expense[rec][i] + exps[rec];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;n, &amp;m, &amp;s, &amp;d);</span><br><span class="line"><span class="built_in">memset</span>(dis, Inf, <span class="keyword">sizeof</span>(dis));</span><br><span class="line"><span class="built_in">memset</span>(exps, Inf, <span class="keyword">sizeof</span>(exps));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == j) &#123;</span><br><span class="line"><span class="built_in">map</span>[i][j] = <span class="number">0</span>;</span><br><span class="line">expense[i][j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">map</span>[i][j] = Inf;</span><br><span class="line">expense[i][j] = Inf;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> u, v, len, fee;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;u, &amp;v, &amp;len, &amp;fee);</span><br><span class="line"><span class="built_in">map</span>[u][v] = len;</span><br><span class="line"><span class="built_in">map</span>[v][u] = len;</span><br><span class="line">expense[u][v] = fee;</span><br><span class="line">expense[v][u] = fee;</span><br><span class="line">&#125;</span><br><span class="line">dis[s] = <span class="number">0</span>;</span><br><span class="line">exps[s] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">map</span>[s][i] != Inf) &#123;</span><br><span class="line">dis[i] = <span class="built_in">map</span>[s][i];</span><br><span class="line">exps[i] = expense[s][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Dijkstra();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d"</span>, dis[d], exps[d]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法与数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PTA算法与数据结构 7-8 哈利·波特的考试</title>
      <link href="/2019/12/13/PTA%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-7-8-%E5%93%88%E5%88%A9%C2%B7%E6%B3%A2%E7%89%B9%E7%9A%84%E8%80%83%E8%AF%95/"/>
      <url>/2019/12/13/PTA%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-7-8-%E5%93%88%E5%88%A9%C2%B7%E6%B3%A2%E7%89%B9%E7%9A%84%E8%80%83%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>哈利·波特要考试了，他需要你的帮助。这门课学的是用魔咒将一种动物变成另一种动物的本事。例如将猫变成老鼠的魔咒是haha，将老鼠变成鱼的魔咒是hehe等等。反方向变化的魔咒就是简单地将原来的魔咒倒过来念，例如ahah可以将老鼠变成猫。另外，如果想把猫变成鱼，可以通过念一个直接魔咒lalala，也可以将猫变老鼠、老鼠变鱼的魔咒连起来念：hahahehe。</p><p>现在哈利·波特的手里有一本教材，里面列出了所有的变形魔咒和能变的动物。老师允许他自己带一只动物去考场，要考察他把这只动物变成任意一只指定动物的本事。于是他来问你：带什么动物去可以让最难变的那种动物（即该动物变为哈利·波特自己带去的动物所需要的魔咒最长）需要的魔咒最短？例如：如果只有猫、鼠、鱼，则显然哈利·波特应该带鼠去，因为鼠变成另外两种动物都只需要念4个字符；而如果带猫去，则至少需要念6个字符才能把猫变成鱼；同理，带鱼去也不是最好的选择。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入说明：输入第1行给出两个正整数<em>N</em> (≤100)和<em>M</em>，其中<em>N</em>是考试涉及的动物总数，<em>M</em>是用于直接变形的魔咒条数。为简单起见，我们将动物按1~<em>N</em>编号。随后<em>M</em>行，每行给出了3个正整数，分别是两种动物的编号、以及它们之间变形需要的魔咒的长度(≤100)，数字之间用空格分隔。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出哈利·波特应该带去考场的动物的编号、以及最长的变形魔咒的长度，中间以空格分隔。如果只带1只动物是不可能完成所有变形要求的，则输出0。如果有若干只动物都可以备选，则输出编号最小的那只。</p><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">6 11</span><br><span class="line">3 4 70</span><br><span class="line">1 2 1</span><br><span class="line">5 4 50</span><br><span class="line">2 6 50</span><br><span class="line">5 6 60</span><br><span class="line">1 3 70</span><br><span class="line">4 6 60</span><br><span class="line">3 6 80</span><br><span class="line">5 1 100</span><br><span class="line">2 4 60</span><br><span class="line">5 2 80</span><br></pre></td></tr></table></figure><h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 70</span><br></pre></td></tr></table></figure><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Inf 999</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> spell[<span class="number">105</span>][<span class="number">105</span>];<span class="comment">//开始为1的邻接矩阵，记录对应的咒语长度</span></span><br><span class="line"><span class="keyword">int</span> len[<span class="number">105</span>][<span class="number">105</span>];<span class="comment">//开始为1的邻接矩阵，记录对应的最短咒语长度，每行的0号位置记录该行最长的魔咒长度</span></span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">105</span>];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vis[u] = <span class="number">1</span>;</span><br><span class="line">len[u][u] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> min = Inf, minp;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (!vis[j] &amp;&amp; len[u][j] &lt; min) &#123;</span><br><span class="line">min = len[u][j];</span><br><span class="line">minp = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">vis[minp] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (len[u][j] &gt; min + spell[minp][j])</span><br><span class="line">len[u][j] = min + spell[minp][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= n; j++) &#123;</span><br><span class="line">spell[i][j] = Inf;</span><br><span class="line">len[i][j] = Inf;</span><br><span class="line">&#125;</span><br><span class="line">spell[i][i] = <span class="number">0</span>;</span><br><span class="line">len[i][i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> u, v, w;<span class="comment">//记录所有魔咒</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line">spell[u][v] = w;</span><br><span class="line">spell[v][u] = w;</span><br><span class="line">len[u][v] = w;</span><br><span class="line">len[v][u] = w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;<span class="comment">//以每一个点都作为源点，求到其余各点的最短咒语</span></span><br><span class="line"><span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">Dijkstra(i);</span><br><span class="line">len[i][<span class="number">0</span>] = <span class="number">0</span>;<span class="comment">//把该行最长的咒语放到第0位</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (len[i][<span class="number">0</span>] &lt; len[i][j])</span><br><span class="line">len[i][<span class="number">0</span>] = len[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">len[<span class="number">0</span>][<span class="number">0</span>] = Inf;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (len[i][<span class="number">0</span>] &gt; <span class="number">0</span> &amp;&amp; len[i][<span class="number">0</span>] &lt; len[res][<span class="number">0</span>])</span><br><span class="line">res = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (res == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d"</span>, res, len[res][<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法与数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PTA算法与数据结构 6-1 单链表逆转</title>
      <link href="/2019/12/12/PTA%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-6-1-%E5%8D%95%E9%93%BE%E8%A1%A8%E9%80%86%E8%BD%AC/"/>
      <url>/2019/12/12/PTA%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-6-1-%E5%8D%95%E9%93%BE%E8%A1%A8%E9%80%86%E8%BD%AC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本题要求实现一个函数，将给定的单链表逆转。</p><h3 id="函数接口定义："><a href="#函数接口定义：" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">List <span class="title">Reverse</span><span class="params">( List L )</span></span>;</span><br></pre></td></tr></table></figure><p>其中<code>List</code>结构定义如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">PtrToNode</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    ElementType Data; <span class="comment">/* 存储结点数据 */</span></span><br><span class="line">    PtrToNode   Next; <span class="comment">/* 指向下一个结点的指针 */</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> PtrToNode List; <span class="comment">/* 定义单链表类型 */</span></span><br></pre></td></tr></table></figure><p><code>L</code>是给定单链表，函数<code>Reverse</code>要返回被逆转后的链表。</p><h3 id="裁判测试程序样例："><a href="#裁判测试程序样例：" class="headerlink" title="裁判测试程序样例："></a>裁判测试程序样例：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElementType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">PtrToNode</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    ElementType Data;</span><br><span class="line">    PtrToNode   Next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> PtrToNode List;</span><br><span class="line"></span><br><span class="line"><span class="function">List <span class="title">Read</span><span class="params">()</span></span>; <span class="comment">/* 细节在此不表 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">( List L )</span></span>; <span class="comment">/* 细节在此不表 */</span></span><br><span class="line"></span><br><span class="line"><span class="function">List <span class="title">Reverse</span><span class="params">( List L )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List L1, L2;</span><br><span class="line">    L1 = Read();</span><br><span class="line">    L2 = Reverse(L1);</span><br><span class="line">    Print(L1);</span><br><span class="line">    Print(L2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 3 4 5 2</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2 5 4 3 1</span><br></pre></td></tr></table></figure><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">List <span class="title">Reverse</span><span class="params">(List L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">List R = <span class="literal">NULL</span>;</span><br><span class="line">PtrToNode p, q;</span><br><span class="line">p = L;</span><br><span class="line"><span class="keyword">while</span> (p) &#123;</span><br><span class="line">q = p;</span><br><span class="line">p = p-&gt;Next;</span><br><span class="line">q-&gt;Next = R;</span><br><span class="line">R = q;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> R;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法与数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TOEFL-Writing-Living and Thinking</title>
      <link href="/2019/11/24/TOEFL-Writing-Living-and-Thinking/"/>
      <url>/2019/11/24/TOEFL-Writing-Living-and-Thinking/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Expressions"><a href="#Expressions" class="headerlink" title="Expressions:"></a>Expressions:</h3><table><thead><tr><th>相应的</th><th>correspondingly</th></tr></thead><tbody><tr><td>一代代</td><td>generation after generation</td></tr><tr><td>老一辈</td><td>older generation</td></tr><tr><td>无法想象</td><td>than one could imagine</td></tr><tr><td>多才多艺的</td><td>versatile</td></tr><tr><td>忙于，投身于</td><td>be engaged in</td></tr><tr><td>尖端科技</td><td>cutting-edge technology</td></tr><tr><td>提高竞争力</td><td>sharpen/strengthen one’s competitive edge/advantage</td></tr><tr><td>精通于</td><td>be proficient in / expert in / excel at</td></tr><tr><td>流行</td><td>prevalence/popularity      be all the rage</td></tr><tr><td>喧嚣</td><td>hustle and bustle</td></tr><tr><td>勉强，不愿意</td><td>be reluctant to</td></tr><tr><td>首要任务</td><td>top priority</td></tr><tr><td>金钱赔偿</td><td>financial compensation</td></tr><tr><td>愤怒</td><td>at rage</td></tr><tr><td>流传，传递</td><td>sth pass on from sb to sb</td></tr><tr><td>叛逆的</td><td>rebellious</td></tr><tr><td>青春期</td><td>puberty</td></tr><tr><td>扭曲的价值观</td><td>twisted value</td></tr><tr><td>高调的</td><td>high-profile</td></tr><tr><td>低调的</td><td>low-key</td></tr><tr><td>受……影响，制约</td><td>be subject to</td></tr><tr><td>离开舒适区</td><td>step out of one’s comfort zone</td></tr><tr><td>转基因食物</td><td>genetically modified food</td></tr><tr><td>为我自己辩护一下</td><td>in my defense</td></tr><tr><td>尝到了人生的艰辛</td><td>taste the hardship of life</td></tr><tr><td></td><td></td></tr><tr><td>明确的性别分工</td><td>a clear gender division</td></tr><tr><td>承担家务的人</td><td>housework undertaker</td></tr><tr><td>平等接受教育</td><td>have equal access to education</td></tr><tr><td>再就业</td><td>find new employment</td></tr><tr><td>繁重的体力劳动</td><td>strenuous manual labor</td></tr><tr><td>性别差异</td><td>gender gap/difference/disparity</td></tr><tr><td>工作表现</td><td>workplace performance</td></tr><tr><td>亲密的家庭</td><td>a closely-knit family</td></tr><tr><td>相互理解</td><td>mutual understanding</td></tr><tr><td>平衡……和……</td><td>strike a balance between … and …</td></tr></tbody></table><h3 id="Sentences："><a href="#Sentences：" class="headerlink" title="Sentences："></a>Sentences：</h3><p>1.Only by … , can sb do sth.</p><p>只有跟其他人合作，我们才能提高工作效率。</p><p>Only by cooperating with others, can we enhance our working efficiency.</p><p>2.老一辈一般比较节俭。他们看不惯年轻人花钱找乐子的想法。</p><p>Older generation are usually frugal. They don’t understand young people’s idea of spending money just for fun.</p><p>3.建造住宅楼有助于解决城市的拥挤问题。</p><p>Constructing residential building makes an effort in solving the problem of urban overcrowding.</p><p>4.不健康的生活方式可能使人们处于生病的危险之中。</p><p>An unhealthy lifestyle can put people in the danger of getting sick.</p><p>5.乡村地区给人们提供远离现代生活的压力和噪声的机会。</p><p>Rural areas provide people with opportunities to escape from the hustle and bustle of modern life.</p>]]></content>
      
      
      <categories>
          
          <category> TOEFL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库实验七</title>
      <link href="/2019/11/14/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E9%AA%8C%E4%B8%83/"/>
      <url>/2019/11/14/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E9%AA%8C%E4%B8%83/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--使用数据库student，完成以下操作，并写出相应的代码</span></span><br><span class="line"><span class="comment">--1.用函数实现：求某个专业选修了某门课程的学生人数，并调用函数求出计算机系“数据库”课程的选课人数。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> dept_num(@dept <span class="built_in">varchar</span>(<span class="number">8</span>),@cname <span class="built_in">varchar</span>(<span class="number">20</span>))</span><br><span class="line"><span class="keyword">returns</span> <span class="built_in">int</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">declare</span> @<span class="keyword">num</span> <span class="built_in">int</span></span><br><span class="line"><span class="keyword">select</span> @<span class="keyword">num</span> = <span class="keyword">count</span>(*) <span class="keyword">from</span> sc,course,student </span><br><span class="line"><span class="keyword">where</span> sc.cno = course.cno <span class="keyword">and</span> sc.sno = student.sno</span><br><span class="line"><span class="keyword">and</span> course.cname = @cname <span class="keyword">and</span> student.sdept = @dept</span><br><span class="line"><span class="keyword">return</span>(@<span class="keyword">num</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> dbo.dept_num(<span class="string">'CS'</span>,<span class="string">'数据库'</span>) <span class="keyword">as</span> 人数</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.用内嵌表值函数实现：查询某个专业所有学生所选的每门课的平均成绩；调用该函数求出计算机系的所有课程的平均成绩。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> avg_all(@dept <span class="built_in">varchar</span>(<span class="number">8</span>))</span><br><span class="line"><span class="keyword">returns</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">return</span>(<span class="keyword">select</span> course.cname,<span class="keyword">avg</span>(sc.grade) <span class="keyword">as</span> 平均成绩</span><br><span class="line"><span class="keyword">from</span> course,sc,student</span><br><span class="line"><span class="keyword">where</span> sc.cno = course.cno <span class="keyword">and</span> sc.sno = student.sno</span><br><span class="line"><span class="keyword">and</span> student.sdept = @dept</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> course.cname)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> dbo.avg_all(<span class="string">'CS'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.创建多语句表值函数，通过学号作为实参调用该函数，可显示该学生的姓名以及各门课的成绩和学分，调用该函数求出“200515002”的各门课成绩和学分。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> stu_show(@sno <span class="built_in">char</span>(<span class="number">9</span>))</span><br><span class="line"><span class="keyword">returns</span> @stu_table <span class="keyword">table</span>(sname <span class="keyword">nchar</span>(<span class="number">6</span>),cname <span class="built_in">varchar</span>(<span class="number">20</span>),grade <span class="built_in">int</span>,credit <span class="built_in">int</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">insert</span> @stu_table</span><br><span class="line"><span class="keyword">select</span> sname,cname,grade,credit</span><br><span class="line"><span class="keyword">from</span> student,sc,course</span><br><span class="line"><span class="keyword">where</span> sc.cno = course.cno <span class="keyword">and</span> sc.sno = student.sno <span class="keyword">and</span> sc.sno = @sno</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> dbo.stu_show(<span class="string">'200515002'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.编写一个存储过程，统计某门课程的优秀（90-100）人数、良好（80-89）人数、中等（70-79）人数、及格（60-69）人数和及格率，其输入参数是课程号，输出的是各级别人数及及格率，及格率的形式是90.25%，执行存储过程，在消息区显示1号课程的统计信息。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> clevel @cno <span class="built_in">char</span>(<span class="number">4</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">declare</span> @great <span class="built_in">int</span>,@good <span class="built_in">int</span>,@fair <span class="built_in">int</span>,@pass <span class="built_in">int</span>,@<span class="keyword">all</span> <span class="built_in">int</span></span><br><span class="line"><span class="keyword">select</span> @great = <span class="keyword">count</span>(*) <span class="keyword">from</span> sc <span class="keyword">where</span> sc.cno = @cno <span class="keyword">and</span> sc.grade &gt;= <span class="number">90</span></span><br><span class="line"><span class="keyword">select</span> @good = <span class="keyword">count</span>(*) <span class="keyword">from</span> sc <span class="keyword">where</span> sc.cno = @cno <span class="keyword">and</span> sc.grade &gt;= <span class="number">80</span> <span class="keyword">and</span> sc.grade &lt;= <span class="number">89</span></span><br><span class="line"><span class="keyword">select</span> @fair = <span class="keyword">count</span>(*) <span class="keyword">from</span> sc <span class="keyword">where</span> sc.cno = @cno <span class="keyword">and</span> sc.grade &gt;= <span class="number">70</span> <span class="keyword">and</span> sc.grade &lt;= <span class="number">79</span></span><br><span class="line"><span class="keyword">select</span> @pass = <span class="keyword">count</span>(*) <span class="keyword">from</span> sc <span class="keyword">where</span> sc.cno = @cno <span class="keyword">and</span> sc.grade &gt;= <span class="number">60</span> <span class="keyword">and</span> sc.grade &lt;= <span class="number">69</span></span><br><span class="line"><span class="keyword">select</span> @<span class="keyword">all</span> = <span class="keyword">count</span>(*) <span class="keyword">from</span> sc <span class="keyword">where</span> sc.cno = @cno</span><br><span class="line"><span class="keyword">select</span> @great <span class="keyword">as</span> 优秀人数,@good <span class="keyword">as</span> 良好人数,@fair <span class="keyword">as</span> 中等人数,@pass <span class="keyword">as</span> 及格人数,<span class="keyword">convert</span>(<span class="built_in">varchar</span>,(@great+@good+@fair+@pass)*<span class="number">100</span>/@<span class="keyword">all</span>)+<span class="string">'%'</span> <span class="keyword">as</span> 及格率</span><br><span class="line"></span><br><span class="line">exec clevel <span class="string">'1'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--5.创建一个带有输入参数的存储过程，该存储过程根据传入的学生名字，查询其选修的课程名和成绩，执行存储过程，在消息区显示赵箐箐的相关信息。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> pc_g @sname <span class="keyword">nchar</span>(<span class="number">6</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> cname,grade</span><br><span class="line"><span class="keyword">from</span> student,sc,course</span><br><span class="line"><span class="keyword">where</span> student.sno = sc.sno <span class="keyword">and</span> sc.cno = course.cno <span class="keyword">and</span> student.sname = @sname</span><br><span class="line"></span><br><span class="line">exec pc_g <span class="string">'赵菁菁'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--6.以基本表 course为基础，完成如下操作</span></span><br><span class="line"><span class="comment">--生成显示如下报表形式的游标：报表首先列出学生的学号和姓名，然后在此学生下，列出其所选的全部课程的课程号、课程名和学分；依此类推，直到列出全部学生。</span></span><br><span class="line"><span class="keyword">declare</span> @sno <span class="built_in">char</span>(<span class="number">9</span>),@sname <span class="keyword">nchar</span>(<span class="number">6</span>)</span><br><span class="line"><span class="keyword">declare</span> @cno <span class="built_in">char</span>(<span class="number">4</span>),@cname <span class="built_in">varchar</span>(<span class="number">20</span>),@credit <span class="built_in">int</span></span><br><span class="line"><span class="keyword">declare</span> stu_cursor insensitive <span class="keyword">cursor</span> <span class="keyword">for</span></span><br><span class="line"><span class="keyword">select</span> student.sno,student.sname <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">open</span> stu_cursor</span><br><span class="line"><span class="keyword">fetch</span> <span class="keyword">next</span> <span class="keyword">from</span> stu_cursor <span class="keyword">into</span> @sno,@sname</span><br><span class="line"><span class="keyword">while</span> @@fetch_status = <span class="number">0</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">print @sno +<span class="string">' '</span>+@sname</span><br><span class="line">print<span class="string">'----------------------------'</span></span><br><span class="line">print <span class="string">'cno  cname  credit'</span></span><br><span class="line"><span class="keyword">declare</span> c_cursor <span class="keyword">cursor</span> <span class="keyword">for</span></span><br><span class="line"><span class="keyword">select</span> sc.cno,course.cname,course.credit</span><br><span class="line"><span class="keyword">from</span> student,sc,course</span><br><span class="line"><span class="keyword">where</span> student.sno=sc.sno <span class="keyword">and</span> course.cno=sc.cno</span><br><span class="line"><span class="keyword">and</span> student.sno=@sno</span><br><span class="line"><span class="keyword">open</span> c_cursor</span><br><span class="line"><span class="keyword">fetch</span> <span class="keyword">next</span> <span class="keyword">from</span> c_cursor <span class="keyword">into</span> @cno,@cname,@credit</span><br><span class="line"><span class="keyword">while</span> @@fetch_status = <span class="number">0</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">print @cno+<span class="string">' '</span>+@cname+<span class="string">'   '</span>+<span class="keyword">cast</span>(@credit <span class="keyword">as</span> <span class="built_in">char</span>(<span class="number">4</span>))</span><br><span class="line"><span class="keyword">fetch</span> <span class="keyword">next</span> <span class="keyword">from</span> c_cursor <span class="keyword">into</span> @cno,@cname,@credit</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">print <span class="string">'=============================================='</span></span><br><span class="line"><span class="keyword">close</span> c_cursor</span><br><span class="line"><span class="keyword">deallocate</span> c_cursor</span><br><span class="line"><span class="keyword">fetch</span> <span class="keyword">next</span> <span class="keyword">from</span> stu_cursor <span class="keyword">into</span> @sno,@sname</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">close</span> stu_cursor</span><br><span class="line"><span class="keyword">deallocate</span> stu_cursor</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.请设计一个存储过程实现下列功能：判断某个专业某门课程成绩排名为n的学生的成绩是否低于该门课程的平均分，如果低于平均分，则将其成绩改为平均分，否则输出学号、姓名、班号、课程号、课程名、成绩。（提示：可以在存储过程内部使用游标）。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> avg_p @dept <span class="built_in">char</span>(<span class="number">4</span>),@cno <span class="built_in">char</span>(<span class="number">10</span>),@n <span class="built_in">int</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">declare</span> @sno <span class="built_in">char</span>(<span class="number">10</span>),@sgrade <span class="built_in">int</span>,@avg_sgrade <span class="built_in">int</span>,@sname <span class="built_in">char</span>(<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> cj <span class="keyword">cursor</span> <span class="keyword">scroll</span> <span class="keyword">for</span></span><br><span class="line"><span class="keyword">select</span> sc.Sno,Grade,Sname</span><br><span class="line"><span class="keyword">from</span> sc,student</span><br><span class="line"><span class="keyword">where</span> sc.Cno=@cno <span class="keyword">and</span> student.Sdept=@dept</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> Grade <span class="keyword">desc</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">select</span> @avg_sgrade=(<span class="keyword">select</span> <span class="keyword">avg</span>(Grade) <span class="keyword">from</span> sc <span class="keyword">where</span> sc.Cno=@cno)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">open</span> cj</span><br><span class="line"><span class="keyword">fetch</span> <span class="keyword">absolute</span> @n <span class="keyword">from</span> cj <span class="keyword">into</span> @sno,@sgrade,@sname</span><br><span class="line"><span class="keyword">if</span>(@sgrade&gt;@avg_sgrade)</span><br><span class="line">print @sno+<span class="string">' '</span>+@sname+<span class="string">' '</span>+@cno+<span class="string">' '</span>+<span class="keyword">convert</span>(<span class="built_in">char</span>(<span class="number">6</span>),@sgrade)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">update</span> sc</span><br><span class="line"><span class="keyword">set</span> sc.Grade=@avg_sgrade</span><br><span class="line"><span class="keyword">where</span> sc.Sno=@sno <span class="keyword">and</span> sc.Cno=@cno</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">close</span> cj</span><br><span class="line"><span class="keyword">deallocate</span> cj</span><br><span class="line"></span><br><span class="line">exec avg_p <span class="string">'CS'</span>,<span class="string">'1'</span>,<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--8.对student数据库设计存储过程，设计程序实现更新某个专业某门课成绩排名为第2的学生的成绩改为90分。（提示可以使用存储过程内部使用游标）</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> change_p @dept <span class="built_in">varchar</span>(<span class="number">8</span>),@cno <span class="built_in">char</span>(<span class="number">10</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">declare</span> change_c <span class="keyword">scroll</span> <span class="keyword">cursor</span> <span class="keyword">for</span></span><br><span class="line"><span class="keyword">select</span> sc.sno,sname</span><br><span class="line"><span class="keyword">from</span> sc,student</span><br><span class="line"><span class="keyword">where</span> student.sdept=@dept <span class="keyword">and</span> sc.cno = @cno</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> grade <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> change_c</span><br><span class="line"><span class="keyword">fetch</span> <span class="keyword">absolute</span> <span class="number">2</span> <span class="keyword">from</span> change_c</span><br><span class="line"><span class="keyword">update</span> sc</span><br><span class="line"><span class="keyword">set</span> grade = <span class="number">90</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">close</span> change_c</span><br><span class="line"><span class="keyword">deallocate</span> change_c</span><br><span class="line"></span><br><span class="line">exec change_p <span class="string">'CS'</span>,<span class="string">'1'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--9.设计存储过程实现如果某个学生某门课程的成绩&gt;=60，那么就把这门课程的学分加到该学生的总学分（student表的total项）上</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> add_p @sno <span class="built_in">char</span>(<span class="number">9</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">declare</span> @grade <span class="built_in">int</span>,@credit <span class="built_in">int</span></span><br><span class="line"><span class="keyword">declare</span> add_c <span class="keyword">scroll</span> <span class="keyword">cursor</span> <span class="keyword">for</span></span><br><span class="line"><span class="keyword">select</span> sc.grade,course.credit</span><br><span class="line"><span class="keyword">from</span> sc,course</span><br><span class="line"><span class="keyword">where</span> sc.sno = @sno <span class="keyword">and</span> sc.cno = course.cno</span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> add_c</span><br><span class="line"><span class="keyword">fetch</span> <span class="keyword">next</span> <span class="keyword">from</span> add_c <span class="keyword">into</span> @grade,@credit</span><br><span class="line"><span class="keyword">if</span>(@grade &gt;= <span class="number">60</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">update</span> student</span><br><span class="line"><span class="keyword">set</span> total = total + @credit</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">close</span> add_c</span><br><span class="line"><span class="keyword">deallocate</span> add_c</span><br><span class="line"></span><br><span class="line">exec add_p <span class="string">'200515001'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--10.现有图书管理数据库， 其中包含如下几个表：</span></span><br><span class="line"><span class="comment">--读者表：reader(学号，姓名，性别，余额)</span></span><br><span class="line"><span class="comment">--借书表：lend（学号，书号，借书日期，应还日期，是否续借）</span></span><br><span class="line"><span class="comment">--欠款表：debt(学号，日期，欠款金额)</span></span><br><span class="line"><span class="comment">--还书表：return(学号，书号，还书日期) </span></span><br><span class="line"><span class="comment">--请设计一个存储过程实现续借或还书操作，具体要求如下：</span></span><br><span class="line"><span class="comment">--只有没有超期的书才可以续借（借书和续借时间都为30天），并修改应还日期，否则只能还书；</span></span><br><span class="line"><span class="comment">--还书时删除借书表内的借阅记录，并向还书表中插入一条还书记录，注意还书日期为当前日期，</span></span><br><span class="line"><span class="comment">--并且对超期图书，按照超期的天数计算出罚款金额（每天每本书罚款0.1元），并将罚款信息插入到欠款表中，</span></span><br><span class="line"><span class="comment">--同时将罚款从读者表的余额里扣除。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> book <span class="keyword">as</span> @sno <span class="built_in">char</span>(<span class="number">20</span>),@bno <span class="built_in">char</span>(<span class="number">30</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">declare</span> @<span class="keyword">days</span> <span class="built_in">int</span>,@continue <span class="built_in">char</span>(<span class="number">10</span>)</span><br><span class="line"><span class="keyword">select</span> @<span class="keyword">days</span> = <span class="keyword">datediff</span>(dd,借书日期,<span class="keyword">getdate</span>()) <span class="keyword">from</span> lend</span><br><span class="line"><span class="keyword">select</span> @continue = 是否续借 <span class="keyword">from</span> lend</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(@<span class="keyword">days</span>&lt;=<span class="number">30</span> <span class="keyword">and</span> @continue = <span class="string">'否'</span>)<span class="comment">--未到期续借</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">update</span> lend</span><br><span class="line"><span class="keyword">set</span> 应还日期 = <span class="keyword">dateadd</span>(<span class="keyword">day</span>,<span class="number">30</span>,应还日期)</span><br><span class="line"><span class="keyword">set</span> 是否续借 = <span class="string">'是'</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(@continue = <span class="string">'是'</span> <span class="keyword">and</span> <span class="keyword">datediff</span>(dd,<span class="keyword">dateadd</span>(<span class="keyword">day</span>,@<span class="keyword">days</span>,借书日期),应还日期)&gt;=<span class="number">0</span>) <span class="comment">--续借后还书</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> lend</span><br><span class="line"><span class="keyword">where</span> sno = @sno <span class="keyword">and</span> bno = @bno</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">return</span></span><br><span class="line"><span class="keyword">values</span>(@sno,@bno,<span class="keyword">getdate</span>())</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">datediff</span>(<span class="keyword">day</span>,<span class="keyword">getdate</span>(),应还日期)&lt;<span class="number">0</span>)<span class="comment">--逾期后还书</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">declare</span> @debt money</span><br><span class="line"><span class="keyword">set</span> @debt=<span class="keyword">datediff</span>(<span class="keyword">day</span>,应还日期,<span class="keyword">getdate</span>())*<span class="number">0.1</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> debt</span><br><span class="line"><span class="keyword">values</span>(@sno,<span class="keyword">getdate</span>(),@debt)</span><br><span class="line"><span class="keyword">update</span> reader</span><br><span class="line"><span class="keyword">set</span> 余额=余额-@debt</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Data Base Management System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TOEFL-Writing-Business and Economy</title>
      <link href="/2019/11/11/TOEFL-Writing-Business-and-Economy/"/>
      <url>/2019/11/11/TOEFL-Writing-Business-and-Economy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Expressions"><a href="#Expressions" class="headerlink" title="Expressions:"></a>Expressions:</h3><table><thead><tr><th>人口的增长</th><th>an increase in population</th></tr></thead><tbody><tr><td>需求旺盛</td><td>be in great demand</td></tr><tr><td>出售，上市</td><td>be on the market/be launched to the market</td></tr><tr><td>自主经营</td><td>be self-employed</td></tr><tr><td>愿意/不愿意做某事</td><td>be willing/unwilling to do sth</td></tr><tr><td>促进经济发展</td><td>promote the development of economy/boost economy</td></tr><tr><td>建立事业</td><td>establish one’s career</td></tr><tr><td>因迟到打电话请假</td><td>call in late</td></tr><tr><td>打电话请病假</td><td>call in sick</td></tr><tr><td>升职</td><td>get promoted</td></tr><tr><td>赔偿</td><td>compensate for</td></tr><tr><td>失业补助</td><td>unemployment compensation</td></tr><tr><td>培养处理人际关系的技能</td><td>hone/cultivate the ability of interpersonal relationship</td></tr><tr><td>生产力下降</td><td>discourage/lower productivity</td></tr><tr><td>挣钱</td><td>earn money</td></tr><tr><td>发财</td><td>make a fortune</td></tr><tr><td>鼓励竞争</td><td>encourage the competition</td></tr><tr><td>就业</td><td>seek a career in</td></tr><tr><td>找到工作</td><td>find employment/a decent job</td></tr><tr><td>投资</td><td>target investment in</td></tr><tr><td>辞职</td><td>leave/quit one’s job</td></tr><tr><td>投诉</td><td>complain about</td></tr><tr><td>谋生</td><td>earn a living</td></tr><tr><td>获利</td><td>make a profit/generate profits</td></tr><tr><td>收支平衡</td><td>make ends meet</td></tr><tr><td>克服经济衰退</td><td>overcome economic crisis/recession/downturn/depression</td></tr><tr><td>跳槽</td><td>job-hopping</td></tr><tr><td>职业前景光明/黯淡</td><td>bright/bleak career prospects</td></tr><tr><td><strong>Advertising</strong></td><td></td></tr><tr><td>误导公众</td><td>mislead the public</td></tr><tr><td>负债</td><td>get into debt</td></tr><tr><td>了解最新发生的事情</td><td>keep up to date with what is happening</td></tr><tr><td>经济问题</td><td>financial problems</td></tr><tr><td>更快了解实时新闻</td><td>have faster access to news in real time</td></tr><tr><td>经济压力</td><td>economic pressure</td></tr><tr><td>消费社会/文化</td><td>consumer society/culture</td></tr><tr><td>低收入家庭</td><td>less well-off/low-income family</td></tr><tr><td>来自贫困地区的人</td><td>people from deprived/disadvantaged areas</td></tr><tr><td>刺激购买冲动</td><td>evoke impulse shopping/impulse buying/impulsive purchases</td></tr><tr><td>入不敷出</td><td>cannot make both ends meet</td></tr><tr><td>大众媒体</td><td><strong>mass</strong> media</td></tr><tr><td>还清债务</td><td>pay off debt</td></tr><tr><td>无处不在的</td><td>ubiquitous/pervasive/prevalent</td></tr><tr><td>过分购物</td><td>excess shopping/overbuying</td></tr><tr><td>虚假的</td><td>false/bogus</td></tr><tr><td>审查制度</td><td>censorship</td></tr><tr><td>对……实施审查</td><td>impose censorship on/censor</td></tr><tr><td>充斥着</td><td>be flooded/saturated with</td></tr><tr><td>媒体/广告炒作</td><td>media/advertising hype</td></tr><tr><td>购物狂</td><td>shopaholic</td></tr><tr><td>促销</td><td>promotion</td></tr><tr><td>市场营销手段</td><td>marketing tool</td></tr><tr><td>大规模的广告宣传活动</td><td>advertising campaigns</td></tr><tr><td>建立消费者对品牌的忠诚度</td><td>build consumer loyalty</td></tr><tr><td>公益广告</td><td>TV campaigns</td></tr><tr><td>电话营销</td><td>telemarketing</td></tr><tr><td>传单</td><td>flyers</td></tr><tr><td>墙画</td><td>wallscape</td></tr><tr><td>物质主义</td><td>materialism</td></tr><tr><td>消费主义</td><td>consumerism</td></tr><tr><td>家电</td><td>household appliances</td></tr></tbody></table><h3 id="Positives-of-Advertising"><a href="#Positives-of-Advertising" class="headerlink" title="Positives of Advertising:"></a>Positives of Advertising:</h3><ul><li>Advertising is a key part of modern business.</li><li>Companies need to tell customers about their products.</li><li>Advertisements <strong>inform us about</strong> the choice we have.</li><li>Without advertising we would have less choice.</li><li>Advertising is a <strong>creative industry</strong> that employs many people.</li><li>Without advertising there would be higher unemployment.</li><li>Advertising is a form of modern art.</li></ul><h3 id="Negatives-of-Advertising"><a href="#Negatives-of-Advertising" class="headerlink" title="Negatives of Advertising:"></a>Negatives of Advertising:</h3><ul><li>Advertising may <strong>manipulate</strong> people’s decision.</li><li>It aims to persuade people that buying a product will make them happier.</li><li>Advertises focus on selling <strong>a brand image</strong>.</li><li>They use glamorous, successful people.(<strong>celebrities</strong>)</li></ul><ul><li><p>We now live in <strong>a consumer culture</strong>.(<strong>society</strong>)</p></li><li><p>We are persuaded to <strong>follow the latest trends</strong>.</p></li><li><p>We are encouraged to <strong>associate</strong> certain brands <strong>with</strong> a higher status.</p></li></ul><ul><li>Advertisers often aim their marketing at children.</li><li>Children can easily be influenced by advertisements.</li><li>Children put pressure on parents to buy them things.</li></ul><h3 id="Sentences"><a href="#Sentences" class="headerlink" title="Sentences:"></a>Sentences:</h3><p>1.在家工作者应该是那些喜欢弹性工作制的人。</p><p>Home workers are supposed to be those who like flexible work schedule.</p><p>2.一般来说，年轻人有高尚的理想，会为了精神追求而努力奋斗。</p><p>Generally, the youth have noble <strong>ambitions</strong>, and they will strive for spiritual pursuit.</p><p>3.认为自己职业前景黯淡的员工容易萌生跳槽的念头。</p><p>Workers who think their career prospects are bleak are prone to having the idea of job-hopping.</p><p>4.负担一个大家庭的人不会轻易跳槽，因为他们需要一份稳定的收入。</p><p>Breadwinners who raise a big family are not prone to jumping ship, because they need a stable income.</p><p>5.与工作压力相关的问题包括更多的家庭纠纷和效率与生产力低下。</p><p>Issues related to working stress include more family/domestic disputes and lower productivity and efficiency.</p><p>6.只有精英分子才有自信在跳槽之后得到升职和高薪。</p><p>Only elites have confidence <strong>in</strong> getting promoted and higher salary after job-hopping.</p><h3 id="Practice"><a href="#Practice" class="headerlink" title="Practice:"></a>Practice:</h3><p>Getting a job in which you work with other people is better than getting a job in which you have to work alone.</p><p>There are many things to consider in terms of work <strong>pattern</strong>. Different people have different ideas about whether or not work with other people. <strong>While</strong> some people like to work alone. Others prefer to work with colleagues. Personally, I believe it is better for employees to work with each other, because employees who work with others can hone <strong>their interpersonal skills</strong>, and the work mode could encourage the competition<strong>. M</strong>eanwhile, collaboration may inspire people’s creativity.</p><p>Firstly, it is universally acknowledged that working with others can improve employees’ communication skills. At work, workers learn how to communicate with colleagues, bosses and customers. For example, what a programmer has to deal with is not only computer programs, but also figuring out what their partners are thinking, which means that workers must communicate and negotiate with colleagues frequently.</p><p>Moreover, colleagues that workers cooperate with are their rivals as well. As we all know, cooperation and competition are the eternal themes of human growth. Working with one another creates competitive atmosphere and environment, so that employees can gain knowledge from people who are more excellent than themselves. What’s more, the stress that competition brings may stimulate their passion for work.</p><p>Last but not least, teamwork definitely inspires people’s creativity. According to research, thirty years ago, only ten percent of Noble Prize winners worked in a team. Nowadays, the proportion of achievements achieved by teamwork has reached sixty percent. As the saying goes that two heads are better than one. The collision of people’s ideas always has the effects beyond the expectation. </p><p>In conclusion, I hold an opinion that working alone may avoid amounts of troubles, but it is far from being an efficient work mode. Instead, working with other people is the better way not only to encourage the productivity but to make workers enjoy teamwork as well. That why we should undoubtedly work with each other.</p>]]></content>
      
      
      <categories>
          
          <category> TOEFL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TOEFL-Writing-Science and Technology</title>
      <link href="/2019/11/11/TOEFL-Writing-Science-and-Technology/"/>
      <url>/2019/11/11/TOEFL-Writing-Science-and-Technology/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Expressions"><a href="#Expressions" class="headerlink" title="Expressions:"></a>Expressions:</h3><table><thead><tr><th>科技进步</th><th>scientific and technological advance/progress</th></tr></thead><tbody><tr><td>科技创新</td><td>technological innovations</td></tr><tr><td>彻底改变了</td><td>overhaul/change sth radically  /  revolutionize</td></tr><tr><td>越来越流行</td><td>an increasing popularity of/increasing popular</td></tr><tr><td>信息时代</td><td>the Information Age/Era</td></tr><tr><td>信息爆炸</td><td>information explosion/overload</td></tr><tr><td>互联网的广泛使用</td><td>the extensive use of/the widespread use/proliferation of the Internet</td></tr><tr><td>社交网络/网站</td><td>social networking/social networking websites</td></tr><tr><td>促进交流</td><td>promote/facilitate communication</td></tr><tr><td>获取更多信息</td><td>have/gain more access to information</td></tr><tr><td>减少人力的机器</td><td>labor-saving machinery</td></tr><tr><td>代替人力的机器</td><td>labor-replacing machinery</td></tr><tr><td>鼠标一点</td><td>with the click of a mouse</td></tr><tr><td>键盘一敲</td><td>with the click on the keyboard</td></tr><tr><td>地理上的阻碍</td><td>geographical barrier</td></tr><tr><td>以惊人的速度</td><td>at an astonishing/lightning-fast rate/speed/pace</td></tr><tr><td>提高效率或生产率</td><td>enhance/boost/improve efficiency/productivity</td></tr><tr><td>网络犯罪</td><td>cyber crime</td></tr><tr><td>安全问题</td><td>security issue</td></tr><tr><td>侵犯某人隐私</td><td>violate/intrude/invade one’s privacy</td></tr><tr><td>身份盗窃或盗用</td><td>identity theft</td></tr><tr><td>剽窃</td><td>pirate/plagiarize</td></tr><tr><td>盗版的</td><td>pirated</td></tr><tr><td>视力的减弱</td><td>weakened eyesight/visual impairment</td></tr><tr><td>沉溺于或迷失于虚拟世界</td><td>indulge in/be lost in a virtual world</td></tr><tr><td>游离于现实世界之外</td><td>be isolated from the real world</td></tr><tr><td>削弱与家人、朋友的关系</td><td>weaken/distance the relationship with family and friends   alienate them from family and friends</td></tr><tr><td>性格变得孤僻</td><td>become solitary</td></tr></tbody></table><h3 id="Substitution"><a href="#Substitution" class="headerlink" title="Substitution:"></a>Substitution:</h3><table><thead><tr><th>general</th><th>substitutive</th></tr></thead><tbody><tr><td>development</td><td>advance</td></tr><tr><td>appearance</td><td>advent/emergence</td></tr><tr><td>使用</td><td>have (equal/free/immediate) access to</td></tr><tr><td>随着……的广泛应用</td><td>as sth use worldwide explodes</td></tr></tbody></table><h3 id="Sentences"><a href="#Sentences" class="headerlink" title="Sentences:"></a>Sentences:</h3><p>1.互联网的出现加速了信息的传播。</p><p>The advent of Internet has accelerated the flow of the spread of information.</p><p>2.不可否认，互联网确实已经给全球的成人带来了更多的学习机会。</p><p>It is undeniable that the Internet has, indeed, made learning opportunities more accessible to adults around the globe.</p><p>3.电子书籍技术是现代文明中的革命性突破， 使人们得以摆脱厚重的书本。</p><p>E-book technology is a revolutionary breakthrough in modern civilization, which enable people to shake off thick and heavy printed books.</p><p>4.现有的信息技术还没有先进到可以确保（预防，阻止）人们在网络世界中的隐私不被泄露。</p><p>Existing information technology is not advanced enough to prevent information disclosure in cyber world.</p><p>5.随着网络犯罪数量的上升，互联网的可靠性受到高度怀疑。</p><p>With the increase <strong>in</strong> cyber crime, the reliability of the Internet has been highly suspected.</p><p>6.移动电话给语音通信带来了一场革命。</p><p>The mobile phone brings a revolution <strong>in</strong> the voice communication.</p><h3 id="Practice"><a href="#Practice" class="headerlink" title="Practice:"></a>Practice:</h3><p>Technology has made people’s lives simpler, rather than more complicated.</p><p>When thinking about the issue that how has technology changed our lives, different people will have different ideas. While some people may believe technology has made people’s lives more complicated, I think that it enables people to live more simply. Because technology can help boost efficiency.</p><p>Firstly, in terms of work and study, people gain <strong>easier</strong> access to information <strong>than before</strong>. For example, compared to the thick and heavy <strong>printed</strong> books in the past, we <strong>can find</strong> what we want on the Internet with the click of a mouse. Besides, labor-saving machinery plays an important role as well. Nowadays, massive amounts of work can be finished by computer programs, such as keeping <strong>bank</strong> accounts. As for me, I sometimes write a computer program to do some complicated calculations.</p><p>Moreover, when it comes to the transportation, the ever-changing technology is even more impressive. Thanks to the advent of high-speed rail technology, we used to travel a day on a traditional train that could <strong>take</strong> a few hours. Taking myself as an example, when my parents drove me from home to the university in another city, it took almost a whole day. But after the high-speed line from home to my university <strong>being constructed</strong>, I can reunite with my family in about seven hours. Meanwhile, with the advances in airline, <strong>long-distance travel</strong> becomes more convenient. <strong>During</strong> the summer vacation, I traveled to Nanjing. From the time the plane took off to the time it landed, I even did not finish a bag of chips.</p><p>In conclusion, I would like to say that technology has played a significant role in making people’s life much simpler. And It is undeniable that we can enjoy an efficient life with technology. This is why I support this viewpoint. </p>]]></content>
      
      
      <categories>
          
          <category> TOEFL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TOEFL-Writing-Health and Environment</title>
      <link href="/2019/11/11/TOEFL-Writing-Health-and-Environment/"/>
      <url>/2019/11/11/TOEFL-Writing-Health-and-Environment/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h1><h3 id="Words"><a href="#Words" class="headerlink" title="Words:"></a>Words:</h3><p>acid biodiversity contaminated deforestation afforestation vegetation ecosystem emissions erosion exhaust drought fertilizer greenhouse waste refuse</p><p>waterway-河道 waters-水域 pristine-崭新的 pervasive-普遍的(贬) ubiquitous-普遍的(中)  inexorable-无情的 phosphate-based-含磷的 </p><h3 id="Expressions"><a href="#Expressions" class="headerlink" title="Expressions:"></a>Expressions:</h3><table><thead><tr><th>Government</th><th></th></tr></thead><tbody><tr><td>enact laws/enforce laws/introduce laws/legislation—regulate and punish</td><td>impose “green taxes” on heavy industries</td></tr><tr><td>invest (money/fund) in/make investment in—alternative energy</td><td>clean energy/renewable energy/improve energy efficiency /public transportation/afforestation project</td></tr><tr><td>educate/advocate—raise the public’s awareness of</td><td>community service/activities/TV campaigns/invite celebrities to attract attention</td></tr><tr><td><strong>Individuals</strong></td><td></td></tr><tr><td>lead/live a green/low-carbon lifestyle</td><td>use/take public transportation instead of private cars(green travel)</td></tr><tr><td>reduce the carbon footprints</td><td></td></tr><tr><td>reduce waste—recycle some useful materials</td><td>paper, batteries and electronic devices</td></tr><tr><td>sort household waste into different categories</td><td>waste-sorting: recyclable, hazardous, kitchen, resitual     collection banks</td></tr><tr><td>participate in environment organizations</td><td></td></tr><tr><td>conserve water resources</td><td></td></tr><tr><td></td><td></td></tr><tr><td><strong>useful</strong> <strong>expressions</strong></td><td></td></tr><tr><td>损害</td><td>take one’s toll on/cause damage to</td></tr><tr><td>A对B造成很大负担</td><td>A put a heavy burden on B</td></tr><tr><td>处于危险中（注意区分）</td><td>be under threat from/be in danger of/put sth at risk</td></tr><tr><td>生态平衡</td><td>ecological balance/ecological equilibrium</td></tr><tr><td>可持续发展</td><td>sustainable development</td></tr><tr><td>环保主义者</td><td>environmentalist/conservationist</td></tr><tr><td>对环境无害的</td><td>environmentally-friendly</td></tr><tr><td>肥沃/贫瘠的土壤</td><td>fertile/infertile soil</td></tr><tr><td>臭氧层</td><td>ozone layer</td></tr><tr><td>耕地</td><td>arable land/farmland</td></tr><tr><td>增加农产品产量</td><td>boost crop yield</td></tr><tr><td>开采自然资源</td><td>exploit natural resources</td></tr><tr><td>短缺</td><td>be in a shortage/scarcity/dearth/lack of</td></tr><tr><td>消耗（某种资源）</td><td>consume/deplete</td></tr><tr><td>耗尽（某种资源）</td><td>use up/exhaust</td></tr><tr><td>给资源造成很大压力</td><td>put a strain on the already stretched resources</td></tr><tr><td>破坏自然资源</td><td>wreak havoc on natural resources</td></tr><tr><td>污水</td><td>effluent/sewage</td></tr><tr><td>排放</td><td>discharge</td></tr><tr><td>温室效应</td><td>greenhouse effect/global warming</td></tr><tr><td>严重的</td><td>severe/grave/grievous</td></tr><tr><td>白色污染产生的垃圾</td><td>non-biodegradable garbage/wastes that cannot decompose or breakdown/inorganic trash</td></tr><tr><td>恶化</td><td>deteriorate/aggravate</td></tr><tr><td>可再生资源</td><td>renewable resources</td></tr><tr><td>不可再生资源</td><td>non-renewable resources(metals, minerals, petroleum, natural gas, coal(后三种为fossil fuels))</td></tr><tr><td>增强公众关于……的意识</td><td>raise/elevate the public awareness of sth</td></tr><tr><td>各国必须携手解决环境问题</td><td>countries on this planet must join forces/make a concerted effort/make collective efforts/unite to environmental problems</td></tr><tr><td>谴责而不是纵容</td><td>condemn rather than condone sth</td></tr><tr><td>严厉的措施</td><td>harsh/stiff action/measures</td></tr></tbody></table><h3 id="Sentences"><a href="#Sentences" class="headerlink" title="Sentences:"></a>Sentences:</h3><p>1.这意味着环境问题已经成为大城市人们关心的主要问题。</p><p>This indicated that environmental issues have become major concerns of citizens in metropolises.</p><p>2.造成严重污染的产业往往对国家税收和整体GDP的贡献最大。</p><p>The industries which caused severe contamination usually contribute to the tax revenue and overall GDP.</p><p>3.汽车尾气是空气污染的重要原因。</p><p>Car emissions contributes a lot to air pollution.</p><p>4.面对交通堵塞，大部分人只会抱怨政府。</p><p>Most people only complain about the government when face traffic congestions.</p><p>5.近几十年工业的快速发展给人们带来了很大的好处，但紧随而来的是我们正在忍受的严重的环境污染。</p><p>In recent decades, the rapid development of industry benefits people a lot, but what is following is that we are suffering from grave environmental contamination.</p><h1 id="Health"><a href="#Health" class="headerlink" title="Health"></a>Health</h1><h3 id="Expressions-1"><a href="#Expressions-1" class="headerlink" title="Expressions:"></a>Expressions:</h3><table><thead><tr><th>health conditions</th><th></th></tr></thead><tbody><tr><td>chronic disorder</td><td>diabetes, stroke, hypertension, respiratory, disease, malnutrition, obesity/overweight, heart disease, high cholesterol</td></tr><tr><td>infectious diseases</td><td>flu, skin disease, Aids</td></tr><tr><td>incurable/terminal diseases</td><td>cancer</td></tr><tr><td>psychological problems</td><td>low self-esteem, unsociable, inferior, depression, anxiety, autism</td></tr><tr><td>poor/weakened eyesight</td><td>visual impairment, myopia</td></tr><tr><td>attention disorder</td><td></td></tr><tr><td><strong>healthy lifestyle</strong></td><td></td></tr><tr><td>proper/wholesome eating habits</td><td>balanced diet, vegetarian</td></tr><tr><td>regular physical activity</td><td>jogging, swimming, climbing, yoga, do aerobics</td></tr><tr><td>adequate sleep</td><td></td></tr><tr><td>a good mood/positive outlook</td><td></td></tr><tr><td>developing healthy habits</td><td></td></tr><tr><td>healthy consulting</td><td></td></tr><tr><td>nutrients</td><td>fiber, vitamin, protein, mineral</td></tr><tr><td><strong>unhealthy lifestyle</strong></td><td></td></tr><tr><td>unwholesome diet</td><td>imbalanced diet, junk food, high-calories, energy-dense, nutrient-poor, snack, fast food, meat-centered diet, binging/overeating, pre-prepared food/processed food, package food, fried food</td></tr><tr><td>physical inactivity</td><td>sedentary lifestyle, passive leisure pursuit, heavy TV viewing, addiction to cell phones</td></tr><tr><td>environmental problems</td><td>water/air/noise pollution, toxic substance, food pollution</td></tr><tr><td>stress</td><td>stressful life, workaholic</td></tr><tr><td>smoking and alcoholism</td><td></td></tr><tr><td>drug addiction</td><td></td></tr></tbody></table><h3 id="Practice"><a href="#Practice" class="headerlink" title="Practice:"></a>Practice:</h3><p>The most effective way for the government to conserve energy is to increase the price of gasoline and electricity.</p><p>Whether or not the most effective way for the government to conserve energy is to increase the price of gasoline and electricity is an often-debated topic. While some people may feel that <strong>the authority</strong> should raise the price <strong>thus</strong> reducing people’s use of energy, I do not believe that this is the most effective way. A world <strong>where</strong> energy use is strictly restricted cannot guarantee people’s well-being, and human development would be retarded. I believe that the price should be reasonably set and as stable as possible instead of being recklessly increased.</p><p>Firstly, due to the increasing price of gasoline and electricity, the cost of living will <strong>correspondingly</strong> rise, which causes social problems. For instance, commuters, who choose public transport over driving owing to the increasing price of gasoline, may get exhausted from a longer <strong>commuting</strong> time than before. Then they will lack energy and patience in their work, which means <strong>their productivity may suffer. Lower productivity can hardly win them an opportunity to get promoted and decently paid</strong>. Without enough well-being, people tend to complain about the government.</p><p>Moreover, people who have high income or profit from energy are indifferent to high prices. For example, what energy related industries will do when face the increasing price of gasoline and electricity is to correspondingly raise the price of products, or lower the quality to reduce the cost. After all, the extra cost is ultimately borne by consumers. Besides, industrial output will decrease more or less. Once supply is less than demand, the public interest will be influenced by soaring prices. Capitalists, by contrast, benefit from it.</p><p>In conclusion, I <strong>hold an opinion that</strong> increasing the price of energy is <strong>far from being the best way</strong> to conserve energy. Rather than just focusing on raising prices, improving energy efficiency is a better idea. In this case, not only can people’s well-being be guaranteed, but also the problem of energy waste and environmental contamination will be significantly reduced.</p>]]></content>
      
      
      <categories>
          
          <category> TOEFL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TOEFL-Writing-School and Education</title>
      <link href="/2019/11/10/TOEFL-Writing-School%20and%20Education/"/>
      <url>/2019/11/10/TOEFL-Writing-School%20and%20Education/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Expressions"><a href="#Expressions" class="headerlink" title="Expressions:"></a>Expressions:</h3><table><thead><tr><th><strong>教育目的（对个人）</strong></th><th></th></tr></thead><tbody><tr><td><strong>1.德</strong>：提高道德标准</td><td>raise moral code/standards</td></tr><tr><td>成为好的社会成员</td><td>be a valuable/active social member</td></tr><tr><td>道德准则</td><td>a strong moral code</td></tr><tr><td>承担责任</td><td>assume/shoulder the responsibility to do</td></tr><tr><td>与他人合作</td><td>cooperate with others</td></tr><tr><td>价值体系</td><td>value system</td></tr><tr><td>遵纪守法</td><td>observe disciplines and obey laws</td></tr><tr><td>社区观念</td><td>sense of community</td></tr><tr><td>辨别是非</td><td>distinguish between right and wrong</td></tr><tr><td>团队精神</td><td>team spirit</td></tr><tr><td><strong>2.智</strong>：理论知识+分析问题的能力</td><td>theoretical/academic knowledge + analyzing skills</td></tr><tr><td>独立和批判思考</td><td>independent and critical thinking</td></tr><tr><td>人际交往能力</td><td>interpersonal skills</td></tr><tr><td>领导力</td><td>leadership skills</td></tr><tr><td>组织能力</td><td>organizing skills</td></tr><tr><td>坚实的理论基础</td><td>a solid foundation in basics</td></tr><tr><td>动手操作的经验</td><td>hands-on experience</td></tr><tr><td>一手知识</td><td>first-hand knowledge</td></tr><tr><td>二手知识</td><td>second-hand knowledge</td></tr><tr><td>培养学生的竞争意识</td><td>cultivate/nurture a sense of competition <strong>in</strong> students</td></tr><tr><td>获得知识/技能</td><td>acquire/obtain knowledge/skills</td></tr><tr><td><strong>3.体</strong>：身体健康+心理健康+养成良好的生活习惯</td><td>physical fitness/well-being</td></tr><tr><td>饮食健康</td><td>wholesome diet</td></tr><tr><td>强制的</td><td>compulsory</td></tr><tr><td>久坐的生活习惯</td><td>sedentary lifestyle</td></tr><tr><td>激发对体育的兴趣</td><td>stimulate students’ interests in sports</td></tr><tr><td><strong>4.美</strong>：提升审美水平+文化修养</td><td>appreciation of Arts and Literature</td></tr><tr><td>自信</td><td>self-confidence</td></tr><tr><td>自律</td><td>self-discipline</td></tr><tr><td>自尊</td><td>self-esteem</td></tr><tr><td>自我培养</td><td>self-cultivation</td></tr><tr><td>内在动力</td><td>inner-motivation</td></tr><tr><td>毅力</td><td>persistence/perseverance/grit</td></tr><tr><td><strong>5.劳</strong>：就业</td><td>obtain employment</td></tr><tr><td>合格的员工</td><td>a qualified employee</td></tr><tr><td>找工作</td><td>seek for employment</td></tr><tr><td>找一个好工作</td><td>find a decent job</td></tr><tr><td>找一份高薪的工作</td><td>find a well-paid job</td></tr><tr><td>找一份满意的工作</td><td>find a satisfying/satisfactory job</td></tr><tr><td>工作技能</td><td>employability skills</td></tr><tr><td>职业前景</td><td>career prospect</td></tr><tr><td>全面的</td><td>all-rounded/well-rounded</td></tr><tr><td>谋生</td><td>seek a livelihood</td></tr><tr><td>实习生</td><td>intern</td></tr><tr><td>实习</td><td>internship</td></tr><tr><td>职业道德</td><td>work ethics</td></tr><tr><td>就业率/失业率</td><td>employment/unemployment rate</td></tr><tr><td><strong>教育目的（对社会）</strong></td><td></td></tr><tr><td>提高就业率</td><td>improve employment rate</td></tr><tr><td>促进经济发展</td><td>boost economy</td></tr><tr><td>维护社会稳定</td><td>stabilize the society</td></tr><tr><td></td><td></td></tr><tr><td><strong>Other useful expressions</strong></td><td></td></tr><tr><td>高等教育</td><td>tertiary education            secondary primary/elementary</td></tr><tr><td>义务教育</td><td>compulsory education</td></tr><tr><td>全面发展</td><td>rounded development</td></tr><tr><td>课程</td><td>courses/take a course in</td></tr><tr><td>学科</td><td>subject/discipline</td></tr><tr><td>家长对小孩的教育</td><td>parenting    domestic/family education      home schooling(家庭学校)</td></tr><tr><td>学校对学生的教育</td><td>schooling</td></tr><tr><td>反馈</td><td>feedback</td></tr><tr><td>捣乱的学生</td><td>disruptive students</td></tr><tr><td>课程大纲</td><td>curriculum</td></tr><tr><td>应试教育</td><td>test-oriented education</td></tr><tr><td>死记硬背</td><td>learn by rote/cram/spoon-feeding</td></tr><tr><td>学位工厂</td><td>degree factory</td></tr><tr><td>学校是社会的一个缩影</td><td>a school is a society in miniature</td></tr><tr><td>双语的/多语的</td><td>bilingual/multilingual</td></tr><tr><td>以学生为中心的</td><td>learner-oriented</td></tr><tr><td>拖延症</td><td>procrastination</td></tr><tr><td>心理学文凭</td><td>a diploma in psychology</td></tr></tbody></table><h3 id="Words-and-Expressions"><a href="#Words-and-Expressions" class="headerlink" title="Words and Expressions:"></a>Words and Expressions:</h3><table><thead><tr><th align="left">Chinese</th><th>Expression</th><th>Example</th></tr></thead><tbody><tr><td align="left">从日常生活中学到</td><td>gain from daily life</td><td>We can gain lots of knowledge, at least the common sense, from our daily life.</td></tr><tr><td align="left">竞争力在于</td><td>competitive edge lies in</td><td>Her competitive edge lies in the name of her university, which is the Peking University.</td></tr><tr><td align="left">仅仅只是</td><td>nothing but</td><td>Her stare betrayed nothing but muddle and inattention.</td></tr><tr><td align="left">击成碎片</td><td>smash into pieces</td><td>This overwhelming project smashed her into pieces.</td></tr><tr><td align="left">假装看不到</td><td>turn a blind eye to</td><td>They would even turn a blind eye to an old granny who falls down on the road crying out loud for help.</td></tr><tr><td align="left">由他们自己决定</td><td>at their own discretion</td><td>This is a decision students should make at their own discretion.</td></tr><tr><td align="left">有责任</td><td>be obligatory</td><td>It is obligatory for all staff in the lab to wear protective clothing.</td></tr><tr><td align="left">回想，回顾</td><td>reflect on</td><td>The old man reflected on the changes that had taken place since his youth.</td></tr><tr><td align="left">放弃</td><td>let go of</td><td>We can never let go of our responsibilities.</td></tr></tbody></table><h3 id="Sentences"><a href="#Sentences" class="headerlink" title="Sentences:"></a>Sentences:</h3><p>1.学校是应该教授更多的学术知识还是实用技能一直是一个有争议的问题。</p><p>It remains an controversial issue that schools are supposed to teach more theoretical knowledge or practical skills.</p><p>2.有些学生不想上学，因为他们感到来自同龄人的压力。</p><p>Some students don’t want to go to school, because they feel the stress from their peers.</p><p>3.老师应该鼓励学生用辩证的眼光看问题。</p><p>Teachers should encourage students to consider problems with dialectical view.</p><p>4.除了学习成绩，大学应该重视培养学生解决问题的能力、组织能力和人际交流能力。</p><p>Except for academic grades, college should pay attention to cultivate problem-solving, organizing and interpersonal skills.</p><h3 id="Practice："><a href="#Practice：" class="headerlink" title="Practice："></a>Practice：</h3><p>Which one of the reason is most important in helping students to study in colleges and universities?</p><p>A. Having access to the university tutors who can provide individual instruction for the students who have difficulty in study.</p><p>B. Having the help and encouragement from the family and friends.</p><p>C. Having excellent teachers in high-school who can help the students before the university.</p><p>Use you OWN words to illustrate your point. Don’t use your memorized examples.(300 words)</p><p>During <strong>the university</strong>, students <strong>are supposed to</strong> enrich their knowledge constantly <strong>and be successful in their academic field</strong>. However, students are <strong>less likely</strong> <strong>to achieve rounded development</strong> on their own. This is the reason why undergraduates need others’ help. When thinking about who plays the most important role in helping students to study in universities, different people have different ideas. While some people may believe it is family and friends,  <strong>and</strong> some consider it is high-school teachers, I think it is university tutors <strong>who is key</strong>.</p><p>Firstly, university tutors are helpful in <strong>professional academic research</strong>. When students have difficulty in study, tutors can provide individual instruction. Since they have already studied this field for a long time. As for me, I major in computer science. When I have problems with programming, my tutor always proposes more accurate and comprehensible solutions patiently <strong>than mine</strong>. And I can learn programming <strong>thinking pattern</strong> from her suggestions. Thanks to her, I am familiar with programming <strong>and find it interesting</strong> now.</p><p>Furthermore, tutors can broaden students’ professional horizon. Tutors may teach basic knowledge in the major, but what they are digging into is probably the most advanced in the field. Knowing any of those will be valuable for students. For example, I used to help my tutor who teaches machine learning with some <strong>additional</strong> jobs in his digital vein comparison project based on neutral network. My team members and I compared more than 70,000 digital vein images with our own naked eye. This seemingly boring task made  me understand the boredom behind scientific research, so that I can be better prepared for it in the future.</p><p>In conclusion, I really believe university tutors have a vital role to play <strong>in terms of helping us succeed in our university</strong>. With tutors help, students can not only <strong>acquire</strong> the knowledge which they are required to study at the moment, but also extend their vision to a further place in the professional field. This is why I support having access to the university tutors <strong>instead of seeking help from family, friends or high-school teachers</strong>.</p>]]></content>
      
      
      <categories>
          
          <category> TOEFL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PTA(Advanced Level) 1003 Emergency</title>
      <link href="/2019/11/09/PTA-Advanced-Level-1003-Emergency/"/>
      <url>/2019/11/09/PTA-Advanced-Level-1003-Emergency/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>As an emergency rescue team leader of a city, you are given a special map of your country. The map shows several scattered cities connected by some roads. Amount of rescue teams in each city and the length of each road between any pair of cities are marked on the map. When there is an emergency call to you from some other city, your job is to lead your men to the place as quickly as possible, and at the mean time, call up as many hands on the way as possible.</p><h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each test case, the first line contains 4 positive integers: <em>N</em> (≤500) - the number of cities (and the cities are numbered from 0 to <em>N</em>−1), <em>M</em> - the number of roads, <em>C</em>1 and <em>C</em>2 - the cities that you are currently in and that you must save, respectively. The next line contains <em>N</em> integers, where the <em>i</em>-th integer is the number of rescue teams in the <em>i</em>-th city. Then <em>M</em> lines follow, each describes a road with three integers <em>c</em>1, <em>c</em>2 and <em>L</em>, which are the pair of cities connected by a road and the length of that road, respectively. It is guaranteed that there exists at least one path from <em>C</em>1 to <em>C</em>2.</p><h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, print in one line two numbers: the number of different shortest paths between <em>C</em>1 and <em>C</em>2, and the maximum amount of rescue teams you can possibly gather. All the numbers in a line must be separated by exactly one space, and there is no extra space allowed at the end of a line.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">5 6 0 2</span><br><span class="line">1 2 1 5 3</span><br><span class="line">0 1 1</span><br><span class="line">0 2 2</span><br><span class="line">0 3 1</span><br><span class="line">1 2 1</span><br><span class="line">2 4 1</span><br><span class="line">3 4 1</span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 4</span><br></pre></td></tr></table></figure><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h3><p>注意：</p><p>1.题目要求的是最短路的条数而不是长度</p><p>2.memset的用法：将每个字节赋相同值（0x）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 99999</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Ncity 501</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Nroad 10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> rescue[Ncity], <span class="built_in">map</span>[Ncity][Ncity], dis[Nroad], vis[Ncity] = &#123; <span class="number">0</span> &#125;, maxteam[Ncity], way[Ncity];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> N, M, C1, C2;</span><br><span class="line"><span class="keyword">int</span> i, j, k, u, minn;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;N, &amp;M, &amp;C1, &amp;C2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//memset(map, INF, sizeof(map));//初始化地图</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; N; j++) &#123;</span><br><span class="line"><span class="built_in">map</span>[i][j] = INF;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)<span class="comment">//输入各城市救援队数量</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;rescue[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; M; i++) &#123;<span class="comment">//输入路径</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;j, &amp;k);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;<span class="built_in">map</span>[j][k]);</span><br><span class="line"><span class="built_in">map</span>[k][j] = <span class="built_in">map</span>[j][k];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">dis[i] = <span class="built_in">map</span>[C1][i];</span><br><span class="line">maxteam[i] = rescue[i];</span><br><span class="line">way[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (dis[i] != INF &amp;&amp; i != C1) &#123;</span><br><span class="line">maxteam[i] += rescue[C1];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vis[C1] = <span class="number">1</span>;<span class="comment">//标记起点</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; N; i++) &#123;<span class="comment">//Dijkstra</span></span><br><span class="line">minn = INF;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; N; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (vis[j] == <span class="number">0</span> &amp;&amp; dis[j] &lt; minn) &#123;</span><br><span class="line">minn = dis[j];</span><br><span class="line">u = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">vis[u] = <span class="number">1</span>;<span class="comment">//标记u</span></span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; N; k++) &#123;<span class="comment">//松弛u</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">map</span>[u][k] &lt; INF &amp;&amp; vis[k] == <span class="number">0</span>) &#123;<span class="comment">//沿着一条路走</span></span><br><span class="line"><span class="keyword">if</span> (dis[k] &gt; dis[u] + <span class="built_in">map</span>[u][k]) &#123;</span><br><span class="line">dis[k] = dis[u] + <span class="built_in">map</span>[u][k];</span><br><span class="line">maxteam[k] = maxteam[u] + rescue[k];</span><br><span class="line">way[k] = way[u];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (dis[k] == dis[u] + <span class="built_in">map</span>[u][k]) &#123;<span class="comment">//出现了另一条路</span></span><br><span class="line">way[k] += way[u];</span><br><span class="line"><span class="keyword">if</span> (maxteam[k] &lt; maxteam[u] + rescue[k]) &#123;</span><br><span class="line">maxteam[k] = maxteam[u] + rescue[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d"</span>, way[C2], maxteam[C2]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Advanced Level </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PTA(Advanced Level) 1002 A+B for Polynomials</title>
      <link href="/2019/11/08/PTA-Advanced-Level-1002-A-B-for-Polynomials/"/>
      <url>/2019/11/08/PTA-Advanced-Level-1002-A-B-for-Polynomials/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>This time, you are supposed to find <em>A</em>+<em>B</em> where <em>A</em> and <em>B</em> are two polynomials.</p><h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial:</p><p><em>K</em>  <em>N1</em> <em>aN1</em> <em>N2</em> <em>aN2</em> … <em>NK</em> <em>aNK</em></p><p>where <em>K</em> is the number of nonzero terms in the polynomial, <em>Ni</em> and <em>aNi</em> (<em>i</em>=1,2,⋯,<em>K</em>) are the exponents and coefficients, respectively. It is given that 1≤<em>K</em>≤10，0≤<em>NK</em>&lt;⋯&lt;<em>N</em>2&lt;<em>N</em>1≤1000.</p><h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case you should output the sum of <em>A</em> and <em>B</em> in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate to 1 decimal place.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2 1 2.4 0 3.2</span><br><span class="line">2 2 1.5 1 0.5</span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 2 1.5 1 2.9 0 3.2</span><br></pre></td></tr></table></figure><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, k;</span><br><span class="line"><span class="keyword">double</span> b, n[<span class="number">1010</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;k);</span><br><span class="line"><span class="keyword">while</span> (k--) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%lf"</span>, &amp;a, &amp;b);</span><br><span class="line">n[a] += b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> maxx, cnt = <span class="number">0</span>;<span class="comment">//记录最大的N</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1010</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (n[i]) &#123;</span><br><span class="line">cnt++;</span><br><span class="line">maxx = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, cnt);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = maxx; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line"><span class="keyword">if</span> (n[i])</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %d %.1lf"</span>, i, n[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Advanced Level </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库实验六</title>
      <link href="/2019/11/06/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E9%AA%8C%E5%85%AD/"/>
      <url>/2019/11/06/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E9%AA%8C%E5%85%AD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--以系统管理员身份登录到SQL Server服务器，并使用T-SQL语句实现以下操作：</span></span><br><span class="line"><span class="keyword">use</span> student</span><br><span class="line"><span class="comment">--1.将stu数据库中student表的sno定义为主键；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> primary <span class="keyword">key</span>(sno)</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.将数据库stu的表course的cno字段定义为主键，约束名称为cno_pk;</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> course</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> cno_pk</span><br><span class="line">primary <span class="keyword">key</span>(cno)</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.为表course中的字段cname添加唯一值约束；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> course</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> cname_uq</span><br><span class="line"><span class="keyword">unique</span>(cname)</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.将数据库stu的表sc的sno及cno字段组合定义为主键，约束名称为sc_pk;</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> sc</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> sc_pk</span><br><span class="line">primary <span class="keyword">key</span>(sno,cno)</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.对于数据表sc的sno、cno字段定义为外码，使之与表student的主码sno及表course的主码cno对应，实现如下参照完整性：</span></span><br><span class="line"><span class="comment">--1)删除student表中记录的同时删除sc表中与该记录sno字段值相同的记录；</span></span><br><span class="line"><span class="comment">--2)修改student表某记录的sno时，若sc表中与该字段值对应的有若干条记录，则拒绝修改；</span></span><br><span class="line"><span class="comment">--3)修改course表cno字段值时，该字段在sc表中的对应值也应修改；</span></span><br><span class="line"><span class="comment">--4)删除course表一条记录时，若该字段在在sc表中存在，则删除该字段对应的记录；</span></span><br><span class="line"><span class="comment">--5)向sc表添加记录时，如果该记录的sno字段的值在student中不存在，则拒绝插入；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> sc</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> sc_fk <span class="keyword">foreign</span> <span class="keyword">key</span> (sno) <span class="keyword">references</span> student(sno) <span class="keyword">on</span> <span class="keyword">delete</span> <span class="keyword">cascade</span> <span class="keyword">on</span> <span class="keyword">update</span> <span class="keyword">no</span> <span class="keyword">action</span>,</span><br><span class="line"> <span class="keyword">foreign</span> <span class="keyword">key</span> (cno) <span class="keyword">references</span> course(cno)  <span class="keyword">on</span> <span class="keyword">delete</span> <span class="keyword">cascade</span> <span class="keyword">on</span> <span class="keyword">update</span> <span class="keyword">cascade</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--6.定义check约束，要求学生学号sno必须为9位数字字符，且不能以0开头，第二三位皆为0；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> sno_ck</span><br><span class="line"><span class="keyword">check</span>(sno <span class="keyword">like</span> <span class="string">'[1-9]00[0-9][0-9][0-9][0-9][0-9][0-9]'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.定义stu数据库中student表中学生年龄值在16-25范围内；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> sage_ck</span><br><span class="line"><span class="keyword">check</span>(sage <span class="keyword">between</span> <span class="number">16</span> <span class="keyword">and</span> <span class="number">25</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--8.定义stu数据库中student表中学生姓名长度在2-8之间；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> sname_ck</span><br><span class="line"><span class="keyword">check</span>(sname <span class="keyword">like</span> <span class="string">'__'</span>|<span class="string">'___'</span>|<span class="string">'____'</span>|<span class="string">'_____'</span>|<span class="string">'______'</span>|<span class="string">'_______'</span>|<span class="string">'________'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--9.定义stu数据库中student表中学生性别列中只能输入“男”或“女”；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> ssex_ck</span><br><span class="line"><span class="keyword">check</span>(ssex <span class="keyword">in</span> (<span class="string">'男'</span>,<span class="string">'女'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">--10.定义stu数据库student表中学生年龄值默认值为20；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> sage_df</span><br><span class="line"><span class="keyword">default</span> <span class="number">20</span> <span class="keyword">for</span> sage</span><br><span class="line"></span><br><span class="line"><span class="comment">--11.修改student表学生的年龄值约束可以为15-30范围内；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">constraint</span> sage_ck</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> sage_ck</span><br><span class="line"><span class="keyword">check</span>(sage <span class="keyword">between</span> <span class="number">15</span> <span class="keyword">and</span> <span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--12.删除上述唯一值约束、外键约束及check约束；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> course</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">constraint</span> cname_uq</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> sc</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">constraint</span> sc_fk</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">constraint</span> sno_ck,sname_ck,ssex_ck,sage_ck</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> xsgl</span><br><span class="line"><span class="comment">--13.设计触发器实现如果一个学生转专业了，那么输出一条信息显示该学生各门课程的平均分。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> dept_ch</span><br><span class="line"><span class="keyword">on</span> xs</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">update</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">update</span>(专业)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span> cj.学号,<span class="keyword">avg</span>(成绩)</span><br><span class="line"><span class="keyword">from</span> cj,inserted</span><br><span class="line"><span class="keyword">where</span> cj.学号 = inserted.学号</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.学号</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> xs</span><br><span class="line"><span class="keyword">set</span> xs.专业 = <span class="string">'信息管理'</span></span><br><span class="line"><span class="keyword">where</span> xs.学号 = <span class="string">'2006030101'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--14.设计触发器实现如果成绩被修改了20分以上，则输出提示信息“修改成绩超过20分，请慎重”。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> grade_ck_tg</span><br><span class="line"><span class="keyword">on</span> cj</span><br><span class="line"><span class="keyword">after</span> <span class="keyword">update</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">declare</span> @pregrade <span class="built_in">numeric</span>(<span class="number">18</span>,<span class="number">0</span>),@aftgrade <span class="built_in">numeric</span>(<span class="number">18</span>,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">select</span> @pregrade = 成绩 <span class="keyword">from</span> inserted</span><br><span class="line"><span class="keyword">select</span> @aftgrade = 成绩 <span class="keyword">from</span> deleted</span><br><span class="line"><span class="keyword">if</span>((@pregrade-@aftgrade)&gt;<span class="number">20</span> <span class="keyword">or</span> (@aftgrade-@pregrade)&gt;<span class="number">20</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">print<span class="string">'修改成绩超过20分，请慎重'</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> cj</span><br><span class="line"><span class="keyword">set</span> cj.成绩 = <span class="number">89</span></span><br><span class="line"><span class="keyword">where</span> cj.学号 = <span class="string">'2006030101'</span> <span class="keyword">and</span> cj.课程号 = <span class="string">'A001'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--15.在student表中增加一列total,表示学生选课总门数，初始值为0。</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> xs</span><br><span class="line"><span class="keyword">add</span> total <span class="built_in">int</span> <span class="keyword">default</span> <span class="number">0</span></span><br><span class="line"><span class="comment">--定义一个触发器，实现如下完整性约束：当向SC表插入选课记录时，自动更新student表对应学号的total值,考虑成批插入数据的情况。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> sc_insert</span><br><span class="line"><span class="keyword">on</span> cj</span><br><span class="line"><span class="keyword">after</span> <span class="keyword">insert</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">declare</span> @total <span class="built_in">int</span></span><br><span class="line"><span class="keyword">select</span> @total = total <span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">update</span> xs</span><br><span class="line"><span class="keyword">set</span> total = @total+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--16.设计一触发器，约束数据库系统课程的课容量为120。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> contain</span><br><span class="line"><span class="keyword">on</span> cj</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">insert</span>,<span class="keyword">update</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">declare</span> @<span class="keyword">num</span> <span class="built_in">int</span></span><br><span class="line"><span class="keyword">select</span> @<span class="keyword">num</span> = <span class="keyword">count</span>(*) <span class="keyword">from</span> deleted,kc <span class="keyword">where</span> deleted.课程号 = kc.课程号 <span class="keyword">and</span> kc.课程名=<span class="string">'数据库系统'</span></span><br><span class="line"><span class="keyword">if</span> @<span class="keyword">num</span> &gt; <span class="number">120</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">rollback</span> <span class="keyword">transaction</span></span><br><span class="line">print<span class="string">'数据库课程人数已满'</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--17.设有两个表：商品库存表（商品编号，商品名称，库存数量，库存单价，库存金额）；商品销售表（商品编号，商品名称，购货商号，销售数量，销售单价，销售金额）；设计一触发器实现如下业务规则：</span></span><br><span class="line"><span class="comment">--（1）保证在商品库存表中插入的数据，库存金额 = 库存数量 * 库存单价。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> insert_商品库存表  </span><br><span class="line"><span class="keyword">on</span> 商品库存表  </span><br><span class="line"><span class="keyword">for</span> <span class="keyword">insert</span> </span><br><span class="line"><span class="keyword">as</span>  </span><br><span class="line"><span class="keyword">update</span> 商品库存表  </span><br><span class="line"><span class="keyword">set</span> 库存金额 = 库存数量 * 库存单价  </span><br><span class="line"><span class="keyword">where</span> 商品编号 <span class="keyword">in</span> (<span class="keyword">select</span> 商品编号 <span class="keyword">from</span> inserted)</span><br><span class="line"></span><br><span class="line"><span class="comment">--（2）如果销售的商品不存在库存或者库存为零，则返回提示信息。否则自动减少商品库存表中对应商品的库存数量和库存金额。</span></span><br><span class="line"><span class="comment">--建表并验证触发器的执行。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> insert_商品销售表 </span><br><span class="line"><span class="keyword">on</span> 商品销售表 </span><br><span class="line"><span class="keyword">for</span> <span class="keyword">insert</span> </span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">begin</span> <span class="keyword">transaction</span> </span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> ( </span><br><span class="line"><span class="keyword">select</span> 库存数量 </span><br><span class="line"><span class="keyword">from</span> 商品库存表 </span><br><span class="line"><span class="keyword">where</span> 商品编号 <span class="keyword">in</span> (<span class="keyword">select</span> 商品编号 <span class="keyword">from</span> inserted) ) </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">raiseerror(<span class="string">'错误！该商品不存在库存，不能销售！'</span>,<span class="number">16</span>,<span class="number">1</span>) </span><br><span class="line"><span class="keyword">rollback</span> </span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span> ( </span><br><span class="line"><span class="keyword">select</span> 库存数量 </span><br><span class="line"><span class="keyword">from</span> 商品库存表 </span><br><span class="line"><span class="keyword">where</span> 商品编号 <span class="keyword">in</span> (<span class="keyword">select</span> 商品编号 <span class="keyword">from</span> inserted) <span class="keyword">and</span> 库存数量 &lt;= <span class="number">0</span> ) </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">raiseerror(<span class="string">'错误！该商品库存小于等于0，不能销售!'</span>,<span class="number">16</span>,<span class="number">1</span>) </span><br><span class="line"><span class="keyword">rollback</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--18．建立教师表（教工编号，姓名，专业，职称，工资）和工资变化表（教工编号，原工资，新工资）</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> teacher(</span><br><span class="line">tno <span class="built_in">char</span>(<span class="number">10</span>) primary <span class="keyword">key</span>,</span><br><span class="line">tname <span class="keyword">nchar</span>(<span class="number">10</span>),</span><br><span class="line">tdept <span class="built_in">char</span>(<span class="number">16</span>),</span><br><span class="line">tpro <span class="built_in">char</span>(<span class="number">10</span>),</span><br><span class="line">tsala money</span><br><span class="line">)</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> sala_change(</span><br><span class="line">tno <span class="built_in">char</span>(<span class="number">10</span>),</span><br><span class="line">tpresala money,</span><br><span class="line">taftsala money</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--设计触发器实现教授的工资不得低于4000元，如果低于4000元则自动改为4000元。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> sala_tg</span><br><span class="line"><span class="keyword">on</span> teacher</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">update</span>,<span class="keyword">insert</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">declare</span> @sala money</span><br><span class="line"><span class="keyword">select</span> @sala = tsala <span class="keyword">from</span> teacher</span><br><span class="line"><span class="keyword">if</span> @sala &lt; <span class="number">4000</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">update</span> teacher</span><br><span class="line"><span class="keyword">set</span> tsala = <span class="number">4000</span></span><br><span class="line"><span class="keyword">update</span> sala_change</span><br><span class="line"><span class="keyword">set</span> taftsala = <span class="number">4000</span>,tpresala = @sala</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--19.使用第18题的两个表设计触发器实现如果教工的工资发生变化则向工资变化表插入一条记录，包含教工编号，原工资，新工资。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> insert_if_change</span><br><span class="line"><span class="keyword">on</span> teacher</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">update</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">update</span>(tsala)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">declare</span> @tno <span class="built_in">char</span>(<span class="number">10</span>),@tpresala money,@taftsala money</span><br><span class="line"><span class="keyword">select</span> @tno = tno <span class="keyword">from</span> teacher</span><br><span class="line"><span class="keyword">select</span> @tpresala = tsala <span class="keyword">from</span> deleted</span><br><span class="line"><span class="keyword">select</span> @taftsala = tsala <span class="keyword">from</span> inserted</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> sala_change</span><br><span class="line"><span class="keyword">values</span>(@tno,@tpresala,@taftsala)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Data Base Management System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL Server 数据类型</title>
      <link href="/2019/11/05/SQL-Server-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2019/11/05/SQL-Server-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Character-字符串："><a href="#Character-字符串：" class="headerlink" title="Character 字符串："></a>Character 字符串：</h3><table><thead><tr><th align="left">数据类型</th><th align="left">描述</th><th align="left">存储</th></tr></thead><tbody><tr><td align="left">char(n)</td><td align="left">固定长度的字符串。最多 8,000 个字符。</td><td align="left">n</td></tr><tr><td align="left">varchar(n)</td><td align="left">可变长度的字符串。最多 8,000 个字符。</td><td align="left"></td></tr><tr><td align="left">varchar(max)</td><td align="left">可变长度的字符串。最多 1,073,741,824 个字符。</td><td align="left"></td></tr><tr><td align="left">text</td><td align="left">可变长度的字符串。最多 2GB 字符数据。</td><td align="left"></td></tr></tbody></table><h3 id="Unicode-字符串："><a href="#Unicode-字符串：" class="headerlink" title="Unicode 字符串："></a>Unicode 字符串：</h3><table><thead><tr><th align="left">数据类型</th><th align="left">描述</th><th align="left">存储</th></tr></thead><tbody><tr><td align="left">nchar(n)</td><td align="left">固定长度的 Unicode 数据。最多 4,000 个字符。</td><td align="left"></td></tr><tr><td align="left">nvarchar(n)</td><td align="left">可变长度的 Unicode 数据。最多 4,000 个字符。</td><td align="left"></td></tr><tr><td align="left">nvarchar(max)</td><td align="left">可变长度的 Unicode 数据。最多 536,870,912 个字符。</td><td align="left"></td></tr><tr><td align="left">ntext</td><td align="left">可变长度的 Unicode 数据。最多 2GB 字符数据。</td><td align="left"></td></tr></tbody></table><h3 id="Binary-类型："><a href="#Binary-类型：" class="headerlink" title="Binary 类型："></a>Binary 类型：</h3><table><thead><tr><th align="left">数据类型</th><th align="left">描述</th><th align="left">存储</th></tr></thead><tbody><tr><td align="left">bit</td><td align="left">允许 0、1 或 NULL</td><td align="left"></td></tr><tr><td align="left">binary(n)</td><td align="left">固定长度的二进制数据。最多 8,000 字节。</td><td align="left"></td></tr><tr><td align="left">varbinary(n)</td><td align="left">可变长度的二进制数据。最多 8,000 字节。</td><td align="left"></td></tr><tr><td align="left">varbinary(max)</td><td align="left">可变长度的二进制数据。最多 2GB 字节。</td><td align="left"></td></tr><tr><td align="left">image</td><td align="left">可变长度的二进制数据。最多 2GB。</td><td align="left"></td></tr></tbody></table><h3 id="Number-类型："><a href="#Number-类型：" class="headerlink" title="Number 类型："></a>Number 类型：</h3><table><thead><tr><th align="left">数据类型</th><th align="left">描述</th><th align="left">存储</th></tr></thead><tbody><tr><td align="left">tinyint</td><td align="left">允许从 0 到 255 的所有数字。</td><td align="left">1 字节</td></tr><tr><td align="left">smallint</td><td align="left">允许从 -32,768 到 32,767 的所有数字。</td><td align="left">2 字节</td></tr><tr><td align="left">int</td><td align="left">允许从 -2,147,483,648 到 2,147,483,647 的所有数字。</td><td align="left">4 字节</td></tr><tr><td align="left">bigint</td><td align="left">允许介于 -9,223,372,036,854,775,808 和 9,223,372,036,854,775,807 之间的所有数字。</td><td align="left">8 字节</td></tr><tr><td align="left">decimal(p,s)</td><td align="left">固定精度和比例的数字。允许从 -10^38 +1 到 10^38 -1 之间的数字。p 参数指示可以存储的最大位数（小数点左侧和右侧）。p 必须是 1 到 38 之间的值。默认是 18。s 参数指示小数点右侧存储的最大位数。s 必须是 0 到 p 之间的值。默认是 0。</td><td align="left">5-17 字节</td></tr><tr><td align="left">numeric(p,s)</td><td align="left">固定精度和比例的数字。允许从 -10^38 +1 到 10^38 -1 之间的数字。p 参数指示可以存储的最大位数（小数点左侧和右侧）。p 必须是 1 到 38 之间的值。默认是 18。s 参数指示小数点右侧存储的最大位数。s 必须是 0 到 p 之间的值。默认是 0。</td><td align="left">5-17 字节</td></tr><tr><td align="left">smallmoney</td><td align="left">介于 -214,748.3648 和 214,748.3647 之间的货币数据。</td><td align="left">4 字节</td></tr><tr><td align="left">money</td><td align="left">介于 -922,337,203,685,477.5808 和 922,337,203,685,477.5807 之间的货币数据。</td><td align="left">8 字节</td></tr><tr><td align="left">float(n)</td><td align="left">从 -1.79E + 308 到 1.79E + 308 的浮动精度数字数据。 参数 n 指示该字段保存 4 字节还是 8 字节。float(24) 保存 4 字节，而 float(53) 保存 8 字节。n 的默认值是 53。</td><td align="left">4 或 8 字节</td></tr><tr><td align="left">real</td><td align="left">从 -3.40E + 38 到 3.40E + 38 的浮动精度数字数据。</td><td align="left">4 字节</td></tr></tbody></table><h3 id="Date-类型："><a href="#Date-类型：" class="headerlink" title="Date 类型："></a>Date 类型：</h3><table><thead><tr><th align="left">数据类型</th><th align="left">描述</th><th align="left">存储</th></tr></thead><tbody><tr><td align="left">datetime</td><td align="left">从 1753 年 1 月 1 日 到 9999 年 12 月 31 日，精度为 3.33 毫秒。</td><td align="left">8 bytes</td></tr><tr><td align="left">datetime2</td><td align="left">从 1753 年 1 月 1 日 到 9999 年 12 月 31 日，精度为 100 纳秒。</td><td align="left">6-8 bytes</td></tr><tr><td align="left">smalldatetime</td><td align="left">从 1900 年 1 月 1 日 到 2079 年 6 月 6 日，精度为 1 分钟。</td><td align="left">4 bytes</td></tr><tr><td align="left">date</td><td align="left">仅存储日期。从 0001 年 1 月 1 日 到 9999 年 12 月 31 日。</td><td align="left">3 bytes</td></tr><tr><td align="left">time</td><td align="left">仅存储时间。精度为 100 纳秒。</td><td align="left">3-5 bytes</td></tr><tr><td align="left">datetimeoffset</td><td align="left">与 datetime2 相同，外加时区偏移。</td><td align="left">8-10 bytes</td></tr><tr><td align="left">timestamp</td><td align="left">存储唯一的数字，每当创建或修改某行时，该数字会更新。timestamp 基于内部时钟，不对应真实时间。每个表只能有一个 timestamp 变量。</td><td align="left"></td></tr></tbody></table><h3 id="其他数据类型："><a href="#其他数据类型：" class="headerlink" title="其他数据类型："></a>其他数据类型：</h3><table><thead><tr><th align="left">数据类型</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">sql_variant</td><td align="left">存储最多 8,000 字节不同数据类型的数据，除了 text、ntext 以及 timestamp。</td></tr><tr><td align="left">uniqueidentifier</td><td align="left">存储全局标识符 (GUID)。</td></tr><tr><td align="left">xml</td><td align="left">存储 XML 格式化数据。最多 2GB。</td></tr><tr><td align="left">cursor</td><td align="left">存储对用于数据库操作的指针的引用。</td></tr><tr><td align="left">table</td><td align="left">存储结果集，供稍后处理。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Data Base Management System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构实验五</title>
      <link href="/2019/11/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C%E4%BA%94/"/>
      <url>/2019/11/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C%E4%BA%94/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><h3 id="1-二叉树的创建（顺序存储-amp-链式存储）"><a href="#1-二叉树的创建（顺序存储-amp-链式存储）" class="headerlink" title="1.二叉树的创建（顺序存储&amp;链式存储）"></a>1.二叉树的创建（顺序存储&amp;链式存储）</h3><h3 id="2-进行先序或中序或后序遍历"><a href="#2-进行先序或中序或后序遍历" class="headerlink" title="2.进行先序或中序或后序遍历"></a>2.进行先序或中序或后序遍历</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//二叉树顺序存储</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_TREE_SIZE 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> TElemType;</span><br><span class="line">TElemType Nil = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">typedef</span> TElemType SqBiTree[MAX_TREE_SIZE];</span><br><span class="line">SqBiTree bt;</span><br><span class="line"><span class="keyword">int</span> SqBiTree_Len;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitSqBiTree</span><span class="params">(SqBiTree &amp;bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAX_TREE_SIZE; i++)</span><br><span class="line">bt[i] = Nil;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"二叉树顺序初始化完毕\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateSqBiTree</span><span class="params">(SqBiTree &amp;bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入结点个数（小于%d）\n"</span>, MAX_TREE_SIZE);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;SqBiTree_Len);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入各结点的值（非零），空结点输入零，两结点之间用空格分开\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SqBiTree_Len; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;bt[i]);</span><br><span class="line"><span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; bt[(i + <span class="number">1</span>) / <span class="number">2</span> - <span class="number">1</span>] == Nil &amp;&amp; bt[i] != Nil) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"无双亲的非根节点,顺序存储失败！\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"二叉树顺序存储成功\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SqPreOrderTraverse</span><span class="params">(SqBiTree bt,<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (bt[i - <span class="number">1</span>] != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, bt[i - <span class="number">1</span>]);</span><br><span class="line">SqPreOrderTraverse(bt, i * <span class="number">2</span>);</span><br><span class="line">SqPreOrderTraverse(bt, i * <span class="number">2</span> + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//二叉树链式存储</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span> PointerTag &#123; Link, Thread &#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BiThrNode</span> &#123;</span></span><br><span class="line">TElemType data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BiThrNode</span> *<span class="title">lchild</span>, *<span class="title">rchild</span>;</span></span><br><span class="line">PointerTag LTag, RTag;</span><br><span class="line">&#125;BiThrNode, *BiThrTree;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateThrBiTree</span><span class="params">(BiThrTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; ch;</span><br><span class="line"><span class="comment">//scanf("%c", &amp;ch);</span></span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">'#'</span>) </span><br><span class="line">T = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">T = (BiThrNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BiThrNode));</span><br><span class="line">T-&gt;data = ch - <span class="string">'0'</span>;</span><br><span class="line">CreateThrBiTree(T-&gt;lchild);</span><br><span class="line">CreateThrBiTree(T-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ThrPreOrderTraverse</span><span class="params">(BiThrNode* T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (T != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, T-&gt;data);</span><br><span class="line">ThrPreOrderTraverse(T-&gt;lchild);</span><br><span class="line">ThrPreOrderTraverse(T-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">InitSqBiTree(bt);</span><br><span class="line">CreateSqBiTree(bt);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"先序遍历顺序二叉树结果为："</span>);</span><br><span class="line">SqPreOrderTraverse(bt, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n\n"</span>);</span><br><span class="line"></span><br><span class="line">BiThrTree T;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入结点内容，空结点则输入#\n"</span>);</span><br><span class="line">CreateThrBiTree(T);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"先序遍历链式二叉树结果为："</span>);</span><br><span class="line">ThrPreOrderTraverse(T);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行界面"><a href="#运行界面" class="headerlink" title="运行界面"></a>运行界面</h3><p><img alt="sy" data-src="https://s2.ax1x.com/2019/11/04/Kzt6ED.png" class="lazyload"></p>]]></content>
      
      
      <categories>
          
          <category> Algorithms and Data Structures </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Structure Experiment </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一行 Python 代码能实现什么丧心病狂的功能？</title>
      <link href="/2019/11/04/%E4%B8%80%E8%A1%8C-Python-%E4%BB%A3%E7%A0%81%E8%83%BD%E5%AE%9E%E7%8E%B0%E4%BB%80%E4%B9%88%E4%B8%A7%E5%BF%83%E7%97%85%E7%8B%82%E7%9A%84%E5%8A%9F%E8%83%BD%EF%BC%9F/"/>
      <url>/2019/11/04/%E4%B8%80%E8%A1%8C-Python-%E4%BB%A3%E7%A0%81%E8%83%BD%E5%AE%9E%E7%8E%B0%E4%BB%80%E4%B9%88%E4%B8%A7%E5%BF%83%E7%97%85%E7%8B%82%E7%9A%84%E5%8A%9F%E8%83%BD%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-一行代码打印乘法口诀"><a href="#1-一行代码打印乘法口诀" class="headerlink" title="1.一行代码打印乘法口诀"></a>1.一行代码打印乘法口诀</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'\n'</span>.join([<span class="string">' '</span>.join([<span class="string">"%2s x%2s = %2s"</span>%(j,i,i*j) <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,i+<span class="number">1</span>)]) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>)]))</span><br></pre></td></tr></table></figure><p><img alt="20190719141327674" data-src="https://s2.ax1x.com/2019/11/04/KzQjit.png" class="lazyload"></p><h2 id="2-一行代码打印迷宫"><a href="#2-一行代码打印迷宫" class="headerlink" title="2.一行代码打印迷宫"></a>2.一行代码打印迷宫</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">''</span>.join(__import__(<span class="string">'random'</span>).choice(<span class="string">'\u2571\u2572'</span>) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>*<span class="number">24</span>)))</span><br></pre></td></tr></table></figure><p><img alt="20190719104644249" data-src="https://s2.ax1x.com/2019/11/04/KzlJW6.png" class="lazyload"></p><h2 id="3-一行代码（土味）表白"><a href="#3-一行代码（土味）表白" class="headerlink" title="3.一行代码（土味）表白"></a>3.一行代码（土味）表白</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'\n'</span>.join([<span class="string">''</span>.join([(<span class="string">'Love'</span>[(x-y) % len(<span class="string">'Love'</span>)] <span class="keyword">if</span> ((x*<span class="number">0.05</span>)**<span class="number">2</span>+(y*<span class="number">0.1</span>)**<span class="number">2</span><span class="number">-1</span>)**<span class="number">3</span>-(x*<span class="number">0.05</span>)**<span class="number">2</span>*(y*<span class="number">0.1</span>)**<span class="number">3</span> &lt;= <span class="number">0</span><span class="keyword">else</span><span class="string">' '</span>) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">-30</span>, <span class="number">30</span>)]) <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">30</span>, <span class="number">-30</span>, <span class="number">-1</span>)]))</span><br></pre></td></tr></table></figure><p><img alt="20190719104826750" data-src="https://s2.ax1x.com/2019/11/04/Kz1eAA.png" class="lazyload"></p><h2 id="4-一行代码打印龟龟（-滑稽）"><a href="#4-一行代码打印龟龟（-滑稽）" class="headerlink" title="4.一行代码打印龟龟（/滑稽）"></a>4.一行代码打印龟龟（/滑稽）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'\n'</span>.join([<span class="string">''</span>.join([<span class="string">'*'</span> <span class="keyword">if</span> abs((<span class="keyword">lambda</span> a:<span class="keyword">lambda</span> z,c,n:a(a,z,c,n))(<span class="keyword">lambda</span> s,z,c,n:z <span class="keyword">if</span> n==<span class="number">0</span> <span class="keyword">else</span> s(s,z*z+c,c,n<span class="number">-1</span>))(<span class="number">0</span>,<span class="number">0.02</span>*x+<span class="number">0.05j</span>*y,<span class="number">40</span>))&lt;<span class="number">2</span> <span class="keyword">else</span> <span class="string">' '</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">-80</span>,<span class="number">20</span>)]) <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">-20</span>,<span class="number">20</span>)]))</span><br></pre></td></tr></table></figure><p><img alt="20190719105008201" data-src="https://s2.ax1x.com/2019/11/04/Kz1DuF.png" class="lazyload"></p>]]></content>
      
      
      <categories>
          
          <category> Language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python十大装B语法</title>
      <link href="/2019/11/04/Python%E5%8D%81%E5%A4%A7%E8%A3%85B%E8%AF%AD%E6%B3%95/"/>
      <url>/2019/11/04/Python%E5%8D%81%E5%A4%A7%E8%A3%85B%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Python-是一种代表简单思想的语言，其语法相对简单，很容易上手。不过，如果就此小视-Python-语法的精妙和深邃，那就大错特错了。本文精心筛选了最能展现-Python-语法之精妙的十个知识点，并附上详细的实例代码。如能在实战中融会贯通、灵活使用，必将使代码更为精炼、高效，同时也会极大提升代码B格，使之看上去更老练，读起来更优雅。"><a href="#Python-是一种代表简单思想的语言，其语法相对简单，很容易上手。不过，如果就此小视-Python-语法的精妙和深邃，那就大错特错了。本文精心筛选了最能展现-Python-语法之精妙的十个知识点，并附上详细的实例代码。如能在实战中融会贯通、灵活使用，必将使代码更为精炼、高效，同时也会极大提升代码B格，使之看上去更老练，读起来更优雅。" class="headerlink" title="Python 是一种代表简单思想的语言，其语法相对简单，很容易上手。不过，如果就此小视 Python 语法的精妙和深邃，那就大错特错了。本文精心筛选了最能展现 Python 语法之精妙的十个知识点，并附上详细的实例代码。如能在实战中融会贯通、灵活使用，必将使代码更为精炼、高效，同时也会极大提升代码B格，使之看上去更老练，读起来更优雅。"></a>Python 是一种代表简单思想的语言，其语法相对简单，很容易上手。不过，如果就此小视 Python 语法的精妙和深邃，那就大错特错了。本文精心筛选了最能展现 Python 语法之精妙的十个知识点，并附上详细的实例代码。如能在实战中融会贯通、灵活使用，必将使代码更为精炼、高效，同时也会极大提升代码B格，使之看上去更老练，读起来更优雅。</h3><h2 id="1-for-else"><a href="#1-for-else" class="headerlink" title="1.for-else"></a>1.for-else</h2><p>什么？不是 if 和 else 才是原配吗？No，你可能不知道，else 是个脚踩两只船的家伙，for 和 else 也是一对，而且是合法的。十大装B语法，for-else 绝对算得上南无湾！不信，请看：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]:</span><br><span class="line">    print(i)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(i, <span class="string">'我是else'</span>)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">4</span> 我是<span class="keyword">else</span></span><br></pre></td></tr></table></figure><p>如果在 for 和 else 之间（循环体内）有第三者 if 插足，也不会影响 for 和 else 的关系。因为 for 的级别比 if 高，else 又是一个攀附权贵的家伙，根本不在乎是否有 if，以及是否执行了满足 if 条件的语句。else 的眼里只有 for，只要 for 顺利执行完毕，else 就会屁颠儿屁颠儿地跑一遍：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]:</span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">2</span>:</span><br><span class="line">        print(i)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(i, <span class="string">'我是else'</span>)</span><br><span class="line"></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">4</span> 我是<span class="keyword">else</span></span><br></pre></td></tr></table></figure><p>那么，如何拆散 for 和 else 这对冤家呢？只有当 for 循环被 break 语句中断之后，才会跳过 else 语句：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]:</span><br><span class="line">    <span class="keyword">if</span> i&gt;<span class="number">2</span>:</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(i, <span class="string">'我是else'</span>)</span><br><span class="line"></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="2-一颗星-和两颗星"><a href="#2-一颗星-和两颗星" class="headerlink" title="2.一颗星()和两颗星(*)"></a>2.一颗星()和两颗星(*)</h2><p>有没有发现，星(*)真是一个神奇的符号！想一想，没有它，C语言还有啥好玩的？同样，因为有它，Python 才会如此的仪态万方、风姿绰约、楚楚动人！Python 函数支持默认参数和可变参数，一颗星表示不限数量的单值参数，两颗星表示不限数量的键值对参数。</p><p>我们还是举例说明吧：设计一个函数，返回多个输入数值的和。我们固然可以把这些输入数值做成一个list传给函数，但这个方法，远没有使用一颗星的可变参数来得优雅：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">multi_sum</span><span class="params">(*args)</span>:</span></span><br><span class="line">    s = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> args:</span><br><span class="line">        s += item</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>multi_sum(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line"><span class="number">12</span></span><br></pre></td></tr></table></figure><p>Python 函数允许同时全部或部分使用固定参数、默认参数、单值（一颗星）可变参数、键值对（两颗星）可变参数，使用时必须按照前述顺序书写。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">do_something</span><span class="params">(name, age, gender=<span class="string">'男'</span>, *args, **kwds)</span>:</span></span><br><span class="line">    print(<span class="string">'姓名：%s，年龄：%d，性别：%s'</span>%(name, age, gender))</span><br><span class="line">    print(args)</span><br><span class="line">    print(kwds)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>do_something(<span class="string">'xufive'</span>, <span class="number">50</span>, <span class="string">'男'</span>, <span class="number">175</span>, <span class="number">75</span>, math=<span class="number">99</span>, english=<span class="number">90</span>)</span><br><span class="line">姓名：xufive，年龄：<span class="number">50</span>，性别：男</span><br><span class="line">(<span class="number">175</span>, <span class="number">75</span>)</span><br><span class="line">&#123;<span class="string">'math'</span>: <span class="number">99</span>, <span class="string">'english'</span>: <span class="number">90</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="3-三元表达式"><a href="#3-三元表达式" class="headerlink" title="3.三元表达式"></a>3.三元表达式</h2><p>熟悉 C/C++ 的程序员，初上手 python 时，一定会怀念经典的三元操作符，因为想表达同样的思想，用python 写起来似乎更麻烦。比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = <span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> y &lt; <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">'y是一个负数'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'y是一个非负数'</span>)</span><br><span class="line"></span><br><span class="line">y是一个非负数</span><br></pre></td></tr></table></figure><p>其实，python 是支持三元表达式的，只是稍微怪异了一点，类似于我们山东人讲话。比如，山东人最喜欢用倒装句：打球去吧，要是不下雨的话；下雨，咱就去自习室。翻译成三元表达式就是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">打球去吧 <span class="keyword">if</span> 不下雨 <span class="keyword">else</span> 去自习室</span><br></pre></td></tr></table></figure><p>来看看三元表达式具体的使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = <span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'y是一个负数'</span> <span class="keyword">if</span> y &lt; <span class="number">0</span> <span class="keyword">else</span> <span class="string">'y是一个非负数'</span>)</span><br><span class="line">y是一个非负数</span><br></pre></td></tr></table></figure><p>python 的三元表达式也可以用来赋值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = <span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = <span class="number">-1</span> <span class="keyword">if</span> y &lt; <span class="number">0</span> <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="4-with-as"><a href="#4-with-as" class="headerlink" title="4.with-as"></a>4.with-as</h2><p>with 这个词儿，英文里面不难翻译，但在 Python 语法中怎么翻译，我还真想不出来，大致上是一种上下文管理协议。作为初学者，不用关注 with 的各种方法以及机制如何，只需要了解它的应用场景就可以了。with 语句适合一些事先需要准备，事后需要处理的任务，比如，文件操作，需要先打开文件，操作完成后需要关闭文件。如果不使用with，文件操作通常得这样：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fp = open(<span class="string">r"D:\CSDN\Column\temp\mpmap.py"</span>, <span class="string">'r'</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    contents = fp.readlines()</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    fp.close()</span><br></pre></td></tr></table></figure><p>如果使用 with - as，那就优雅多了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> open(<span class="string">r"D:\CSDN\Column\temp\mpmap.py"</span>, <span class="string">'r'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    contents = fp.readlines()</span><br></pre></td></tr></table></figure><h2 id="5-列表推导式"><a href="#5-列表推导式" class="headerlink" title="5.列表推导式"></a>5.列表推导式</h2><p>在各种稀奇古怪的语法中，列表推导式的使用频率应该时最高的，对于代码的简化效果也非常明显。比如，求列表各元素的平方，通常应该这样写（当然也有其他写法，比如使用map函数）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>result = list()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    result.append(i*i)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>result</span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br></pre></td></tr></table></figure><p>如果使用列表推导式，看起来就舒服多了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>result = [i*i <span class="keyword">for</span> i <span class="keyword">in</span> a]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>result</span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br></pre></td></tr></table></figure><p>事实上，推导式不仅支持列表，也支持字典、集合、元组等对象。有一篇博文《<a href="https://pasxsenger.com/2019/11/04/%E4%B8%80%E8%A1%8C-Python-%E4%BB%A3%E7%A0%81%E8%83%BD%E5%AE%9E%E7%8E%B0%E4%BB%80%E4%B9%88%E4%B8%A7%E5%BF%83%E7%97%85%E7%8B%82%E7%9A%84%E5%8A%9F%E8%83%BD%EF%BC%9F/" target="_blank" rel="noopener">一行 Python 代码能实现什么丧心病狂的功能？</a>》，里面的例子，都是列表推导式实现的。</p><h2 id="6-列表索引的各种骚操作"><a href="#6-列表索引的各种骚操作" class="headerlink" title="6.列表索引的各种骚操作"></a>6.列表索引的各种骚操作</h2><p>Python 引入负整数作为数组的索引，这绝对是喜大普奔之举。想想看，在C/C++中，想要数组最后一个元素，得先取得数组长度，减一之后做索引，严重影响了思维的连贯性。Python语言之所以获得成功，我个人觉得，在诸多因素里面，列表操作的便捷性是不容忽视的一点。请看：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">2</span>:<span class="number">4</span>]</span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">3</span>:]</span><br><span class="line">[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">1</span>:]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[:]</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[::<span class="number">2</span>]</span><br><span class="line">[<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">1</span>::<span class="number">2</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">-1</span>]</span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">-2</span>]</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">1</span>:<span class="number">-1</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[::<span class="number">-1</span>]</span><br><span class="line">[<span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br></pre></td></tr></table></figure><p>如果说，这些你都很熟悉，也经常用，那么接下来这个用法，你一定会感觉很神奇：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = [<span class="string">'a'</span>, <span class="string">'b'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">2</span>:<span class="number">2</span>] = b</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">3</span>:<span class="number">6</span>] = b</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="string">'a'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure><h2 id="7-lambda函数"><a href="#7-lambda函数" class="headerlink" title="7.lambda函数"></a>7.lambda函数</h2><p>lambda 听起来很高大上，其实就是匿名函数（了解js的同学一定很熟悉匿名函数）。匿名函数的应用场景是什么呢？就是仅在定义匿名函数的地方使用这个函数，其他地方用不到，所以就不需要给它取个阿猫阿狗之类的名字了。下面是一个求和的匿名函数，输入参数有两个，x和y，函数体就是x+y，省略了return关键字。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">lambda</span> x,y: x+y</span><br><span class="line">&lt;function &lt;<span class="keyword">lambda</span>&gt; at <span class="number">0x000001B2DE5BD598</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="keyword">lambda</span> x,y: x+y)(<span class="number">3</span>,<span class="number">4</span>) <span class="comment"># 因为匿名函数没有名字，使用的时候要用括号把它包起来</span></span><br></pre></td></tr></table></figure><p>匿名函数一般不会单独使用，而是配合其他方法，为其他方法提供内置的算法或判断条件。比如，使用排序函数sorted对多维数组或者字典排序时，就可以指定排序规则。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [&#123;<span class="string">'name'</span>:<span class="string">'B'</span>, <span class="string">'age'</span>:<span class="number">50</span>&#125;, &#123;<span class="string">'name'</span>:<span class="string">'A'</span>, <span class="string">'age'</span>:<span class="number">30</span>&#125;, &#123;<span class="string">'name'</span>:<span class="string">'C'</span>, <span class="string">'age'</span>:<span class="number">40</span>&#125;]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted(a, key=<span class="keyword">lambda</span> x:x[<span class="string">'name'</span>]) <span class="comment"># 按姓名排序</span></span><br><span class="line">[&#123;<span class="string">'name'</span>: <span class="string">'A'</span>, <span class="string">'age'</span>: <span class="number">30</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'B'</span>, <span class="string">'age'</span>: <span class="number">50</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'C'</span>, <span class="string">'age'</span>: <span class="number">40</span>&#125;]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted(a, key=<span class="keyword">lambda</span> x:x[<span class="string">'age'</span>]) <span class="comment"># 按年龄排序</span></span><br><span class="line">[&#123;<span class="string">'name'</span>: <span class="string">'A'</span>, <span class="string">'age'</span>: <span class="number">30</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'C'</span>, <span class="string">'age'</span>: <span class="number">40</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'B'</span>, <span class="string">'age'</span>: <span class="number">50</span>&#125;]</span><br></pre></td></tr></table></figure><p>再举一个数组元素求平方的例子，这次用map函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> item <span class="keyword">in</span> map(<span class="keyword">lambda</span> x:x*x, a):</span><br><span class="line">    print(item, end=<span class="string">', '</span>)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>,</span><br></pre></td></tr></table></figure><h2 id="8-yield以及生成器和迭代器"><a href="#8-yield以及生成器和迭代器" class="headerlink" title="8.yield以及生成器和迭代器"></a>8.yield以及生成器和迭代器</h2><p>要理解 yield，得先了解 generator（生成器）。要了解generator，得先知道 iterator（迭代器）。哈哈哈，绕晕了吧？算了，我还是说白话吧。</p><p>话说py2时代，range()返回的是list，但如果range(10000000)的话，会消耗大量内存资源，所以，py2又搞了一个xrange()来解决这个问题。py3则只保留了xrange()，但写作range()。xrange()返回的就是一个迭代器，它可以像list那样被遍历，但又不占用多少内存。generator（生成器）是一种特殊的迭代器，只能被遍历一次，遍历结束，就自动消失了。总之，不管是迭代器还是生成器，都是为了避免使用list，从而节省内存。那么，如何得到迭代器和生成器呢？</p><p>python内置了迭代函数 iter，用于生成迭代器，用法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a_iter = iter(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a_iter</span><br><span class="line">&lt;list_iterator object at <span class="number">0x000001B2DE434BA8</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> a_iter:</span><br><span class="line">    print(i, end=<span class="string">', '</span>)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>,</span><br></pre></td></tr></table></figure><p>yield 则是用于构造生成器的。比如，我们要写一个函数，返回从0到某正整数的所有整数的平方，传统的代码写法是这样的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">get_square</span><span class="params">(n)</span>:</span></span><br><span class="line">    result = list()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">        result.append(pow(i,<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(get_square(<span class="number">5</span>))</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>]</span><br></pre></td></tr></table></figure><p>但是如果计算1亿以内的所有整数的平方，这个函数的内存开销会非常大，这是 yield 就可以大显身手了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">get_square</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">        <span class="keyword">yield</span>(pow(i,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = get_square(<span class="number">5</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">&lt;generator object get_square at <span class="number">0x000001B2DE5CACF0</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    print(i, end=<span class="string">', '</span>)</span><br><span class="line"></span><br><span class="line"><span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>,</span><br></pre></td></tr></table></figure><p>如果再次遍历，则不会有输出了。</p><h2 id="9-装饰器"><a href="#9-装饰器" class="headerlink" title="9.装饰器"></a>9.装饰器</h2><p>刚弄明白迭代器和生成器，这又来个装饰器，Python 咋这么多器呢？的确，Python 为我们提供了很多的武器，装饰器就是最有力的武器之一。装饰器很强大，我在这里尝试从需求的角度，用一个简单的例子，说明装饰器的使用方法和制造工艺。</p><p>假如我们需要定义很多个函数，在每个函数运行的时候要显示这个函数的运行时长，解决方案有很多。比如，可以在调用每个函数之前读一下时间戳，每个函数运行结束后再读一下时间戳，求差即可；也可以在每个函数体内的开始和结束位置上读时间戳，最后求差。不过，这两个方法，都没有使用装饰器那么简单、优雅。下面的例子，很好地展示了这一点。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> time</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">timer</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args,**kwds)</span>:</span></span><br><span class="line">        t0 = time.time()</span><br><span class="line">        func(*args,**kwds)</span><br><span class="line">        t1 = time.time()</span><br><span class="line">        print(<span class="string">'耗时%0.3f'</span>%(t1-t0,))</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>@timer</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">do_something</span><span class="params">(delay)</span>:</span></span><br><span class="line">    print(<span class="string">'函数do_something开始'</span>)</span><br><span class="line">    time.sleep(delay)</span><br><span class="line">    print(<span class="string">'函数do_something结束'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>do_something(<span class="number">3</span>)</span><br><span class="line">函数do_something开始</span><br><span class="line">函数do_something结束</span><br><span class="line">耗时<span class="number">3.077</span></span><br></pre></td></tr></table></figure><p>timer() 是我们定义的装饰器函数，使用@把它附加在任何一个函数（比如do_something）定义之前，就等于把新定义的函数，当成了装饰器函数的输入参数。运行 do_something() 函数，可以理解为执行了timer(do_something) 。细节虽然复杂，不过这么理解不会偏差太大，且更易于把握装饰器的制造和使用。</p><h2 id="10-巧用断言assert"><a href="#10-巧用断言assert" class="headerlink" title="10.巧用断言assert"></a>10.巧用断言assert</h2><p>所谓断言，就是声明表达式的布尔值必须为真的判定，否则将触发 AssertionError 异常。严格来讲，assert是调试手段，不宜使用在生产环境中，但这不影响我们用断言来实现一些特定功能，比如，输入参数的格式、类型验证等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">i_want_to_sleep</span><span class="params">(delay)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span>(isinstance(delay, (int,float))), <span class="string">'函数参数必须为整数或浮点数'</span></span><br><span class="line">    print(<span class="string">'开始睡觉'</span>)</span><br><span class="line">    time.sleep(delay)</span><br><span class="line">    print(<span class="string">'睡醒了'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>i_want_to_sleep(<span class="number">1.1</span>)</span><br><span class="line">开始睡觉</span><br><span class="line">睡醒了</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>i_want_to_sleep(<span class="number">2</span>)</span><br><span class="line">开始睡觉</span><br><span class="line">睡醒了</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>i_want_to_sleep(<span class="string">'2'</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;pyshell#247&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    i_want_to_sleep(<span class="string">'2'</span>)</span><br><span class="line">  File <span class="string">"&lt;pyshell#244&gt;"</span>, line <span class="number">2</span>, <span class="keyword">in</span> i_want_to_sleep</span><br><span class="line">    <span class="keyword">assert</span>(isinstance(delay, (int,float))), <span class="string">'函数参数必须为整数或浮点数'</span></span><br><span class="line">AssertionError: 函数参数必须为整数或浮点数</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库实验五</title>
      <link href="/2019/10/30/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E9%AA%8C%E4%BA%94/"/>
      <url>/2019/10/30/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E9%AA%8C%E4%BA%94/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--1．创建一windows用户（名字自定），用sql语句建立windows验证模式的登录名。默认数据库为student</span></span><br><span class="line"><span class="comment">--2．用sql语句和系统存储过程建立登录名sqluser,密码为1234 </span></span><br><span class="line"><span class="comment">--sql</span></span><br><span class="line"><span class="keyword">create</span> login sqluser <span class="keyword">with</span> <span class="keyword">password</span>=<span class="string">'1234'</span>,default_database=student</span><br><span class="line"><span class="comment">--存储过程</span></span><br><span class="line">exec sp_addlogin <span class="string">'sqluser'</span>,<span class="string">'1234'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--3．为student数据库新建用户u1，其登录名为sqluser。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> u1 <span class="keyword">from</span> login sqluser</span><br><span class="line"></span><br><span class="line"><span class="comment">--4．新建登录usersf，并将其加入到sysadmin固定服务器角色中。</span></span><br><span class="line">exec sp_addsrvrolemember <span class="string">'usersf'</span>,<span class="string">'sysadmin'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--5．将student用户usersf（登录名为usersf）加入到db_owner角色中，使其全权负责该数据库,并验证其权限。</span></span><br><span class="line">exec sp_addsrvrolemember <span class="string">'db_owner'</span>,<span class="string">'usersf'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--6．为SPJ数据库新建用户u2，u3，其登录名分别为u2，u3。</span></span><br><span class="line"><span class="keyword">create</span> login u2 <span class="keyword">with</span> <span class="keyword">password</span>=<span class="string">''</span>,default_database=SPJ</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> u2 <span class="keyword">for</span> login u2</span><br><span class="line"><span class="keyword">create</span> login u3 <span class="keyword">with</span> <span class="keyword">password</span>=<span class="string">''</span>,default_database=SPJ</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> u3 <span class="keyword">for</span> login u3</span><br><span class="line"></span><br><span class="line"><span class="comment">--（1）授予用户u2对S表有SELECT 权，对P表颜色（COLOR）具有更新权限；</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span></span><br><span class="line"><span class="keyword">on</span> S</span><br><span class="line"><span class="keyword">to</span> u2</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">update</span>(color)</span><br><span class="line"><span class="keyword">on</span> P</span><br><span class="line"><span class="keyword">to</span> u2</span><br><span class="line"></span><br><span class="line"><span class="comment">--（2）u2将其拥有的权限授予u3；</span></span><br><span class="line"><span class="keyword">grant</span> u2</span><br><span class="line"><span class="keyword">to</span> u3</span><br><span class="line"></span><br><span class="line"><span class="comment">--（3）用sql语句逐一验证u2、u3所获得的权限。</span></span><br><span class="line"><span class="keyword">select</span> * </span><br><span class="line"><span class="keyword">from</span> S</span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> P</span><br><span class="line"><span class="keyword">set</span> color=<span class="string">'红'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--（4）撤销用户u3所获得的权限，并验证。</span></span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">select</span></span><br><span class="line"><span class="keyword">on</span> <span class="keyword">table</span> S</span><br><span class="line"><span class="keyword">from</span> u3</span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">update</span>(color)</span><br><span class="line"><span class="keyword">on</span> <span class="keyword">table</span> P</span><br><span class="line"><span class="keyword">from</span> u3</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.在student数据库中建立角色operate,该角色具有对student和course表的查询权限；具有对表sc的插入和修改权限。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">role</span> operate</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span></span><br><span class="line"><span class="keyword">on</span> student</span><br><span class="line"><span class="keyword">to</span> operate</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span></span><br><span class="line"><span class="keyword">on</span> course</span><br><span class="line"><span class="keyword">to</span> operate</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">update</span>,<span class="keyword">insert</span></span><br><span class="line"><span class="keyword">on</span> sc</span><br><span class="line"><span class="keyword">to</span> operate</span><br><span class="line"></span><br><span class="line"><span class="comment">--8.拒绝用户u1对sc表的修改权限。</span></span><br><span class="line">deny <span class="keyword">update</span> </span><br><span class="line"><span class="keyword">on</span> sc</span><br><span class="line"><span class="keyword">to</span> u1 </span><br><span class="line"><span class="keyword">cascade</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--9.使用存储过程将角色operate赋给用户u1,并用sql语句验证其权限。（特别验证u1对sc表的修改权限）</span></span><br><span class="line">exec sp_addrolemember <span class="string">'operate'</span>,<span class="string">'u1'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> course</span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> sc</span><br><span class="line"><span class="keyword">set</span> grade = <span class="number">100</span></span><br><span class="line"><span class="keyword">where</span> sno = <span class="string">'200515001'</span> <span class="keyword">and</span> cno = <span class="string">'1'</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Data Base Management System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>洛谷 P1020 导弹拦截</title>
      <link href="/2019/10/30/%E6%B4%9B%E8%B0%B7-P1020-%E5%AF%BC%E5%BC%B9%E6%8B%A6%E6%88%AA/"/>
      <url>/2019/10/30/%E6%B4%9B%E8%B0%B7-P1020-%E5%AF%BC%E5%BC%B9%E6%8B%A6%E6%88%AA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>某国为了防御敌国的导弹袭击，发展出一种导弹拦截系统。但是这种导弹拦截系统有一个缺陷：虽然它的第一发炮弹能够到达任意的高度，但是以后每一发炮弹都不能高于前一发的高度。某天，雷达捕捉到敌国的导弹来袭。由于该系统还在试用阶段，所以只有一套系统，因此有可能不能拦截所有的导弹。</p><p>输入导弹依次飞来的高度（雷达给出的高度数据是≤50000的正整数），计算这套系统最多能拦截多少导弹，如果要拦截所有导弹最少要配备多少套这种导弹拦截系统。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>1行，若干个整数（个数≤100000）</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>2行，每行一个整数，第一个数字表示这套系统最多能拦截多少导弹，第二个数字表示如果要拦截所有导弹最少要配备多少套这种导弹拦截系统。</p><h2 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h2><p><strong>输入 #1</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">389 207 155 300 299 170 158 65</span><br></pre></td></tr></table></figure><p><strong>输出 #1</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">2</span><br></pre></td></tr></table></figure><h2 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h2><p>为了让大家更好地测试n方算法，本题开启spj，n方100分，nlogn200分</p><p>每点两问，按问给分</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100010</span>], d1[<span class="number">100010</span>], d2[<span class="number">100010</span>], n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;x)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> c = getchar();</span><br><span class="line"><span class="keyword">if</span> (c == EOF)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">while</span> (c &gt; <span class="string">'9'</span> || c &lt; <span class="string">'0'</span>)</span><br><span class="line">c = getchar();</span><br><span class="line"><span class="keyword">while</span> (c &gt;= <span class="string">'0'</span>&amp;&amp;c &lt;= <span class="string">'9'</span>) &#123;</span><br><span class="line">x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);</span><br><span class="line">c = getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//freopen("1.txt", "r", stdin);</span></span><br><span class="line"><span class="comment">//freopen("2.txt", "w", stdout);</span></span><br><span class="line"><span class="keyword">while</span> (read(a[++n])); </span><br><span class="line">n--;</span><br><span class="line"><span class="keyword">int</span> len1 = <span class="number">1</span>, len2 = <span class="number">1</span>;</span><br><span class="line">d1[<span class="number">1</span>] = d2[<span class="number">1</span>] = a[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (d1[len1] &gt;= a[i])</span><br><span class="line">d1[++len1] = a[i];</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">*upper_bound(d1 + <span class="number">1</span>, d1 + <span class="number">1</span> + len1, a[i], greater&lt;<span class="keyword">int</span>&gt;()) = a[i];</span><br><span class="line"><span class="keyword">if</span> (d2[len2] &lt; a[i])</span><br><span class="line">d2[++len2] = a[i];</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">*lower_bound(d2 + <span class="number">1</span>, d2 + <span class="number">1</span> + len2, a[i]) = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n%d"</span>, len1, len2);</span><br><span class="line"><span class="comment">//fclose(stdin);</span></span><br><span class="line"><span class="comment">//fclose(stdout)</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LuoGu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dynamic Programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PTA(Advanced Level) 1001 A+B Format</title>
      <link href="/2019/10/28/PTA-Advanced-Level-1001-A-B-Format/"/>
      <url>/2019/10/28/PTA-Advanced-Level-1001-A-B-Format/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Calculate <em>a</em>+<em>b</em> and output the sum in standard format – that is, the digits must be separated into groups of three by commas (unless there are less than four digits).</p><h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. Each case contains a pair of integers <em>a</em> and <em>b</em> where −10^6</p><p>≤<em>a</em>,<em>b</em>≤10^6. The numbers are separated by a space.</p><h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, you should output the sum of <em>a</em> and <em>b</em> in one line. The sum must be written in the standard format.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1000000 9</span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-999,991</span><br></pre></td></tr></table></figure><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b, c, ans[<span class="number">10</span>], flag = <span class="number">0</span>, n = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a, &amp;b);</span><br><span class="line">c = a + b;</span><br><span class="line"><span class="keyword">if</span> (c == <span class="number">0</span>) &#123;<span class="comment">//第一次提交没有想到a+b为0这一点</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (c &gt; <span class="number">0</span>)<span class="comment">//determine the positive and negative</span></span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">c = <span class="built_in">abs</span>(c);</span><br><span class="line"><span class="keyword">while</span> (c) &#123;<span class="comment">//convert the sum into an array</span></span><br><span class="line">ans[n++] = c % <span class="number">10</span>;</span><br><span class="line">c /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"-"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">3</span> == <span class="number">0</span> &amp;&amp; i != n - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">","</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, ans[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Advanced Level </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库实验四</title>
      <link href="/2019/10/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E9%AA%8C%E5%9B%9B/"/>
      <url>/2019/10/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E9%AA%8C%E5%9B%9B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--一、对xsgl数据库完成下列操作要求：</span></span><br><span class="line"><span class="keyword">use</span> xsgl</span><br><span class="line"><span class="comment">--1.将被全部学生都选修了的课程的总学分改为4学分</span></span><br><span class="line"><span class="keyword">update</span> kc <span class="keyword">set</span> kc.学分 = <span class="number">4</span></span><br><span class="line"><span class="keyword">where</span> kc.课程号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> kc.课程号</span><br><span class="line"><span class="keyword">from</span> kc</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> cj.课程号 = kc.课程号 <span class="keyword">and</span> cj.学号 = xs.学号)))</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.从学生表删除没有选课的学生</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.学号 <span class="keyword">not</span> <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> cj.学号</span><br><span class="line"><span class="keyword">from</span> cj)</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.将每个学生的平均分，总分和选课门数插入到数据库中（学号，姓名，平均分，总分，选课门数）</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">new</span>(</span><br><span class="line">学号 <span class="built_in">char</span>(<span class="number">10</span>),</span><br><span class="line">姓名 <span class="keyword">nchar</span>(<span class="number">10</span>),</span><br><span class="line">平均分 <span class="built_in">numeric</span>(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">总分 <span class="built_in">numeric</span>(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">选课门数 <span class="built_in">smallint</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">new</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,<span class="keyword">avg</span>(cj.成绩),<span class="keyword">sum</span>(cj.成绩),<span class="keyword">count</span>(cj.课程号)</span><br><span class="line"><span class="keyword">from</span> xs <span class="keyword">left</span> <span class="keyword">join</span> cj <span class="keyword">on</span> xs.学号=cj.学号</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xs.学号,xs.姓名</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.创建每门课程的平均分和选课人数的视图（课程号，课程名，平均分，人数）</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> Course(课程号,课程名,平均分,人数)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> kc.课程号,kc.课程名,<span class="keyword">avg</span>(cj.成绩) 平均分,<span class="keyword">count</span>(cj.学号) 人数</span><br><span class="line"><span class="keyword">from</span> kc <span class="keyword">left</span> <span class="keyword">join</span> cj <span class="keyword">on</span> (kc.课程号 = cj.课程号)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> kc.课程号,kc.课程名</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.将李强同学从学生表删除（提示应该先删除李强同学的选课记录）</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> cj.学号 = </span><br><span class="line">(<span class="keyword">select</span> xs.学号</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.姓名 = <span class="string">'李强'</span>)</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.姓名 = <span class="string">'李强'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--6.插入一条选课记录（具体内容自己选）</span></span><br><span class="line"><span class="keyword">insert</span></span><br><span class="line"><span class="keyword">into</span> xs</span><br><span class="line"><span class="keyword">values</span>(<span class="string">'2018008003'</span>,<span class="string">'彭于晏'</span>,<span class="string">'男'</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>)</span><br><span class="line"><span class="keyword">insert</span></span><br><span class="line"><span class="keyword">into</span> cj</span><br><span class="line"><span class="keyword">values</span>(<span class="string">'2018008003'</span>,<span class="string">'A001'</span>,<span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.创建网络工程专业的学生的选课信息的视图，要求视图包含，学号，姓名，专业，课程号，课程名，成绩</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> IT(学号,姓名,专业,课程号,课程名,成绩)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,xs.专业,kc.课程号,kc.课程名,cj.成绩</span><br><span class="line"><span class="keyword">from</span> xs <span class="keyword">left</span> <span class="keyword">join</span> cj <span class="keyword">on</span> xs.学号 = cj.学号</span><br><span class="line"><span class="keyword">right</span> <span class="keyword">join</span> kc <span class="keyword">on</span> cj.课程号 = kc.课程号</span><br><span class="line"><span class="keyword">where</span> xs.专业 = <span class="string">'网络工程'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--8.查询网络工程专业的各科的平均成绩，要求使用第7题创建的视图进行查询</span></span><br><span class="line"><span class="keyword">select</span> IT.课程号,<span class="keyword">avg</span>(IT.成绩) 平均成绩</span><br><span class="line"><span class="keyword">from</span> IT</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> IT.课程号</span><br><span class="line"></span><br><span class="line"><span class="comment">--9.查询被信息管理专业的学生都选修了的课程的课程号，课程名</span></span><br><span class="line"><span class="keyword">select</span> kc.课程号,kc.课程名</span><br><span class="line"><span class="keyword">from</span> kc</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.专业 = <span class="string">'信息管理'</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> cj.学号 = xs.学号 <span class="keyword">and</span> cj.课程号 = kc.课程号))</span><br><span class="line"></span><br><span class="line"><span class="comment">--10.显示选修课程数最多的学号及选修课程数最少的学号，姓名（使用派生表实现）</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,<span class="keyword">count</span>(*) 门数</span><br><span class="line"><span class="keyword">from</span> xs,cj,(<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">count</span>(*)</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.学号</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">count</span>(*) <span class="keyword">desc</span>) Maxx(门数),</span><br><span class="line">(<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">count</span>(*)</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.学号</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">count</span>(*)) Minn(门数)</span><br><span class="line"><span class="keyword">where</span> cj.学号 = xs.学号</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xs.学号,xs.姓名,Maxx.门数,Minn.门数</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(*) = Maxx.门数 <span class="keyword">or</span> <span class="keyword">count</span>(*) = Minn.门数</span><br><span class="line"></span><br><span class="line"><span class="comment">--11.查询每个学生成绩高于自己的平均成绩的学号，姓名，课程号和成绩（使用派生表实现）</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,cj.课程号,cj.成绩</span><br><span class="line"><span class="keyword">from</span> xs,cj,(<span class="keyword">select</span> cj1.学号,<span class="keyword">avg</span>(cj1.成绩) 平均成绩</span><br><span class="line"><span class="keyword">from</span> cj cj1</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj1.学号) avg_grade</span><br><span class="line"><span class="keyword">where</span> cj.学号 = avg_grade.学号 <span class="keyword">and</span> xs.学号 = cj.学号 <span class="keyword">and</span> cj.成绩 &gt; avg_grade.平均成绩</span><br><span class="line"></span><br><span class="line"><span class="comment">--12.自己验证with check option的作用</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> IE</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,xs.性别,xs.专业</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.专业 = <span class="string">'网络工程'</span></span><br><span class="line"><span class="keyword">with</span> <span class="keyword">check</span> <span class="keyword">option</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> IE(学号,姓名)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">'2018008002'</span>,<span class="string">'吴彦祖'</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">--13.创建一个网络工程系的学生基本信息的视图MA_STUDENT，在此视图的基础上，再定义一个该专业女生信息的视图，然后再删除MA_STUDENT，观察执行情况。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> MA_STUDENT</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.专业 = <span class="string">'网络工程'</span></span><br><span class="line"><span class="keyword">with</span> <span class="keyword">check</span> <span class="keyword">option</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> Female</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> MA_STUDENT</span><br><span class="line"><span class="keyword">where</span> MA_STUDENT.性别 = <span class="string">'女'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> MA_STUDENT</span><br><span class="line"></span><br><span class="line"><span class="comment">--14.查询和程明同龄的学生的学号和姓名以及年龄</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,<span class="keyword">datediff</span>(yy,xs.出生时间,<span class="keyword">getdate</span>()) 年龄</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">datediff</span>(yy,xs.出生时间,<span class="keyword">getdate</span>()) = (<span class="keyword">select</span> <span class="keyword">datediff</span>(yy,xs2.出生时间,<span class="keyword">getdate</span>())</span><br><span class="line"><span class="keyword">from</span> xs xs2</span><br><span class="line"><span class="keyword">where</span> xs2.姓名 = <span class="string">'程明'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--15.查询没有被全部的学生都选修的课程的课程号和课程名</span></span><br><span class="line"><span class="keyword">select</span> kc.课程号,kc.课程名</span><br><span class="line"><span class="keyword">from</span> kc</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> cj.学号 = xs.学号 <span class="keyword">and</span> cj.课程号 = kc.课程号))</span><br><span class="line"></span><br><span class="line"><span class="comment">--16.查询选课学生包含了选英语的全部学生的课程的课程号和课程名</span></span><br><span class="line"><span class="keyword">select</span> kc.课程号,kc.课程名</span><br><span class="line"><span class="keyword">from</span> kc</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> cj.课程号 = (<span class="keyword">select</span> kc.课程号</span><br><span class="line"><span class="keyword">from</span> kc</span><br><span class="line"><span class="keyword">where</span> kc.课程名 = <span class="string">'英语'</span>)</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> cj c</span><br><span class="line"><span class="keyword">where</span> c.学号 = cj.学号 <span class="keyword">and</span> c.课程号 = kc.课程号))</span><br><span class="line"></span><br><span class="line"><span class="comment">--二、使用Northwind数据库完成下列操作</span></span><br><span class="line"><span class="keyword">use</span> Northwind</span><br><span class="line"><span class="comment">--1. 将员工lastname是: Peacock处理的订单中购买数量超过50的商品折扣改为七折</span></span><br><span class="line"><span class="keyword">update</span> [<span class="keyword">Order</span> Details]</span><br><span class="line"><span class="keyword">set</span> Discount = <span class="number">0.3</span></span><br><span class="line"><span class="keyword">where</span> [<span class="keyword">Order</span> Details].Quantity &gt; <span class="number">50</span> <span class="keyword">and</span> [<span class="keyword">Order</span> Details].OrderID <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> O1.OrderID</span><br><span class="line"><span class="keyword">from</span> [<span class="keyword">Order</span> Details] O1,Employees,Orders</span><br><span class="line"><span class="keyword">where</span> Employees.EmployeeID = Orders.EmployeeID <span class="keyword">and</span> Orders.OrderID = O1.OrderID <span class="keyword">and</span> Employees.LastName = <span class="string">'Peacock'</span> <span class="keyword">and</span> O1.Quantity &gt; <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--2. 删除lastname是: Peacock处理的所有订单</span></span><br><span class="line"><span class="keyword">delete</span></span><br><span class="line"><span class="keyword">from</span> [<span class="keyword">Order</span> Details]</span><br><span class="line"><span class="keyword">where</span> [<span class="keyword">Order</span> Details].OrderID <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">distinct</span> O1.OrderID</span><br><span class="line"><span class="keyword">from</span> [<span class="keyword">Order</span> Details] O1,Employees,Orders</span><br><span class="line"><span class="keyword">where</span> O1.OrderID = Orders.OrderID <span class="keyword">and</span> Orders.EmployeeID = Employees.EmployeeID <span class="keyword">and</span> Employees.LastName = <span class="string">'Peacock'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span></span><br><span class="line"><span class="keyword">from</span> Orders</span><br><span class="line"><span class="keyword">where</span> Orders.EmployeeID = </span><br><span class="line">(<span class="keyword">select</span> Employees.EmployeeID</span><br><span class="line"><span class="keyword">from</span> Employees</span><br><span class="line"><span class="keyword">where</span> Employees.LastName = <span class="string">'Peacock'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--3. 将每个订单的订单编号，顾客编号，产品总数量，总金额插入到数据库中</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> OrderInfo(</span><br><span class="line">订单编号 <span class="built_in">int</span>,</span><br><span class="line">顾客编号 <span class="keyword">nchar</span>(<span class="number">5</span>),</span><br><span class="line">产品总数量 <span class="built_in">smallint</span>,</span><br><span class="line">总金额 money)</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span></span><br><span class="line"><span class="keyword">into</span> OrderInfo</span><br><span class="line"><span class="keyword">select</span> Orders.OrderID,Orders.CustomerID,<span class="keyword">sum</span>([<span class="keyword">Order</span> Details].Quantity) 数量,<span class="keyword">sum</span>([<span class="keyword">Order</span> Details].UnitPrice*[<span class="keyword">Order</span> Details].Quantity*(<span class="number">1</span>- [<span class="keyword">Order</span> Details].Discount)) 金额</span><br><span class="line"><span class="keyword">from</span> [<span class="keyword">Order</span> Details],Orders</span><br><span class="line"><span class="keyword">where</span> [<span class="keyword">Order</span> Details].OrderID = Orders.OrderID</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Orders.OrderID,Orders.CustomerID</span><br><span class="line"></span><br><span class="line"><span class="comment">--4. 插入一个新的订单，要求该订单购买了商品编号为5,7,9的商品。（5号商品买了10个，7号买了20个，9号买了15个，都没有折扣）</span></span><br><span class="line"><span class="keyword">insert</span> </span><br><span class="line"><span class="keyword">into</span> [<span class="keyword">Order</span> Details]</span><br><span class="line"><span class="keyword">values</span>(<span class="string">'10325'</span>,<span class="string">'5'</span>, <span class="string">'50'</span>, <span class="string">'10'</span>, <span class="string">'0'</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> [<span class="keyword">Order</span> Details]</span><br><span class="line"><span class="keyword">values</span>(<span class="string">'10325'</span>,<span class="string">'7'</span>, <span class="string">'70'</span>, <span class="string">'20'</span>, <span class="string">'0'</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> [<span class="keyword">Order</span> Details]</span><br><span class="line"><span class="keyword">values</span>(<span class="string">'10325'</span>,<span class="string">'9'</span>, <span class="string">'90'</span>, <span class="string">'15'</span>, <span class="string">'0'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--5. 将每年每个员工处理订单的数量和订单的总金额创建为视图</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> Employ</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> Employees.EmployeeID,<span class="keyword">datename</span>(yy,Orders.OrderDate) 年份,</span><br><span class="line">   <span class="keyword">count</span>(<span class="keyword">distinct</span> Orders.OrderID) 订单数量,<span class="keyword">sum</span>([<span class="keyword">Order</span> Details].Quantity) 数量,</span><br><span class="line">       <span class="keyword">sum</span>([<span class="keyword">Order</span> Details].Quantity*[<span class="keyword">Order</span> Details].UnitPrice*(<span class="number">1</span>-[<span class="keyword">Order</span> Details].Discount)) 订单总金额</span><br><span class="line"><span class="keyword">from</span> Employees <span class="keyword">left</span> <span class="keyword">join</span> Orders <span class="keyword">on</span> Employees.EmployeeID=Orders.EmployeeID</span><br><span class="line">   <span class="keyword">left</span> <span class="keyword">join</span> [<span class="keyword">Order</span> Details] <span class="keyword">on</span> Orders.OrderID=[<span class="keyword">Order</span> Details].OrderID</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Employees.EmployeeID,<span class="keyword">datename</span>(yy,Orders.OrderDate)</span><br><span class="line"></span><br><span class="line"><span class="comment">--6. 购买了CustomerID是‘VINET’用户所购买的全部商品的用户的CustomerID和CompanyName。</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> Customers.CustomerID,Customers.CompanyName</span><br><span class="line"><span class="keyword">from</span> Customers,Orders </span><br><span class="line"><span class="keyword">where</span> Customers.CustomerID = Orders.CustomerID <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> Orders o2,Customers c2</span><br><span class="line"><span class="keyword">where</span> o2.CustomerID = c2.CustomerID <span class="keyword">and</span> o2.CustomerID = <span class="string">'VINET'</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> Orders o3</span><br><span class="line"><span class="keyword">where</span> o3.CustomerID = Orders.CustomerID))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Data Base Management System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库实验三</title>
      <link href="/2019/10/22/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E9%AA%8C%E4%B8%89/"/>
      <url>/2019/10/22/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E9%AA%8C%E4%B8%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--一.对xsgl数据库完成以下操作</span></span><br><span class="line"><span class="comment">--1.查询没有选修英语的学生的学号，姓名和课程号，课程名，成绩</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,kc.课程号,kc.课程名,cj.成绩</span><br><span class="line"><span class="keyword">from</span> xs,kc,cj</span><br><span class="line"><span class="keyword">where</span> xs.学号 = cj.学号 <span class="keyword">and</span> kc.课程号 = cj.课程号 <span class="keyword">and</span> kc.课程名 &lt;&gt; <span class="string">'英语'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--2.查询英语成绩高于英语的平均成绩的学生的学号，姓名，成绩</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,cj.成绩</span><br><span class="line"><span class="keyword">from</span> xs,cj,kc</span><br><span class="line"><span class="keyword">where</span> xs.学号 = cj.学号 <span class="keyword">and</span> cj.课程号 = kc.课程号 <span class="keyword">and</span> kc.课程名 = <span class="string">'英语'</span> <span class="keyword">and</span> cj.成绩 &gt; </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">avg</span>(cj.成绩)</span><br><span class="line"><span class="keyword">from</span> kc,cj</span><br><span class="line"><span class="keyword">where</span> cj.课程号 = kc.课程号 <span class="keyword">and</span> kc.课程名 = <span class="string">'英语'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.查询选修了英语和高数(数学)的学生的学号和姓名（要求使用两种方法实现）</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名</span><br><span class="line"><span class="keyword">from</span> xs,cj,kc</span><br><span class="line"><span class="keyword">where</span> xs.学号 = cj.学号 <span class="keyword">and</span> cj.课程号 = kc.课程号 <span class="keyword">and</span> kc.课程名 = <span class="string">'英语'</span> <span class="keyword">and</span> cj.学号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> cj.学号</span><br><span class="line"><span class="keyword">from</span> cj,xs,kc</span><br><span class="line"><span class="keyword">where</span> xs.学号 = cj.学号 <span class="keyword">and</span> cj.课程号 = kc.课程号 <span class="keyword">and</span> kc.课程名 = <span class="string">'数学'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名</span><br><span class="line"><span class="keyword">from</span> xs,cj,kc  </span><br><span class="line"><span class="keyword">where</span> xs.学号 = cj.学号 <span class="keyword">and</span> cj.课程号 = kc.课程号 <span class="keyword">and</span> 课程名 = <span class="string">'英语'</span> </span><br><span class="line"><span class="keyword">and</span>xs.学号 <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> 学号 </span><br><span class="line"><span class="keyword">from</span> cj </span><br><span class="line"><span class="keyword">where</span> 课程号 = </span><br><span class="line">(<span class="keyword">select</span> 课程号 </span><br><span class="line">           <span class="keyword">from</span> kc</span><br><span class="line">           <span class="keyword">where</span> 课程名 = <span class="string">'数学'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.查询没有选修程明所选修的全部课程的学生的姓名</span></span><br><span class="line"><span class="keyword">select</span> xs.姓名</span><br><span class="line"><span class="keyword">from</span> xs,cj</span><br><span class="line"><span class="keyword">where</span> xs.学号 = cj.学号 <span class="keyword">and</span> cj.课程号 <span class="keyword">not</span> <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> cj.课程号</span><br><span class="line"><span class="keyword">from</span> xs,cj</span><br><span class="line"><span class="keyword">where</span> xs.学号 = cj.学号 <span class="keyword">and</span> xs.姓名 = <span class="string">'程明'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.查询每个专业年龄超过该专业平均年龄的学生的姓名和专业</span></span><br><span class="line"><span class="keyword">select</span> xs1.姓名,xs1.专业</span><br><span class="line"><span class="keyword">from</span> xs xs1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">datediff</span>(yy,xs1.出生时间,<span class="keyword">getdate</span>()) &gt; </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">avg</span>(<span class="keyword">datediff</span>(yy,xs2.出生时间,<span class="keyword">getdate</span>()))</span><br><span class="line"><span class="keyword">from</span> xs xs2</span><br><span class="line"><span class="keyword">where</span> xs1.专业 = xs2.专业)</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.查询每个专业每门课程的专业，课程号，课程名，选课人数，平均分和最高分</span></span><br><span class="line"><span class="keyword">select</span> xs.专业,kc.课程号,kc.课程名,<span class="keyword">count</span>(*) 选课人数,<span class="keyword">avg</span>(cj.成绩) 平均分,<span class="keyword">max</span>(cj.成绩) 最高分</span><br><span class="line"><span class="keyword">from</span> xs,kc,cj</span><br><span class="line"><span class="keyword">where</span> xs.学号 = cj.学号 <span class="keyword">and</span> kc.课程号 = cj.课程号</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> kc.课程号,kc.课程名,xs.专业</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.查询每个学生取得最高分的课程的课程号，课程名和成绩</span></span><br><span class="line"><span class="keyword">select</span> cj.学号,kc.课程号,kc.课程名,cj.成绩</span><br><span class="line"><span class="keyword">from</span> kc,cj</span><br><span class="line"><span class="keyword">where</span> kc.课程号 = cj.课程号 <span class="keyword">and</span> cj.成绩 &gt;= <span class="keyword">all</span></span><br><span class="line">(<span class="keyword">select</span> cj2.成绩</span><br><span class="line"><span class="keyword">from</span> cj cj2</span><br><span class="line"><span class="keyword">where</span> cj2.学号 = cj.学号)</span><br><span class="line"></span><br><span class="line"><span class="comment">--8.查询每个专业年龄最高的学生的学号，姓名，专业和年龄</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,xs.专业,<span class="keyword">datediff</span>(yy,xs.出生时间,<span class="keyword">getdate</span>()) 年龄</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">datediff</span>(yy,xs.出生时间,<span class="keyword">getdate</span>()) &gt;= <span class="keyword">all</span></span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">datediff</span>(yy,xs2.出生时间,<span class="keyword">getdate</span>())</span><br><span class="line"><span class="keyword">from</span> xs xs2</span><br><span class="line"><span class="keyword">where</span> xs2.专业 = xs.专业)</span><br><span class="line"></span><br><span class="line"><span class="comment">--9.查询没有选修数据结构和操作系统的学生的学号和姓名</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.学号 <span class="keyword">not</span> <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> cj.学号</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> cj.课程号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> kc.课程号</span><br><span class="line"><span class="keyword">from</span> kc</span><br><span class="line"><span class="keyword">where</span> kc.课程名 = <span class="string">'数据结构'</span> <span class="keyword">or</span> kc.课程名 = <span class="string">'操作系统'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">--10.查询网络工程专业年龄最小的学生的学号和姓名</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.专业 = <span class="string">'网络工程'</span> <span class="keyword">and</span> <span class="keyword">datediff</span>(yy,xs.出生时间,<span class="keyword">getdate</span>()) &lt;= <span class="keyword">all</span></span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">datediff</span>(yy,xs2.出生时间,<span class="keyword">getdate</span>())</span><br><span class="line"><span class="keyword">from</span> xs xs2</span><br><span class="line"><span class="keyword">where</span> xs2.专业 = <span class="string">'网络工程'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--11.查询选课人数超过5人的课程的课程号，课程名和成绩</span></span><br><span class="line"><span class="keyword">select</span> kc.课程号,kc.课程名,cj.成绩</span><br><span class="line"><span class="keyword">from</span> kc,cj</span><br><span class="line"><span class="keyword">where</span> kc.课程号 = cj.课程号 <span class="keyword">and</span> cj.课程号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> cj2.课程号</span><br><span class="line"><span class="keyword">from</span> cj cj2</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj2.课程号</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(cj2.学号) &gt; <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--12.查询选修了全部课程的学生的学号和姓名（用两种方法实现）</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> kc</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> cj.学号 = xs.学号 <span class="keyword">and</span> cj.课程号 = kc.课程号))</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.学号 <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> cj.学号</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.学号</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(*) = </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">count</span>(*)</span><br><span class="line"><span class="keyword">from</span> kc))</span><br><span class="line"></span><br><span class="line"><span class="comment">--13.查询选课人数最多的课程号和课程名（包含并列）</span></span><br><span class="line"><span class="keyword">select</span> cj.课程号,kc.课程名</span><br><span class="line"><span class="keyword">from</span> kc,cj</span><br><span class="line"><span class="keyword">where</span> kc.课程号 = cj.课程号</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.课程号,kc.课程名</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(*) &gt;= <span class="keyword">all</span></span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">count</span>(*)</span><br><span class="line"><span class="keyword">from</span> cj cj2</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj2.课程号)</span><br><span class="line"></span><br><span class="line"><span class="comment">--14.查询选修了程明所选修的全部课程的学生的姓名</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> xs.姓名</span><br><span class="line"><span class="keyword">from</span> xs,cj </span><br><span class="line"><span class="keyword">where</span> xs.学号 = cj.学号 <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> cj cj2,xs xs2</span><br><span class="line"><span class="keyword">where</span> xs2.学号 = cj2.学号 <span class="keyword">and</span> xs2.姓名 = <span class="string">'程明'</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> cj cj3</span><br><span class="line"><span class="keyword">where</span> cj3.学号 = cj.学号 <span class="keyword">and</span> cj <span class="number">3.</span>课程号 = cj2.课程号))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--二．对罗斯文数据库完成一下查询</span></span><br><span class="line"><span class="comment">--15.查询每个订单购买产品的数量和总金额，显示订单号，数量，总金额</span></span><br><span class="line"><span class="keyword">select</span> [<span class="keyword">Order</span> Details].OrderID,<span class="keyword">sum</span>([<span class="keyword">Order</span> Details].Quantity) 数量,<span class="keyword">sum</span>([<span class="keyword">Order</span> Details].UnitPrice*[<span class="keyword">Order</span> Details].Quantity*(<span class="number">1</span>-[<span class="keyword">Order</span> Details].Discount)) 总金额</span><br><span class="line"><span class="keyword">from</span> [<span class="keyword">Order</span> Details]</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> [<span class="keyword">Order</span> Details].OrderID</span><br><span class="line"></span><br><span class="line"><span class="comment">--16.查询每个员工在7月份处理订单的数量</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(Orders.OrderID) 订单数量</span><br><span class="line"><span class="keyword">from</span> Orders <span class="keyword">right</span> <span class="keyword">join</span> Employees <span class="keyword">on</span> (Employees.EmployeeID = Orders.EmployeeID)</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">month</span>(Orders.OrderDate) = <span class="string">'07'</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Employees.EmployeeID</span><br><span class="line"></span><br><span class="line"><span class="comment">--17.查询每个顾客的订单总数，显示顾客ID，订单总数</span></span><br><span class="line"><span class="keyword">select</span> Customers.CustomerID,<span class="keyword">count</span>(Orders.OrderID) 订单总数</span><br><span class="line"><span class="keyword">from</span> Orders <span class="keyword">right</span> <span class="keyword">join</span> Customers <span class="keyword">on</span> (Customers.CustomerID = Orders.CustomerID)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Customers.CustomerID</span><br><span class="line"></span><br><span class="line"><span class="comment">--18.查询每个顾客的订单总数和订单总金额</span></span><br><span class="line"><span class="keyword">select</span> Customers.CustomerID,<span class="keyword">count</span>(<span class="keyword">distinct</span> Orders.OrderID) 订单总数,<span class="keyword">sum</span>([<span class="keyword">Order</span> Details].UnitPrice*[<span class="keyword">Order</span> Details].Quantity*(<span class="number">1</span>-[<span class="keyword">Order</span> Details].Discount)) 总金额</span><br><span class="line"><span class="keyword">from</span> Orders <span class="keyword">right</span> <span class="keyword">join</span> Customers <span class="keyword">on</span> Orders.CustomerID=Customers.CustomerID </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> [<span class="keyword">Order</span> Details] <span class="keyword">on</span> Orders.OrderID=[<span class="keyword">Order</span> Details].OrderID</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Customers.CustomerID</span><br><span class="line"></span><br><span class="line"><span class="comment">--19.查询每种产品的卖出总数和总金额</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sum</span>([<span class="keyword">Order</span> Details].Quantity) 卖出总数,<span class="keyword">sum</span>([<span class="keyword">Order</span> Details].UnitPrice*[<span class="keyword">Order</span> Details].Quantity*(<span class="number">1</span>-[<span class="keyword">Order</span> Details].Discount)) 总金额</span><br><span class="line"><span class="keyword">from</span> [<span class="keyword">Order</span> Details] <span class="keyword">right</span> <span class="keyword">join</span> Products <span class="keyword">on</span> ([<span class="keyword">Order</span> Details].ProductID = Products.ProductID)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Products.ProductID</span><br><span class="line"></span><br><span class="line"><span class="comment">--20.查询购买过全部商品的顾客的ID和姓名</span></span><br><span class="line"><span class="keyword">select</span> Customers.CustomerID,Customers.ContactName</span><br><span class="line"><span class="keyword">from</span> Customers</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> Products</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> Orders,[<span class="keyword">Order</span> Details]</span><br><span class="line"><span class="keyword">where</span> Orders.OrderID = [<span class="keyword">Order</span> Details].OrderID <span class="keyword">and</span> Products.ProductID = [<span class="keyword">Order</span> Details].ProductID <span class="keyword">and</span> Customers.CustomerID = Orders.CustomerID))</span><br><span class="line"></span><br><span class="line"><span class="comment">--三.对books数据库完成以下操作</span></span><br><span class="line"><span class="comment">--21.查询各种类别的图书的类别和数量（包含目前没有图书的类别）</span></span><br><span class="line"><span class="keyword">select</span> BookType.TypeName,<span class="keyword">count</span>(BookInfo.TypeID) 数量</span><br><span class="line"><span class="keyword">from</span> BookType <span class="keyword">left</span> <span class="keyword">join</span> BookInfo <span class="keyword">on</span> (BookType.TypeID = BookInfo.TypeID)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> BookType.TypeName</span><br><span class="line"></span><br><span class="line"><span class="comment">--22.查询借阅了‘数据库基础’的读者的卡编号和姓名</span></span><br><span class="line"><span class="keyword">select</span> BorrowInfo.CardNo,CardInfo.Reader</span><br><span class="line"><span class="keyword">from</span> BorrowInfo,CardInfo,BookInfo</span><br><span class="line"><span class="keyword">where</span> BorrowInfo.BookNo = BookInfo.BookNo <span class="keyword">and</span> BorrowInfo.CardNo = CardInfo.CardNo <span class="keyword">and</span> BookInfo.BookName = <span class="string">'数据库基础'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--23.查询各个出版社的图书价格超过这个出版社图书的平均价格的图书的编号和名称</span></span><br><span class="line"><span class="keyword">select</span> BookInfo.BookNo,BookInfo.BookName</span><br><span class="line"><span class="keyword">from</span> BookInfo</span><br><span class="line"><span class="keyword">where</span> BookInfo.Price &gt; </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">avg</span>(b1.Price)</span><br><span class="line"><span class="keyword">from</span> BookInfo b1</span><br><span class="line"><span class="keyword">where</span> BookInfo.Publisher = b1.Publisher)</span><br><span class="line"></span><br><span class="line"><span class="comment">--24.查询没有借过图书的读者的编号和姓名</span></span><br><span class="line"><span class="keyword">select</span> CardInfo.CardNo,CardInfo.Reader</span><br><span class="line"><span class="keyword">from</span> CardInfo</span><br><span class="line"><span class="keyword">where</span> CardInfo.CardNo <span class="keyword">not</span> <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> BorrowInfo.CardNo</span><br><span class="line"><span class="keyword">from</span> BorrowInfo)</span><br><span class="line"></span><br><span class="line"><span class="comment">--25.查询借阅次数超过2次的读者的编号和姓名</span></span><br><span class="line"><span class="keyword">select</span> CardInfo.CardNo,CardInfo.Reader</span><br><span class="line"><span class="keyword">from</span> CardInfo,BorrowInfo</span><br><span class="line"><span class="keyword">where</span> CardInfo.CardNo = BorrowInfo.CardNo</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> CardInfo.CardNo,CardInfo.Reader</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(BorrowInfo.CardNo) &gt; <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--26.查询借阅卡的类型为老师和研究生的读者人数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(CardInfo.CardNo) 读者人数</span><br><span class="line"><span class="keyword">from</span> CardType,CardInfo</span><br><span class="line"><span class="keyword">where</span> CardInfo.CTypeID = CardType.CTypeID <span class="keyword">and</span> (CardType.TypeName = <span class="string">'教师'</span> <span class="keyword">or</span> CardType.TypeName = <span class="string">'研究生'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--27.查询没有被借过的图书的编号和名称</span></span><br><span class="line"><span class="keyword">select</span> BookInfo.BookNo,BookInfo.BookName</span><br><span class="line"><span class="keyword">from</span> BookInfo</span><br><span class="line"><span class="keyword">where</span> BookInfo.BookNo <span class="keyword">not</span> <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> BorrowInfo.BookNo</span><br><span class="line"><span class="keyword">from</span> BorrowInfo)</span><br><span class="line"></span><br><span class="line"><span class="comment">--28.查询没有借阅过英语类型的图书的学生的编号和姓名</span></span><br><span class="line"><span class="keyword">select</span> CardInfo.CardNo,CardInfo.Reader</span><br><span class="line"><span class="keyword">from</span> CardInfo</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> BookInfo,BorrowInfo,BookType,CardType</span><br><span class="line"><span class="keyword">where</span> BookType.TypeName=<span class="string">'英语'</span> <span class="keyword">and</span> CardType.TypeName = <span class="string">'学生'</span> <span class="keyword">and</span> CardType.CTypeID = CardInfo.CTypeID <span class="keyword">and</span> BookType.TypeID=BookInfo.TypeID <span class="keyword">and</span> BookInfo.BookNo=BorrowInfo.BookNo <span class="keyword">and</span> BorrowInfo.CardNo=CardInfo.CardNo)</span><br><span class="line"></span><br><span class="line"><span class="comment">--29.查询借阅了‘计算机应用’类别的‘数据库基础’课程的学生的编号读者以及该读者的借阅卡的类型</span></span><br><span class="line"><span class="keyword">select</span> CardInfo.CardNo,CardType.TypeName</span><br><span class="line"><span class="keyword">from</span> CardInfo,CardType,BorrowInfo</span><br><span class="line"><span class="keyword">where</span> CardInfo.CTypeID = CardType.CTypeID <span class="keyword">and</span> BorrowInfo.CardNo = CardInfo.CardNo <span class="keyword">and</span> BorrowInfo.BookNo <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> BookInfo.BookNo</span><br><span class="line"><span class="keyword">from</span> BookInfo</span><br><span class="line"><span class="keyword">where</span> BookInfo.BookName = <span class="string">'数据库基础'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--30.查询借阅过了全部图书的读者的编号和姓名</span></span><br><span class="line"><span class="keyword">select</span> CardInfo.CardNo,CardInfo.Reader</span><br><span class="line"><span class="keyword">from</span> CardInfo</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> BookInfo</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> BorrowInfo</span><br><span class="line"><span class="keyword">where</span> BorrowInfo.CardNo = CardInfo.CardNo <span class="keyword">and</span> BorrowInfo.BookNo = BookInfo.BookNo))</span><br><span class="line"></span><br><span class="line"><span class="comment">--四．对商场数据库完成以下操作</span></span><br><span class="line"><span class="comment">--Market (mno, mname, city)</span></span><br><span class="line"><span class="comment">--Item (ino, iname, type, color)</span></span><br><span class="line"><span class="comment">--Sales (mno, ino, price)</span></span><br><span class="line"><span class="comment">--其中，market表示商场，它的属性依次为商场号、商场名和所在城市；item表示商品，它的属性依次为商品号、商品名、商品类别和颜色；sales表示销售，它的属性依次为商场号、商品号和售价。用SQL语句实现下面的查询要求：</span></span><br><span class="line"><span class="comment">--1.列出北京各个商场都销售，且售价均超过10000 元的商品的商品号和商品名</span></span><br><span class="line"><span class="keyword">select</span> item.ino,item.iname</span><br><span class="line"><span class="keyword">from</span> item</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> sales,market</span><br><span class="line"><span class="keyword">where</span> sales.mno = market.mno <span class="keyword">and</span> market.city = <span class="string">'北京'</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> sales s1</span><br><span class="line"><span class="keyword">where</span> s1.ino = item.ino <span class="keyword">and</span> s1.mno = sales.mno <span class="keyword">and</span> s1.price &gt; <span class="number">10000</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.列出在不同商场中最高售价和最低售价只差超过100 元的商品的商品号、最高售价和最低售价</span></span><br><span class="line"><span class="keyword">select</span> sales.ino,<span class="keyword">max</span>(sales.price) 最高售价,<span class="keyword">min</span>(sales.price) 最低售价</span><br><span class="line"><span class="keyword">from</span> sales</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sales.ino</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">max</span>(sales.price) - <span class="keyword">min</span>(sales.price) &gt; <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--3.列出售价超过该商品的平均售价的各个商品的商品号和售价</span></span><br><span class="line"><span class="keyword">select</span> sales.ino,sales.price</span><br><span class="line"><span class="keyword">from</span> sales</span><br><span class="line"><span class="keyword">where</span> sales.price &gt;</span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">avg</span>(s2.price)</span><br><span class="line"><span class="keyword">from</span> sales s2</span><br><span class="line"><span class="keyword">where</span> s2.ino = sales.ino)</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.查询每个每个城市各个商场售价最高的商品的商场名，城市，商品号和商品名</span></span><br><span class="line"><span class="keyword">select</span> market.mname,market.city,sales.ino,item.iname</span><br><span class="line"><span class="keyword">from</span> market,sales,item</span><br><span class="line"><span class="keyword">where</span> market.mno = sales.mno <span class="keyword">and</span> item.ino = sales.ino <span class="keyword">and</span> sales.price &gt;= <span class="keyword">all</span></span><br><span class="line">(<span class="keyword">select</span> s2.price</span><br><span class="line"><span class="keyword">from</span> sales s2</span><br><span class="line"><span class="keyword">where</span> s2.mno = sales.mno)</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.查询销售商品数量最多的商场的商场号，商场名和城市</span></span><br><span class="line"><span class="keyword">select</span> market.mno,market.mname,market.city</span><br><span class="line"><span class="keyword">from</span> market,sales</span><br><span class="line"><span class="keyword">where</span> market.mno = sales.mno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> market.mno,market.mname,market.city</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(sales.ino) &gt;= <span class="keyword">all</span></span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">count</span>(s2.ino)</span><br><span class="line"><span class="keyword">from</span> sales s2</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s2.mno)</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.查询销售了冰箱和洗衣机的商场号，商场名和城市</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> market.mno,market.mname,market.city</span><br><span class="line"><span class="keyword">from</span> market,sales</span><br><span class="line"><span class="keyword">where</span> market.mno <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> s1.mno</span><br><span class="line"><span class="keyword">from</span> sales s1</span><br><span class="line"><span class="keyword">where</span> s1.ino <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> item.ino</span><br><span class="line"><span class="keyword">from</span> item</span><br><span class="line"><span class="keyword">where</span> item.iname = <span class="string">'冰箱'</span>)</span><br><span class="line"><span class="keyword">and</span> s1.mno <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> s2.mno</span><br><span class="line"><span class="keyword">from</span> sales s2</span><br><span class="line"><span class="keyword">where</span> s2.ino <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> item.ino</span><br><span class="line"><span class="keyword">from</span> item</span><br><span class="line"><span class="keyword">where</span> item.iname = <span class="string">'洗衣机'</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.查询所有商场都销售了的商品的商品号和商品名。（用两种方法实现）</span></span><br><span class="line"><span class="keyword">select</span> item.ino,item.iname</span><br><span class="line"><span class="keyword">from</span> item</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> market</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">(<span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> sales</span><br><span class="line"><span class="keyword">where</span> sales.mno = market.mno <span class="keyword">and</span> sales.ino = item.ino))</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> item.ino,item.iname</span><br><span class="line"><span class="keyword">from</span> item,sales</span><br><span class="line"><span class="keyword">where</span> item.ino = sales.ino</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sales.ino,item.ino,item.iname</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(sales.mno) =</span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">count</span>(market.mno)</span><br><span class="line"><span class="keyword">from</span> market)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Data Base Management System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库实验二</title>
      <link href="/2019/10/22/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E9%AA%8C%E4%BA%8C/"/>
      <url>/2019/10/22/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E9%AA%8C%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一：对给定的xsgl数据库完成以下查询要求 ：</span></span><br><span class="line"><span class="comment">--对xs表增加身份证号码属性列，要求是18位的字符类型</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> xs <span class="keyword">add</span> 身份证号 <span class="built_in">char</span>(<span class="number">18</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--1.查询有直接先行课的课程的课号，课名和先行课号。</span></span><br><span class="line"><span class="keyword">select</span> kc.课程号,kc.先行课号</span><br><span class="line"><span class="keyword">from</span> kc</span><br><span class="line"><span class="keyword">where</span> kc.先行课号 !=<span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--2.查询先行课号是“J001”号课程的课号和课名</span></span><br><span class="line"><span class="keyword">select</span> kc.课程号,kc.课程名</span><br><span class="line"><span class="keyword">from</span> kc</span><br><span class="line"><span class="keyword">where</span> kc.课程号 = <span class="string">'J001'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--3.查询所有的网络工程系姓李，张，王的同学的学号和姓名</span></span><br><span class="line"><span class="keyword">select</span> xs.姓名,xs.学号</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.专业 = <span class="string">'网络工程'</span><span class="keyword">and</span> xs.姓名 <span class="keyword">like</span> <span class="string">'[李，张，王]%'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--4.查询不在网络工程和信息管理专业学习的学生的学号和姓名，系别，并对查询结果按照专业的升序和学号的降序排序</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,xs.专业</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.专业 <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'网络工程'</span>,<span class="string">'信息管理'</span>)</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> xs.专业,xs.学号 <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--5.查询每门课不及格的学生的人数，显示课号和人数</span></span><br><span class="line"><span class="keyword">select</span> cj.课程号,<span class="keyword">count</span>(*) 人数</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> cj.成绩 &lt; <span class="number">60</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.课程号</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.查询年龄不在30-35之间的网络工程系的学生的学号，姓名和年龄</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,<span class="keyword">datediff</span>(dd,出生时间,<span class="keyword">getdate</span>())/<span class="number">365</span> <span class="keyword">as</span> 年龄</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">datediff</span>(dd,出生时间,<span class="keyword">getdate</span>())/<span class="number">365</span> <span class="keyword">not</span> <span class="keyword">between</span> <span class="number">30</span> <span class="keyword">and</span> <span class="number">35</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--7.查询没有选修‘J001’号课程的学生的学号（注意去掉重复的元组）</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> 学号</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> xs.学号 = cj.学号 <span class="keyword">and</span> 课程号 = <span class="string">'J001'</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--8.查询每个学生的学号，姓名，出生年份，并给出生年份起别名为chusheng </span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,<span class="keyword">datename</span>(<span class="keyword">year</span>,xs.出生时间) chusheng</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"></span><br><span class="line"><span class="comment">--9. 查询每个学生的学号，姓名和出生日期（出生日期根据身份证号码查询）</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,<span class="keyword">datediff</span>(yy,<span class="keyword">convert</span>(<span class="built_in">varchar</span>(<span class="number">10</span>),<span class="keyword">cast</span>(<span class="keyword">substring</span>(xs.身份证号,<span class="number">7</span>,<span class="number">8</span>)<span class="keyword">as</span> datetime),<span class="number">120</span>),<span class="keyword">getdate</span>()) 出生日期</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"></span><br><span class="line"><span class="comment">--10.查询选修J001课程成绩排名第一的同学的学号和成绩</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">1</span> cj.学号,cj.成绩</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> cj.课程号 = <span class="string">'J001'</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> cj.成绩 <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--11. 查询所有名字中含有’明’或者’丽’的同学的学号，姓名</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.姓名 <span class="keyword">like</span> <span class="string">'%[明,丽]%'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--12. 查询信息管理专业年龄超过20岁的学生的人数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*)</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.专业 = <span class="string">'信息管理'</span> <span class="keyword">and</span> <span class="keyword">datediff</span>(dd,出生时间,<span class="keyword">getdate</span>())/<span class="number">365</span> &gt; <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--13. 查询平均成绩超过80分的课程的课程号和平均成绩</span></span><br><span class="line"><span class="keyword">select</span> cj.课程号,<span class="keyword">avg</span>(cj.成绩)</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.课程号</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">avg</span>(cj.成绩) &gt; <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--14. 查询每个专业所有姓张的人数</span></span><br><span class="line"><span class="keyword">select</span> xs.专业,<span class="keyword">count</span>(*) 人数</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.姓名 <span class="keyword">like</span> <span class="string">'张%'</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xs.专业</span><br><span class="line"></span><br><span class="line"><span class="comment">--15. 查询各种姓氏的人数（假设没有复姓）</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">left</span>(xs.姓名,<span class="number">1</span>),<span class="keyword">count</span>(<span class="keyword">left</span>(xs.姓名,<span class="number">1</span>)) 人数</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">left</span>(xs.姓名,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--16.查询选修课程超过5门的学生的学号和选课门数，以及平均成绩</span></span><br><span class="line"><span class="keyword">select</span> cj.学号,<span class="keyword">count</span>(cj.课程号) 选课门数,<span class="keyword">avg</span>(cj.成绩) 平均成绩</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.学号</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(cj.课程号) &gt; <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--17. 查询选修‘J001’课程的成绩排名前五的学生的学号和成绩</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">5</span> cj.学号,cj.成绩</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> cj.课程号 = <span class="string">'J001'</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> cj.成绩 <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--18.查询每个学生的最低分和选课门数</span></span><br><span class="line"><span class="keyword">select</span> cj.学号,<span class="keyword">min</span>(cj.成绩) 最低分,<span class="keyword">count</span>(cj.课程号) 选课门数</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.学号</span><br><span class="line"></span><br><span class="line"><span class="comment">--19. 查询各个专业各种性别的人数</span></span><br><span class="line"><span class="keyword">select</span> xs.专业,xs.性别,<span class="keyword">count</span>(xs.性别) 人数</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xs.专业,xs.性别</span><br><span class="line"></span><br><span class="line"><span class="comment">--20.查询各个专业男生的人数</span></span><br><span class="line"><span class="keyword">select</span> xs.专业,<span class="keyword">count</span>(xs.性别) 人数</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.性别 = <span class="string">'男'</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xs.专业</span><br><span class="line"></span><br><span class="line"><span class="comment">--21. 列出有二门以上课程（含两门）不及格的学生的学号及该学生的平均成绩；</span></span><br><span class="line"><span class="comment">/*select cj.学号,avg(cj.成绩) 平均成绩</span></span><br><span class="line"><span class="comment">from cj</span></span><br><span class="line"><span class="comment">where cj.成绩 &lt; 60</span></span><br><span class="line"><span class="comment">group by cj.学号</span></span><br><span class="line"><span class="comment">having count(cj.成绩) &gt;= 2</span></span><br><span class="line"><span class="comment">单表无法实现，因为where执行之后只剩不及格科目成绩求平均值*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--22. 显示学号第五位或者第六位是1、2、3、4或者9的学生的学号、姓名、性别、年龄及专业；</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,xs.性别,<span class="keyword">datediff</span>(yy,xs.出生时间,<span class="keyword">getdate</span>()) 年龄,xs.专业</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.学号 <span class="keyword">like</span> <span class="string">'____[1,2,3,4,9]%'</span> <span class="keyword">or</span> xs.学号 <span class="keyword">like</span> <span class="string">'_____[1,2,3,4,9]%'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--23. 显示选修课程数最多的学号及选修课程数最少的学号；</span></span><br><span class="line"><span class="keyword">select</span> cj.学号</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.学号</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(cj.课程号)&gt;=<span class="keyword">all</span>(</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(cj.课程号)</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.学号</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> cj.学号</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.学号</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(cj.课程号)&lt;=<span class="keyword">all</span>(</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(cj.课程号)</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.学号</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--24. 查询选修了A001或者A002或者J001或者J002课程的学生的学号和课程号</span></span><br><span class="line"><span class="keyword">select</span> cj.学号,cj.课程号</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> cj.课程号 <span class="keyword">in</span> (<span class="string">'A001'</span>,<span class="string">'A002'</span>,<span class="string">'J001'</span>,<span class="string">'J002'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--25. 查询姓名为两个字的不同姓氏的人数，输出姓氏，人数。</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">left</span>(xs.姓名,<span class="number">1</span>) 姓氏,<span class="keyword">count</span>(<span class="keyword">left</span>(xs.姓名,<span class="number">1</span>)) 人数</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">len</span>(xs.姓名) = <span class="number">2</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">left</span>(xs.姓名,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--二：对书上第二章课后习题的4的SPJ数据库各表查询： </span></span><br><span class="line"><span class="comment">--1.求供应工程J1零件的供应商号码SNO</span></span><br><span class="line"><span class="keyword">select</span> SPJ.sno</span><br><span class="line"><span class="keyword">from</span> SPJ</span><br><span class="line"><span class="keyword">where</span> SPJ.jno=<span class="string">'J1'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--2.求查询每个工程使用不同供应商的零件的个数</span></span><br><span class="line"><span class="keyword">select</span> SPJ.jno,SPJ.pno,<span class="keyword">sum</span>(SPJ.qty) 个数</span><br><span class="line"><span class="keyword">from</span> SPJ</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> SPJ.jno,SPJ.pno</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.求供应工程使用零件P3数量超过200的工程号JNO</span></span><br><span class="line"><span class="keyword">select</span> SPJ.jno</span><br><span class="line"><span class="keyword">from</span> SPJ</span><br><span class="line"><span class="keyword">where</span> SPJ.pno = <span class="string">'P3'</span> <span class="keyword">and</span> SPJ.qit &gt; <span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--4.求颜色为红色和蓝色的零件的零件号和名称</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> pno, pname</span><br><span class="line"><span class="keyword">from</span> p</span><br><span class="line"><span class="keyword">where</span> color <span class="keyword">in</span> (<span class="string">'蓝'</span>,<span class="string">'红'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.求使用零件数量在200-400之间的工程号</span></span><br><span class="line"><span class="keyword">select</span> SPJ.jno</span><br><span class="line"><span class="keyword">from</span> SPJ</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> SPJ.jno</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">sum</span>(SPJ.qty) <span class="keyword">between</span> <span class="number">200</span> <span class="keyword">and</span> <span class="number">400</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--6.查询每种零件的零件号，以及使用该零件的工程数。</span></span><br><span class="line"><span class="keyword">select</span> SPJ.pno,<span class="keyword">count</span>(<span class="keyword">DISTINCT</span> SPJ.jno) 工程数</span><br><span class="line"><span class="keyword">from</span> SPJ</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> SPJ.pno</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Data Base Management System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构实验四</title>
      <link href="/2019/10/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C%E5%9B%9B/"/>
      <url>/2019/10/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C%E5%9B%9B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><h3 id="对一个稀疏矩阵进行转置"><a href="#对一个稀疏矩阵进行转置" class="headerlink" title="对一个稀疏矩阵进行转置"></a>对一个稀疏矩阵进行转置</h3><h3 id="要求用十字链表存储"><a href="#要求用十字链表存储" class="headerlink" title="要求用十字链表存储"></a>要求用十字链表存储</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">OLNode</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line">ElemType e;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">OLNode</span> *<span class="title">right</span>, *<span class="title">down</span>;</span></span><br><span class="line">&#125;OLNode, *OLink;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">CrossList</span>&#123;</span></span><br><span class="line">OLink *rhead, *chead;</span><br><span class="line"><span class="keyword">int</span> mu, nu, tu;</span><br><span class="line">&#125;CrossList, *pCrossList;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateSMatrix_OL</span><span class="params">(pCrossList M)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//输入行数列数以及非零元个数</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入行数，列数，非零元素个数：\n"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;M-&gt;mu, &amp;M-&gt;nu, &amp;M-&gt;tu);</span><br><span class="line"><span class="keyword">if</span> (M-&gt;tu * <span class="number">20</span> &gt; M-&gt;mu * M-&gt;nu)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"非稀疏矩阵，不建议使用此方法！\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//动态申请行和列指针数组</span></span><br><span class="line">M-&gt;rhead = (OLink *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(OLink)*M-&gt;mu);</span><br><span class="line"><span class="keyword">if</span> (M-&gt;rhead == <span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">M-&gt;chead = (OLink *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(OLink)*M-&gt;nu);</span><br><span class="line"><span class="keyword">if</span> (M-&gt;chead == <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">free</span>(M-&gt;rhead);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化两个数组</span></span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= M-&gt;mu; i++)</span><br><span class="line">M-&gt;rhead[i] = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= M-&gt;nu; j++)</span><br><span class="line">M-&gt;chead[j] = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建节点并连接到十字链表上</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= M-&gt;tu; i++)&#123;</span><br><span class="line">OLink p = (OLink)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(OLNode));</span><br><span class="line"><span class="keyword">if</span> (p == <span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入非零元素的行，列，值\n"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;p-&gt;i, &amp;p-&gt;j, &amp;p-&gt;e);</span><br><span class="line">p-&gt;down = <span class="literal">NULL</span>;</span><br><span class="line">p-&gt;right = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//连接行</span></span><br><span class="line"><span class="comment">//如果该行并没有连接任何节点（NULL）或者该行连接的第一个节点的列值大于当前待连接的节点则直接将当前节点连接到该行第一个节点的位置</span></span><br><span class="line"><span class="keyword">if</span> (M-&gt;rhead[p-&gt;i] == <span class="literal">NULL</span> || M-&gt;rhead[p-&gt;i]-&gt;j &gt; p-&gt;j)&#123;</span><br><span class="line">p-&gt;right = M-&gt;rhead[p-&gt;i];</span><br><span class="line">M-&gt;rhead[p-&gt;i] = p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//否则遍历该行找到合适的位置插入</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">OLink q = M-&gt;rhead[p-&gt;i];<span class="comment">//指向第一个节点，从第一个节点开始遍历</span></span><br><span class="line"><span class="keyword">while</span> (q-&gt;right != <span class="literal">NULL</span> &amp;&amp; q-&gt;right-&gt;j &lt; p-&gt;j)<span class="comment">//遍历到前一个节点</span></span><br><span class="line">q = q-&gt;right;</span><br><span class="line">p-&gt;right = q-&gt;right;</span><br><span class="line">q-&gt;right = p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//连接列</span></span><br><span class="line"><span class="keyword">if</span> (M-&gt;chead[p-&gt;j] == <span class="literal">NULL</span> || M-&gt;chead[p-&gt;j]-&gt;i &gt; p-&gt;i) &#123;</span><br><span class="line">p-&gt;down = M-&gt;chead[p-&gt;j];</span><br><span class="line">M-&gt;chead[p-&gt;j] = p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">OLink pNodeTravel = M-&gt;chead[p-&gt;j];</span><br><span class="line"><span class="keyword">while</span> (pNodeTravel-&gt;down != <span class="literal">NULL</span> &amp;&amp; pNodeTravel-&gt;down-&gt;i &lt; p-&gt;i)</span><br><span class="line">pNodeTravel = pNodeTravel-&gt;down;</span><br><span class="line">p-&gt;down = pNodeTravel-&gt;down;</span><br><span class="line">pNodeTravel-&gt;down = p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TransSMatrix_OL</span><span class="params">(CrossList M, CrossList *T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">T-&gt;mu = M.nu;</span><br><span class="line">T-&gt;nu = M.mu;</span><br><span class="line">T-&gt;tu = M.tu;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Q的头节点的初始化 </span></span><br><span class="line"><span class="keyword">if</span> (!(T-&gt;rhead = (OLink *)<span class="built_in">malloc</span>((T-&gt;mu + <span class="number">1</span>) * <span class="keyword">sizeof</span>(OLink))))&#123;<span class="built_in">printf</span>(<span class="string">"内存空间申请失败！"</span>);<span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">if</span> (!(T-&gt;chead = (OLink *)<span class="built_in">malloc</span>((T-&gt;nu + <span class="number">1</span>) * <span class="keyword">sizeof</span>(OLink)))) &#123; <span class="built_in">printf</span>(<span class="string">"内存空间申请失败！"</span>); <span class="keyword">return</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= T-&gt;mu; i++)</span><br><span class="line">T-&gt;rhead[i] = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= T-&gt;nu; i++)</span><br><span class="line">T-&gt;chead[i] = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!M.tu)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">OLink p, q, q_row, q_col;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= M.nu; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (M.chead[i])&#123;</span><br><span class="line"><span class="keyword">for</span> (q = M.chead[i]; q;) &#123;</span><br><span class="line"><span class="keyword">if</span> (!(p = (OLink)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(OLNode))))&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"内存空间申请失败！"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">p-&gt;i = q-&gt;j;</span><br><span class="line">p-&gt;j = q-&gt;i;</span><br><span class="line">p-&gt;e = q-&gt;e;</span><br><span class="line">p-&gt;right = p-&gt;down = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">q_row = T-&gt;rhead[i];</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">NULL</span> == T-&gt;rhead[i])</span><br><span class="line">T-&gt;rhead[i] = p;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">while</span> (q_row-&gt;right)</span><br><span class="line">q_row = q_row-&gt;right;</span><br><span class="line">q_row-&gt;right = p;</span><br><span class="line">&#125;</span><br><span class="line">q_col = T-&gt;chead[p-&gt;j];</span><br><span class="line"><span class="keyword">if</span> (T-&gt;chead[p-&gt;j] == <span class="literal">NULL</span>)</span><br><span class="line">T-&gt;chead[p-&gt;j] = p;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">while</span> (q_col-&gt;down)</span><br><span class="line">q_col = q_col-&gt;down;</span><br><span class="line">q_col-&gt;down = p;</span><br><span class="line">&#125;</span><br><span class="line">q = q-&gt;down;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OutputSMatrix_OL</span><span class="params">(pCrossList M, <span class="keyword">char</span> s[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line">OLink p;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"----------------------\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s矩阵为：\n"</span>, s);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= M-&gt;mu; i++)&#123;</span><br><span class="line">p = M-&gt;rhead[i];</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= M-&gt;nu; j++)&#123;</span><br><span class="line"><span class="keyword">if</span> (p != <span class="literal">NULL</span> &amp;&amp; p-&gt;j == j) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, p-&gt;e);</span><br><span class="line">p = p-&gt;right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"0 "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"----------------------\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CrossList M, T;</span><br><span class="line">CreateSMatrix_OL(&amp;M);</span><br><span class="line"><span class="keyword">char</span> s1[] = <span class="string">"原始"</span>;</span><br><span class="line">OutputSMatrix_OL(&amp;M, s1);</span><br><span class="line"></span><br><span class="line">TransSMatrix_OL(M, &amp;T);</span><br><span class="line"><span class="keyword">char</span> s2[] = <span class="string">"转置后"</span>;</span><br><span class="line">OutputSMatrix_OL(&amp;T, s2);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行界面"><a href="#运行界面" class="headerlink" title="运行界面"></a>运行界面</h2><p><img alt="sy" data-src="https://s2.ax1x.com/2019/11/04/KzwEFO.png" class="lazyload"></p>]]></content>
      
      
      <categories>
          
          <category> Algorithms and Data Structures </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Structure Experiment </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构实验三</title>
      <link href="/2019/10/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C%E4%B8%89/"/>
      <url>/2019/10/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C%E4%B8%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><h2 id="对一个对称矩阵进行压缩及解压缩"><a href="#对一个对称矩阵进行压缩及解压缩" class="headerlink" title="对一个对称矩阵进行压缩及解压缩"></a>对一个对称矩阵进行压缩及解压缩</h2><p><strong>注意</strong></p><p><strong>压缩时：</strong></p><p>第一步：完整地显示矩阵</p><p><img alt="img" data-src="https://s2.ax1x.com/2019/11/04/KzQ6r4.jpg" class="lazyload"></p><p>第二步： 完整地显示一维数组</p><p><img alt="img" data-src="https://s2.ax1x.com/2019/11/04/KzMO3T.png" class="lazyload"></p><p>———————————————————————————————————————</p><p><strong>解压缩时：</strong></p><p>第一步：完整地显示一维数组</p><p><img alt="img" data-src="https://s2.ax1x.com/2019/11/04/KzMO3T.png" class="lazyload"></p><p>第二步：完整地显示矩阵</p><p><img alt="img" data-src="https://s2.ax1x.com/2019/11/04/KzQ6r4.jpg" class="lazyload"></p><h2 id><a href="#" class="headerlink" title=" "></a> </h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Matrix_Num 5</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input_Matrix</span><span class="params">(<span class="keyword">int</span> *Matrix)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入方阵：\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Matrix_Num; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; Matrix_Num; j++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;Matrix[Matrix_Num * i + j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show1D</span><span class="params">(<span class="keyword">int</span> Compressed[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Matrix_Num*(Matrix_Num + <span class="number">1</span>) / <span class="number">2</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, Compressed[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show2D</span><span class="params">(<span class="keyword">int</span> Matrix[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Matrix_Num; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; Matrix_Num; j++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, Matrix[Matrix_Num*i + j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">compress</span><span class="params">(<span class="keyword">int</span> Matrix[],<span class="keyword">int</span> *Compressed)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"您输入的方阵为：\n"</span>);</span><br><span class="line">show2D(Matrix);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"压缩后\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Matrix_Num; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line">Compressed[n++] = Matrix[Matrix_Num*i + j];</span><br><span class="line">show1D(Compressed);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">uncompress_O1</span><span class="params">(<span class="keyword">int</span> Compressed[],<span class="keyword">int</span> *Uncompressed)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"压缩方阵为：\n"</span>);</span><br><span class="line">show1D(Compressed);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"解压缩后\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; Matrix_Num * (Matrix_Num + <span class="number">1</span>) / <span class="number">2</span>; k++) &#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line">i = <span class="built_in">ceil</span>(<span class="built_in">sqrt</span>(<span class="number">2.25</span> + <span class="number">2</span> * k) - <span class="number">0.5</span>);</span><br><span class="line">j = k - i * (i - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">i--;</span><br><span class="line">Uncompressed[Matrix_Num*i + j] = Compressed[k];</span><br><span class="line">Uncompressed[Matrix_Num*j + i] = Compressed[k];</span><br><span class="line">&#125;</span><br><span class="line">show2D(Uncompressed);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">uncompress_On</span><span class="params">(<span class="keyword">int</span> Compressed[], <span class="keyword">int</span> *Uncompressed)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"压缩方阵为：\n"</span>);</span><br><span class="line">show1D(Compressed);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"解压缩后\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; Matrix_Num * (Matrix_Num + <span class="number">1</span>) / <span class="number">2</span>; k++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= Matrix_Num; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> j = k - i * (i - <span class="number">1</span>) / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (i &gt;= j &amp;&amp; j &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">Uncompressed[Matrix_Num*(i - <span class="number">1</span>) + (j - <span class="number">1</span>)] = Compressed[k];</span><br><span class="line">Uncompressed[Matrix_Num*(j - <span class="number">1</span>) + (i - <span class="number">1</span>)] = Compressed[k];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">show2D(Uncompressed);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">uncompress_On2</span><span class="params">(<span class="keyword">int</span> Compressed[], <span class="keyword">int</span> *Uncompressed)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"压缩方阵为：\n"</span>);</span><br><span class="line">show1D(Compressed);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"解压缩后\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; Matrix_Num * (Matrix_Num + <span class="number">1</span>) / <span class="number">2</span>; k++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= Matrix_Num; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (k == i * (i - <span class="number">1</span>) / <span class="number">2</span> + j - <span class="number">1</span>) &#123;</span><br><span class="line">Uncompressed[Matrix_Num*(i - <span class="number">1</span>) + (j - <span class="number">1</span>)] = Compressed[k];</span><br><span class="line">Uncompressed[Matrix_Num*(j - <span class="number">1</span>) + (i - <span class="number">1</span>)] = Compressed[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">show2D(Uncompressed);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> M[Matrix_Num * Matrix_Num];</span><br><span class="line"><span class="keyword">int</span> C[Matrix_Num * (Matrix_Num + <span class="number">1</span>) / <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> U[Matrix_Num * Matrix_Num];</span><br><span class="line">input_Matrix(M);</span><br><span class="line">compress(M, C);</span><br><span class="line">uncompress_O1(C, U);</span><br><span class="line"><span class="comment">//uncompress_On(C, U);</span></span><br><span class="line"><span class="comment">//uncompress_On2(C, U);</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行界面"><a href="#运行界面" class="headerlink" title="运行界面"></a>运行界面</h2><p><img alt="img" data-src="https://s2.ax1x.com/2019/11/04/KzUyfH.png" class="lazyload"></p>]]></content>
      
      
      <categories>
          
          <category> Algorithms and Data Structures </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Structure Experiment </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库实验一</title>
      <link href="/2019/10/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E9%AA%8C%E4%B8%80/"/>
      <url>/2019/10/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E9%AA%8C%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一：对给定的xsgl数据库完成以下查询要求 ：</span></span><br><span class="line"><span class="comment">--对xs表增加身份证号码属性列，要求是18位的字符类型</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> xs <span class="keyword">add</span> 身份证号 <span class="built_in">char</span>(<span class="number">18</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">--1.查询有直接先行课的课程的课号，课名和先行课号。</span></span><br><span class="line"><span class="keyword">select</span> kc.课程号,kc.先行课号</span><br><span class="line"><span class="keyword">from</span> kc</span><br><span class="line"><span class="keyword">where</span> kc.先行课号 !=<span class="string">''</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--2.查询先行课号是“J001”号课程的课号和课名</span></span><br><span class="line"><span class="keyword">select</span> kc.课程号,kc.课程名</span><br><span class="line"><span class="keyword">from</span> kc</span><br><span class="line"><span class="keyword">where</span> kc.课程号 = <span class="string">'J001'</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--3.查询所有的网络工程系姓李，张，王的同学的学号和姓名</span></span><br><span class="line"><span class="keyword">select</span> xs.姓名,xs.学号</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.专业 = <span class="string">'网络工程'</span><span class="keyword">and</span> xs.姓名 <span class="keyword">like</span> <span class="string">'[李，张，王]%'</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--4.查询不在网络工程和信息管理专业学习的学生的学号和姓名，系别，并对查询结果按照专业的升序和学号的降序排序</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,xs.专业</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.专业 <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'网络工程'</span>,<span class="string">'信息管理'</span>)</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> xs.专业,xs.学号 <span class="keyword">desc</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--5.查询每门课不及格的学生的人数，显示课号和人数</span></span><br><span class="line"><span class="keyword">select</span> cj.课程号,<span class="keyword">count</span>(*) 人数</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> cj.成绩 &lt; <span class="number">60</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.课程号</span><br><span class="line"> </span><br><span class="line"><span class="comment">--6.查询年龄不在30-35之间的网络工程系的学生的学号，姓名和年龄</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,<span class="keyword">datediff</span>(dd,出生时间,<span class="keyword">getdate</span>())/<span class="number">365</span> <span class="keyword">as</span> 年龄</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">datediff</span>(dd,出生时间,<span class="keyword">getdate</span>())/<span class="number">365</span> <span class="keyword">not</span> <span class="keyword">between</span> <span class="number">30</span> <span class="keyword">and</span> <span class="number">35</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--7.查询没有选修‘J001’号课程的学生的学号（注意去掉重复的元组）</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> 学号</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> xs.学号 = cj.学号 <span class="keyword">and</span> 课程号 = <span class="string">'J001'</span></span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line"><span class="comment">--8.查询每个学生的学号，姓名，出生年份，并给出生年份起别名为chusheng </span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,<span class="keyword">datename</span>(<span class="keyword">year</span>,xs.出生时间) chusheng</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"> </span><br><span class="line"><span class="comment">--9. 查询每个学生的学号，姓名和出生日期（出生日期根据身份证号码查询）</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,<span class="keyword">datediff</span>(yy,<span class="keyword">convert</span>(<span class="built_in">varchar</span>(<span class="number">10</span>),<span class="keyword">cast</span>(<span class="keyword">substring</span>(xs.身份证号,<span class="number">7</span>,<span class="number">8</span>)<span class="keyword">as</span> datetime),<span class="number">120</span>),<span class="keyword">getdate</span>()) 出生日期</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"> </span><br><span class="line"><span class="comment">--10.查询选修J001课程成绩排名第一的同学的学号和成绩</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">1</span> cj.学号,cj.成绩</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> cj.课程号 = <span class="string">'J001'</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> cj.成绩 <span class="keyword">desc</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--11. 查询所有名字中含有’明’或者’丽’的同学的学号，姓名</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.姓名 <span class="keyword">like</span> <span class="string">'%[明,丽]%'</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--12. 查询信息管理专业年龄超过20岁的学生的人数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*)</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.专业 = <span class="string">'信息管理'</span> <span class="keyword">and</span> <span class="keyword">datediff</span>(dd,出生时间,<span class="keyword">getdate</span>())/<span class="number">365</span> &gt; <span class="number">20</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--13. 查询平均成绩超过80分的课程的课程号和平均成绩</span></span><br><span class="line"><span class="keyword">select</span> cj.课程号,<span class="keyword">avg</span>(cj.成绩)</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.课程号</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">avg</span>(cj.成绩) &gt; <span class="number">80</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--14. 查询每个专业所有姓张的人数</span></span><br><span class="line"><span class="keyword">select</span> xs.专业,<span class="keyword">count</span>(*) 人数</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.姓名 <span class="keyword">like</span> <span class="string">'张%'</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xs.专业</span><br><span class="line"> </span><br><span class="line"><span class="comment">--15. 查询各种姓氏的人数（假设没有复姓）</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">left</span>(xs.姓名,<span class="number">1</span>),<span class="keyword">count</span>(<span class="keyword">left</span>(xs.姓名,<span class="number">1</span>)) 人数</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">left</span>(xs.姓名,<span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">--16.查询选修课程超过5门的学生的学号和选课门数，以及平均成绩</span></span><br><span class="line"><span class="keyword">select</span> cj.学号,<span class="keyword">count</span>(cj.课程号) 选课门数,<span class="keyword">avg</span>(cj.成绩) 平均成绩</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.学号</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(cj.课程号) &gt; <span class="number">5</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--17. 查询选修‘J001’课程的成绩排名前五的学生的学号和成绩</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">5</span> cj.学号,cj.成绩</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> cj.课程号 = <span class="string">'J001'</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> cj.成绩 <span class="keyword">desc</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--18.查询每个学生的最低分和选课门数</span></span><br><span class="line"><span class="keyword">select</span> cj.学号,<span class="keyword">min</span>(cj.成绩) 最低分,<span class="keyword">count</span>(cj.课程号) 选课门数</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.学号</span><br><span class="line"> </span><br><span class="line"><span class="comment">--19. 查询各个专业各种性别的人数</span></span><br><span class="line"><span class="keyword">select</span> xs.专业,xs.性别,<span class="keyword">count</span>(xs.性别) 人数</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xs.专业,xs.性别</span><br><span class="line"> </span><br><span class="line"><span class="comment">--20.查询各个专业男生的人数</span></span><br><span class="line"><span class="keyword">select</span> xs.专业,<span class="keyword">count</span>(xs.性别) 人数</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.性别 = <span class="string">'男'</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xs.专业</span><br><span class="line"> </span><br><span class="line"><span class="comment">--21. 列出有二门以上课程（含两门）不及格的学生的学号及该学生的平均成绩；</span></span><br><span class="line"><span class="comment">/*select cj.学号,avg(cj.成绩) 平均成绩</span></span><br><span class="line"><span class="comment">from cj</span></span><br><span class="line"><span class="comment">where cj.成绩 &lt; 60</span></span><br><span class="line"><span class="comment">group by cj.学号</span></span><br><span class="line"><span class="comment">having count(cj.成绩) &gt;= 2</span></span><br><span class="line"><span class="comment">单表无法实现，因为where执行之后只剩不及格科目成绩求平均值*/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--22. 显示学号第五位或者第六位是1、2、3、4或者9的学生的学号、姓名、性别、年龄及专业；</span></span><br><span class="line"><span class="keyword">select</span> xs.学号,xs.姓名,xs.性别,<span class="keyword">datediff</span>(yy,xs.出生时间,<span class="keyword">getdate</span>()) 年龄,xs.专业</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> xs.学号 <span class="keyword">like</span> <span class="string">'____[1,2,3,4,9]%'</span> <span class="keyword">or</span> xs.学号 <span class="keyword">like</span> <span class="string">'_____[1,2,3,4,9]%'</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--23. 显示选修课程数最多的学号及选修课程数最少的学号；</span></span><br><span class="line"><span class="keyword">select</span> cj.学号</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.学号</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(cj.课程号)&gt;=<span class="keyword">all</span>(</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(cj.课程号)</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.学号</span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">select</span> cj.学号</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.学号</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(cj.课程号)&lt;=<span class="keyword">all</span>(</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(cj.课程号)</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.学号</span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line"><span class="comment">--24. 查询选修了A001或者A002或者J001或者J002课程的学生的学号和课程号</span></span><br><span class="line"><span class="keyword">select</span> cj.学号,cj.课程号</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> cj.课程号 <span class="keyword">in</span> (<span class="string">'A001'</span>,<span class="string">'A002'</span>,<span class="string">'J001'</span>,<span class="string">'J002'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">--25. 查询姓名为两个字的不同姓氏的人数，输出姓氏，人数。</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">left</span>(xs.姓名,<span class="number">1</span>) 姓氏,<span class="keyword">count</span>(<span class="keyword">left</span>(xs.姓名,<span class="number">1</span>)) 人数</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">len</span>(xs.姓名) = <span class="number">2</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">left</span>(xs.姓名,<span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">--二：对书上第二章课后习题的4的SPJ数据库各表查询： </span></span><br><span class="line"><span class="comment">--1.求供应工程J1零件的供应商号码SNO</span></span><br><span class="line"><span class="keyword">select</span> SPJ.sno</span><br><span class="line"><span class="keyword">from</span> SPJ</span><br><span class="line"><span class="keyword">where</span> SPJ.jno=<span class="string">'J1'</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--2.求查询每个工程使用不同供应商的零件的个数</span></span><br><span class="line"><span class="keyword">select</span> SPJ.jno,SPJ.pno,<span class="keyword">sum</span>(SPJ.qty) 个数</span><br><span class="line"><span class="keyword">from</span> SPJ</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> SPJ.jno,SPJ.pno</span><br><span class="line"> </span><br><span class="line"><span class="comment">--3.求供应工程使用零件P3数量超过200的工程号JNO</span></span><br><span class="line"><span class="keyword">select</span> SPJ.jno</span><br><span class="line"><span class="keyword">from</span> SPJ</span><br><span class="line"><span class="keyword">where</span> SPJ.pno = <span class="string">'P3'</span> <span class="keyword">and</span> SPJ.qit &gt; <span class="number">200</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--4.求颜色为红色和蓝色的零件的零件号和名称</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> pno, pname</span><br><span class="line"><span class="keyword">from</span> p</span><br><span class="line"><span class="keyword">where</span> color <span class="keyword">in</span> (<span class="string">'蓝'</span>,<span class="string">'红'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">--5.求使用零件数量在200-400之间的工程号</span></span><br><span class="line"><span class="keyword">select</span> SPJ.jno</span><br><span class="line"><span class="keyword">from</span> SPJ</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> SPJ.jno</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">sum</span>(SPJ.qty) <span class="keyword">between</span> <span class="number">200</span> <span class="keyword">and</span> <span class="number">400</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--6.查询每种零件的零件号，以及使用该零件的工程数。</span></span><br><span class="line"><span class="keyword">select</span> SPJ.pno,<span class="keyword">count</span>(<span class="keyword">DISTINCT</span> SPJ.jno) 工程数</span><br><span class="line"><span class="keyword">from</span> SPJ</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> SPJ.pno</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Data Base Management System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构实验二</title>
      <link href="/2019/09/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C%E4%BA%8C/"/>
      <url>/2019/09/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><h2 id="1-第一次实验的顺序实现"><a href="#1-第一次实验的顺序实现" class="headerlink" title="1.第一次实验的顺序实现"></a>1.第一次实验的顺序实现</h2><h2 id="2-顺序栈的实现"><a href="#2-顺序栈的实现" class="headerlink" title="2.顺序栈的实现"></a>2.顺序栈的实现</h2><h2 id="3-N个元素的序列的所有出栈可能"><a href="#3-N个元素的序列的所有出栈可能" class="headerlink" title="3.N个元素的序列的所有出栈可能"></a>3.N个元素的序列的所有出栈可能</h2><h2 id="1-第一次实验"><a href="#1-第一次实验" class="headerlink" title="1.第一次实验"></a>1.第一次实验</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIST_INIT_SIZE 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>LISTINCREMENT 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ElemType int </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">ElemType *elem;</span><br><span class="line"><span class="keyword">int</span> length;</span><br><span class="line"><span class="keyword">int</span> listsize;</span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitList_Sq</span><span class="params">(SqList &amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">L.elem = (ElemType*)<span class="built_in">malloc</span>(LIST_INIT_SIZE * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line">L.length = <span class="number">0</span>;</span><br><span class="line">L.listsize = LIST_INIT_SIZE;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">InputList_Sq</span><span class="params">(SqList &amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ElemType n, temp;</span><br><span class="line">ElemType *p, *q;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入集合的元素个数：\n"</span>);</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">if</span> (n &lt; <span class="number">1</span> || n &gt; L.listsize) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入有误\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (L.length + n &gt;= L.listsize) &#123;</span><br><span class="line">L.elem = (ElemType*)<span class="built_in">realloc</span>(L.elem, (L.length + n - L.listsize + LISTINCREMENT) * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line">L.listsize += (L.length + n - L.listsize + LISTINCREMENT);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入元素："</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">q = &amp;(L.elem[i]);</span><br><span class="line">*q = temp;</span><br><span class="line">++L.length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MergeList_Sq</span><span class="params">(SqList La, SqList Lb, SqList &amp;Lc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ElemType *pa, *pb, *pc, *pa_last, *pb_last;</span><br><span class="line">pa = La.elem;</span><br><span class="line">pb = Lb.elem;</span><br><span class="line">Lc.listsize = Lc.length = La.length + Lb.length;</span><br><span class="line">pc = Lc.elem = (ElemType*)<span class="built_in">malloc</span>(Lc.listsize * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line">pa_last = La.elem + La.length - <span class="number">1</span>;</span><br><span class="line">pb_last = Lb.elem + Lb.length - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (pa &lt;= pa_last &amp;&amp; pb &lt;= pb_last) &#123;</span><br><span class="line"><span class="keyword">if</span> (*pa &lt; *pb)</span><br><span class="line">*pc++ = *pa++;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">*pc++ = *pb++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (pa &lt;= pa_last)*pc++ = *pa++;</span><br><span class="line"><span class="keyword">while</span> (pb &lt;= pb_last)*pc++ = *pb++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Show_Sq</span><span class="params">(SqList L, <span class="keyword">char</span> name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"集合%c中的元素为："</span>,name);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L.length; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (L.elem[i] != L.elem[i + <span class="number">1</span>]) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; L.elem[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"去重后的元素个数为：%d\n"</span>, cnt);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SqList La, Lb, Lc;</span><br><span class="line">InitList_Sq(La);</span><br><span class="line">InitList_Sq(Lb);</span><br><span class="line">InitList_Sq(Lc);</span><br><span class="line">InputList_Sq(La); </span><br><span class="line">InputList_Sq(Lb);</span><br><span class="line">sort(La.elem, La.elem + La.length);</span><br><span class="line">sort(Lb.elem, Lb.elem + Lb.length);</span><br><span class="line">Show_Sq(La,<span class="string">'A'</span>);</span><br><span class="line">Show_Sq(Lb,<span class="string">'B'</span>);</span><br><span class="line">MergeList_Sq(La, Lb, Lc);</span><br><span class="line">Show_Sq(Lc,<span class="string">'C'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-顺序栈的实现-1"><a href="#2-顺序栈的实现-1" class="headerlink" title="2.顺序栈的实现"></a>2.顺序栈的实现</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STACK_INIT_SIZE 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STACKINCREMENT 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SElemType int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">SElemType *base;</span><br><span class="line">SElemType *top;</span><br><span class="line"><span class="keyword">int</span> stacksize;</span><br><span class="line">&#125;SqStack;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitStack</span><span class="params">(SqStack &amp;S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">S.base = (SElemType*)<span class="built_in">malloc</span>(STACK_INIT_SIZE * <span class="keyword">sizeof</span>(SElemType));</span><br><span class="line">S.top = S.base;</span><br><span class="line">S.stacksize = STACK_INIT_SIZE;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetTop</span><span class="params">(SqStack S, SElemType &amp;e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (S.top == S.base)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">e = *(S.top - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Push</span><span class="params">(SqStack &amp;S, SElemType &amp;e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (S.top - S.base &gt;= S.stacksize) &#123;</span><br><span class="line">S.base = (SElemType*)<span class="built_in">realloc</span>(S.base, (S.stacksize + STACKINCREMENT) * <span class="keyword">sizeof</span>(SElemType));</span><br><span class="line">S.top = S.base + S.stacksize;</span><br><span class="line">S.stacksize += STACKINCREMENT;</span><br><span class="line">&#125;</span><br><span class="line">*S.top++ = e;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Pop</span><span class="params">(SqStack &amp;S, SElemType &amp;e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (S.top == S.base)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">e = *--S.top;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Show</span><span class="params">(SqStack S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"栈中现有元素为： |"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> it = S.base; it &lt; S.top; it++)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *it &lt;&lt; <span class="string">" "</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> p;</span><br><span class="line">SElemType x;</span><br><span class="line">SqStack S;</span><br><span class="line">InitStack(S);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请选择您要进行的操作(1代表Push 2代表Pop 0代表退出) ："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;p);</span><br><span class="line"><span class="keyword">if</span> (p == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入要压入栈中的元素："</span>);</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">Push(S, x);</span><br><span class="line">Show(S);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (p == <span class="number">2</span>) &#123;</span><br><span class="line">SElemType e = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (Pop(S, e)) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"出栈元素为："</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; e &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">Show(S);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"栈中没有元素\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">Show(S);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-所有出栈可能"><a href="#3-所有出栈可能" class="headerlink" title="3.所有出栈可能"></a>3.所有出栈可能</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> total, res, sta, n;</span><br><span class="line"><span class="keyword">int</span> r[<span class="number">2005</span>], s[<span class="number">2005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (m == n + <span class="number">1</span>) &#123;<span class="comment">//若所有元素都入过栈，输出当前出栈序列</span></span><br><span class="line">total++;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= res; i++)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; r[i] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = sta; i &gt; <span class="number">0</span>; i--)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; s[i] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sta &gt; <span class="number">0</span>) &#123;</span><br><span class="line">r[++res] = s[sta];</span><br><span class="line">sta--;</span><br><span class="line">dfs(m);<span class="comment">//栈顶元素出栈</span></span><br><span class="line">s[++sta] = r[res];</span><br><span class="line">res--;<span class="comment">//回溯操作</span></span><br><span class="line">&#125;</span><br><span class="line">s[++sta] = m;<span class="comment">//当前元素入栈</span></span><br><span class="line">dfs(m + <span class="number">1</span>);</span><br><span class="line">sta--;<span class="comment">//回溯操作</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入元素个数："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">total = <span class="number">0</span>; res = <span class="number">0</span>; sta = <span class="number">0</span>;</span><br><span class="line">dfs(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"共有%d种情况"</span>, total);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行界面"><a href="#运行界面" class="headerlink" title="运行界面"></a>运行界面</h2><p><img alt="sy" data-src="https://s2.ax1x.com/2019/11/04/KzaicR.png" class="lazyload"></p><h3 id="顺序栈的实现"><a href="#顺序栈的实现" class="headerlink" title="顺序栈的实现"></a>顺序栈的实现</h3><p><img alt="sy" data-src="https://s2.ax1x.com/2019/11/04/KzaaCQ.png" class="lazyload"></p><h3 id="所有出栈可能"><a href="#所有出栈可能" class="headerlink" title="所有出栈可能"></a>所有出栈可能</h3><p><img alt="sy" data-src="https://s2.ax1x.com/2019/11/04/KzahvR.png" class="lazyload"></p>]]></content>
      
      
      <categories>
          
          <category> Algorithms and Data Structures </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Structure Experiment </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构实验一</title>
      <link href="/2019/09/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C%E4%B8%80/"/>
      <url>/2019/09/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><h2 id="1-算法2-1"><a href="#1-算法2-1" class="headerlink" title="1.算法2.1"></a>1.算法2.1</h2><h2 id="2-分别用链式和顺序表实现"><a href="#2-分别用链式和顺序表实现" class="headerlink" title="2.分别用链式和顺序表实现"></a>2.分别用链式和顺序表实现</h2><h2 id="3-所涉及的基本操作全部用函数实现"><a href="#3-所涉及的基本操作全部用函数实现" class="headerlink" title="3.所涉及的基本操作全部用函数实现"></a>3.所涉及的基本操作全部用函数实现</h2><h2 id="链式存储"><a href="#链式存储" class="headerlink" title="链式存储"></a>链式存储</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> data;</span><br><span class="line">LNode *next;</span><br><span class="line">&#125;LNode,*LinkList;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">List_initialize</span><span class="params">(LinkList &amp;L, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LNode* p;</span><br><span class="line">L = (LNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">L-&gt;next = <span class="literal">NULL</span>; </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">p = (LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;p-&gt;data); </span><br><span class="line">p-&gt;next = L-&gt;next; </span><br><span class="line">L-&gt;next = p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a == b)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">List_show</span><span class="params">(LNode *head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LNode *p = head-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (p != <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,p-&gt;data);</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetElem</span><span class="params">(LNode *L, <span class="keyword">int</span> pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LNode *p = L-&gt;next;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pos - <span class="number">1</span>; i++)</span><br><span class="line">p = p-&gt;next;</span><br><span class="line"><span class="keyword">return</span> p-&gt;data;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Listlen</span><span class="params">(LNode *head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LNode *p = head-&gt;next;</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (p)&#123;</span><br><span class="line">len++;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">List_insert</span><span class="params">(LinkList &amp;L, <span class="keyword">int</span> i, <span class="keyword">int</span> e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">LNode *p = L;</span><br><span class="line">LNode *s;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (p &amp;&amp; j &lt; i - <span class="number">1</span>) &#123;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">++j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!p)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">s = (LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">s-&gt;data = e;</span><br><span class="line">s-&gt;next = p-&gt;next;</span><br><span class="line">p-&gt;next = s;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LNode* <span class="title">List_only</span><span class="params">(LNode *head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LNode *p, *q, *s;</span><br><span class="line">p = head-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (p-&gt;next != <span class="literal">NULL</span>)&#123;</span><br><span class="line">q = p;</span><br><span class="line"><span class="keyword">while</span> (q-&gt;next != <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (q-&gt;next-&gt;data == p-&gt;data)&#123;</span><br><span class="line">s = q-&gt;next;</span><br><span class="line">q-&gt;next = s-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">q = q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">List_union</span><span class="params">(LinkList &amp;L1, LinkList L2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList p, q, s;</span><br><span class="line">p = L1;</span><br><span class="line">q = L2;</span><br><span class="line"><span class="keyword">while</span> (p-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">while</span> (q-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;next-&gt;data == q-&gt;next-&gt;data)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">q = q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (q-&gt;next == <span class="literal">NULL</span>) &#123;</span><br><span class="line">s = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">s-&gt;data = p-&gt;next-&gt;data;</span><br><span class="line">s-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">q-&gt;next = s;</span><br><span class="line">&#125;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">q = L2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> lena, lenb;</span><br><span class="line">LinkList la, lb;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入集合A的元素个数："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;lena);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入集合A元素："</span>);</span><br><span class="line">List_initialize(la, lena);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"原集合A："</span>);</span><br><span class="line">List_show(la);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">List_only(la);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"集合去重后个数："</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,Listlen(la));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"删除重复元素后的集合A为："</span>);</span><br><span class="line">List_show(la);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入集合B的元素个数："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;lenb);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入集合B元素："</span>);</span><br><span class="line">List_initialize(lb, lenb);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"集合B："</span>);</span><br><span class="line">List_show(lb);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">List_only(lb);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"集合去重后个数："</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, Listlen(lb));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"删除重复元素后的集合B为："</span>);</span><br><span class="line">List_show(lb);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"A和B的并集为："</span>);</span><br><span class="line">List_union(la, lb);</span><br><span class="line">List_only(la);</span><br><span class="line">List_show(la);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行界面"><a href="#运行界面" class="headerlink" title="运行界面"></a>运行界面</h3><p><img alt="sy" data-src="https://s2.ax1x.com/2019/11/04/Kzazrt.png" class="lazyload"></p><h2 id="顺序表存储"><a href="#顺序表存储" class="headerlink" title="顺序表存储"></a>顺序表存储</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10000</span>], b[<span class="number">10000</span>];</span><br><span class="line"><span class="keyword">int</span> lena, lenb;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">arrayA_initialize</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//输入集合A</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入集合元素个数(小于10000)："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;lena);</span><br><span class="line"><span class="keyword">while</span> (lena &gt;= <span class="number">10000</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"超出最大容量\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请重新输入\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入集合A元素个数(小于10000)："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;lena);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入集合A元素："</span>);</span><br><span class="line"><span class="keyword">int</span> temp, cnta = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; lena; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;temp);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;<span class="comment">//去重</span></span><br><span class="line"><span class="keyword">if</span> (temp == a[j])</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line">a[cnta] = temp;</span><br><span class="line">cnta++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">lena = cnta;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"数组A的长度最终为： %d\n"</span>, lena);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"去重后的数组A为 ：\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lena; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">arrayB_initialize</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//输入集合B</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入集合B元素个数(小于10000)："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;lenb);</span><br><span class="line"><span class="keyword">while</span> (lenb &gt;= <span class="number">10000</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"超出最大容量\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请重新输入\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入集合B元素个数(小于10000)："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;lenb);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入集合B元素："</span>);</span><br><span class="line"><span class="keyword">int</span> temp, cntb = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; lenb; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;temp);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;<span class="comment">//去重</span></span><br><span class="line"><span class="keyword">if</span> (temp == b[j])</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line">b[cntb] = temp;</span><br><span class="line">cntb++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">lenb = cntb;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"数组B的长度最终为： %d\n"</span>, lenb);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"去重后的数组B为 ：\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lenb; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, b[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> b, <span class="keyword">int</span> lena)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> left = <span class="number">0</span>, right = lena - <span class="number">1</span>, mid;</span><br><span class="line"><span class="keyword">while</span> (left &lt;= right)&#123;</span><br><span class="line">mid = (right + left) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (a[mid] == b)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a[mid] &gt; b)&#123;</span><br><span class="line">right = mid - <span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">left = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">array_insert</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> lena, <span class="keyword">int</span> b[], <span class="keyword">int</span> lenb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//将所有在数组B中但不在A中的数据元素插入到A中</span></span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lenb; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (binarySearch(a, b[i], lena) == <span class="number">-1</span>) &#123;</span><br><span class="line">a[lena + cnt] = b[i];</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">lena += cnt;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"A与B合并后的集合为：\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lena; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">arrayA_initialize();</span><br><span class="line">arrayB_initialize();</span><br><span class="line">array_insert(a, lena, b, lenb);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行界面-1"><a href="#运行界面-1" class="headerlink" title="运行界面"></a>运行界面</h3><p><img alt="sy" data-src="https://s2.ax1x.com/2019/11/04/KzdZMn.png" class="lazyload"></p>]]></content>
      
      
      <categories>
          
          <category> Algorithms and Data Structures </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data Structure Experiment </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
